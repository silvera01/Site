{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/browserconfig.xml","path":"browserconfig.xml","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/logo.png","path":"logo.png","modified":0,"renderable":0},{"_id":"source/logo.svg","path":"logo.svg","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-114x114.png","path":"icon/apple-touch-icon-114x114.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-120x120.png","path":"icon/apple-touch-icon-120x120.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-144x144.png","path":"icon/apple-touch-icon-144x144.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-152x152.png","path":"icon/apple-touch-icon-152x152.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-57x57.png","path":"icon/apple-touch-icon-57x57.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-60x60.png","path":"icon/apple-touch-icon-60x60.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-72x72.png","path":"icon/apple-touch-icon-72x72.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-76x76.png","path":"icon/apple-touch-icon-76x76.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon-precomposed.png","path":"icon/apple-touch-icon-precomposed.png","modified":0,"renderable":0},{"_id":"source/icon/apple-touch-icon.png","path":"icon/apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/icon/favicon-160x160.png","path":"icon/favicon-160x160.png","modified":0,"renderable":0},{"_id":"source/icon/favicon-16x16.png","path":"icon/favicon-16x16.png","modified":0,"renderable":0},{"_id":"source/icon/favicon-196x196.png","path":"icon/favicon-196x196.png","modified":0,"renderable":0},{"_id":"source/icon/favicon-32x32.png","path":"icon/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/icon/favicon-96x96.png","path":"icon/favicon-96x96.png","modified":0,"renderable":0},{"_id":"source/icon/mstile-144x144.png","path":"icon/mstile-144x144.png","modified":0,"renderable":0},{"_id":"source/icon/mstile-150x150.png","path":"icon/mstile-150x150.png","modified":0,"renderable":0},{"_id":"source/icon/mstile-310x150.png","path":"icon/mstile-310x150.png","modified":0,"renderable":0},{"_id":"source/icon/mstile-310x310.png","path":"icon/mstile-310x310.png","modified":0,"renderable":0},{"_id":"source/icon/mstile-70x70.png","path":"icon/mstile-70x70.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Adoubi.png","path":"themes/screenshots/Adoubi.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Cafe.png","path":"themes/screenshots/Cafe.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Chan.png","path":"themes/screenshots/Chan.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Daily.png","path":"themes/screenshots/Daily.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/LightOne.png","path":"themes/screenshots/LightOne.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Material.png","path":"themes/screenshots/Material.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/MyFairLady.png","path":"themes/screenshots/MyFairLady.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/NexT.png","path":"themes/screenshots/NexT.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Nova.png","path":"themes/screenshots/Nova.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Simplest.png","path":"themes/screenshots/Simplest.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Weightless.png","path":"themes/screenshots/Weightless.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Wixo.png","path":"themes/screenshots/Wixo.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/carbon.png","path":"themes/screenshots/carbon.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/light.png","path":"themes/screenshots/light.png","modified":0,"renderable":0},{"_id":"themes/navy/source/css/navy.styl","path":"css/navy.styl","modified":0,"renderable":1},{"_id":"themes/navy/source/js/lang_select.js","path":"js/lang_select.js","modified":0,"renderable":1},{"_id":"themes/navy/source/js/mobile_nav.js","path":"js/mobile_nav.js","modified":0,"renderable":1},{"_id":"themes/navy/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/navy/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"source/themes/screenshots/Aero-Dual.png","path":"themes/screenshots/Aero-Dual.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Bootstrap-Blog.png","path":"themes/screenshots/Bootstrap-Blog.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Cactus Dark.png","path":"themes/screenshots/Cactus Dark.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Even.png","path":"themes/screenshots/Even.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Flexy.png","path":"themes/screenshots/Flexy.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Foundation.png","path":"themes/screenshots/Foundation.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Freemind.png","path":"themes/screenshots/Freemind.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Maupassant.png","path":"themes/screenshots/Maupassant.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Overdose.png","path":"themes/screenshots/Overdose.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Typing.png","path":"themes/screenshots/Typing.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/concise.png","path":"themes/screenshots/concise.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/hexo-fabric.png","path":"themes/screenshots/hexo-fabric.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/hollow.png","path":"themes/screenshots/hollow.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/jane.png","path":"themes/screenshots/jane.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/legend.png","path":"themes/screenshots/legend.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/wiki-i18n.png","path":"themes/screenshots/wiki-i18n.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/yinwang.png","path":"themes/screenshots/yinwang.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/zzoman2015.png","path":"themes/screenshots/zzoman2015.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Raytaylorism.png","path":"themes/screenshots/Raytaylorism.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/AlphaDust.png","path":"themes/screenshots/AlphaDust.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Anatole.png","path":"themes/screenshots/Anatole.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Anisina.png","path":"themes/screenshots/Anisina.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Apollo.png","path":"themes/screenshots/Apollo.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Corporate.png","path":"themes/screenshots/Corporate.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Free2mind.png","path":"themes/screenshots/Free2mind.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Hiero.png","path":"themes/screenshots/Hiero.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Jacman.png","path":"themes/screenshots/Jacman.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Jekyll.png","path":"themes/screenshots/Jekyll.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Noise.png","path":"themes/screenshots/Noise.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Nuna.png","path":"themes/screenshots/Nuna.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Oishi.png","path":"themes/screenshots/Oishi.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Primer.png","path":"themes/screenshots/Primer.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Yelee.png","path":"themes/screenshots/Yelee.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Simple.png","path":"themes/screenshots/Simple.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Again.png","path":"themes/screenshots/Again.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/BlueLake.png","path":"themes/screenshots/BlueLake.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Hacker.png","path":"themes/screenshots/Hacker.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Paperbox.png","path":"themes/screenshots/Paperbox.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Phantom.png","path":"themes/screenshots/Phantom.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Tranquilpeak.png","path":"themes/screenshots/Tranquilpeak.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Very-Simple.png","path":"themes/screenshots/Very-Simple.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/gstyle.png","path":"themes/screenshots/gstyle.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/indigo.png","path":"themes/screenshots/indigo.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/phase.png","path":"themes/screenshots/phase.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/ttstyle.png","path":"themes/screenshots/ttstyle.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/yujuan.png","path":"themes/screenshots/yujuan.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/CleanBlog.png","path":"themes/screenshots/CleanBlog.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Hueman.png","path":"themes/screenshots/Hueman.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Pixel.png","path":"themes/screenshots/Pixel.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/QnA.png","path":"themes/screenshots/QnA.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Smackdown.png","path":"themes/screenshots/Smackdown.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/X'new.png","path":"themes/screenshots/X'new.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/casual.png","path":"themes/screenshots/casual.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/landscape.png","path":"themes/screenshots/landscape.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/simpleblock.png","path":"themes/screenshots/simpleblock.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Hipaper.png","path":"themes/screenshots/Hipaper.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/MeiliDu.png","path":"themes/screenshots/MeiliDu.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Pln.png","path":"themes/screenshots/Pln.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Typescript.png","path":"themes/screenshots/Typescript.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/hexoThemeKacper.png","path":"themes/screenshots/hexoThemeKacper.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/mls.png","path":"themes/screenshots/mls.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Freemind.386.png","path":"themes/screenshots/Freemind.386.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Icarus.png","path":"themes/screenshots/Icarus.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Laughing.png","path":"themes/screenshots/Laughing.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Minos.png","path":"themes/screenshots/Minos.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/varaint.png","path":"themes/screenshots/varaint.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Line.png","path":"themes/screenshots/Line.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/spfk.png","path":"themes/screenshots/spfk.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Ada.png","path":"themes/screenshots/Ada.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/CyanStyle.png","path":"themes/screenshots/CyanStyle.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Hiker.png","path":"themes/screenshots/Hiker.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/LandFarZ.png","path":"themes/screenshots/LandFarZ.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Aloha.png","path":"themes/screenshots/Aloha.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Random.png","path":"themes/screenshots/Random.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Magnetic.png","path":"themes/screenshots/Magnetic.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/hexadillax.png","path":"themes/screenshots/hexadillax.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/pteris.png","path":"themes/screenshots/pteris.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/Huxblog.png","path":"themes/screenshots/Huxblog.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/beautiful-hexo.png","path":"themes/screenshots/beautiful-hexo.png","modified":0,"renderable":0},{"_id":"source/themes/screenshots/strata.png","path":"themes/screenshots/strata.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"bacf1addbc2108243f9a0c04c290e47975c41a37","modified":1484795440259},{"_id":"source/browserconfig.xml","hash":"f54412705ab9eb69b544f438c9a1e15ae57f27c0","modified":1484795440267},{"_id":"source/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1484795440267},{"_id":"source/index.jade","hash":"16f111ed08de860e6a7a65c8c8b339d17baa8a43","modified":1484795440267},{"_id":"source/logo.png","hash":"a1e49e14162d7f2bc717111f8f07c86cb5ae84df","modified":1484795440271},{"_id":"source/logo.svg","hash":"6657ba50e702d84afb32fe846bed54fba1a77add","modified":1484795440271},{"_id":"source/robots.txt","hash":"55107e568647402d4e0d108be00fce6bded104d8","modified":1484795440271},{"_id":"source/_data/languages.yml","hash":"74e55635eb66bb12833e42f0d1057b03beb65bcf","modified":1484796704244},{"_id":"source/_data/menu.yml","hash":"4dd71b7c1d0cf23cfc296c0d00a78313d0d34b82","modified":1484795440259},{"_id":"source/_data/plugins.yml","hash":"21751c7c208cb6f84856f08b5dffbadff21d9c28","modified":1484795440259},{"_id":"source/_data/sidebar.yml","hash":"3aef71a0031715c7dfb09c8bce01b880090f5fb8","modified":1484795440259},{"_id":"source/_data/themes.yml","hash":"9979b09b2768fa57682c7164eba23805da93750f","modified":1484795440259},{"_id":"source/_posts/2014-06-14-hexo-2-7-released.md","hash":"42c84015c54ab9f4eae7c9872c4424d3e206b85f","modified":1484795440259},{"_id":"source/_posts/2014-07-13-hexo-2-8-released.md","hash":"d4808f72f9477ece3e12da24cf1bd1d7ea50d9df","modified":1484795440259},{"_id":"source/_posts/2015-02-27-new-documentation-and-registry.md","hash":"5d3c2e2beba6c567fcd1a1e229ac7e318a0c16ea","modified":1484795440263},{"_id":"source/_posts/2015-03-05-hexo-3-0-released.md","hash":"20d170ee5735a312cfc052e136fed7e304a4d1f7","modified":1484795440263},{"_id":"source/_posts/2016-02-28-hexo-3-2-released.md","hash":"5f3fbf7f9b4fdd625ae23829b648afb995dc11e9","modified":1484795440263},{"_id":"source/api/box.md","hash":"ce97130683fad882efdaaa499e8604bf9bfc59b8","modified":1484795440267},{"_id":"source/api/console.md","hash":"1c81b3635a459321ef9ea7754267ca1f54f45c3b","modified":1484795440267},{"_id":"source/api/deployer.md","hash":"c82e3fcb932451b46fc90d0a1aab79cf10cb27fa","modified":1484795440267},{"_id":"source/api/events.md","hash":"02f4a0a0ce57881a55b35208c242f295866a3bdc","modified":1484795440267},{"_id":"source/api/filter.md","hash":"bcba3cf2ec41a33b5e40fb3d9b6a2009b392084d","modified":1484795440267},{"_id":"source/api/generator.md","hash":"14908e6b291bb10f872a70aae7a112e18df0b9c1","modified":1484795440267},{"_id":"source/api/helper.md","hash":"24a4764a77c8a54bd35d728ad72647c43500acd6","modified":1484795440267},{"_id":"source/api/index.md","hash":"2b80dda825de9f11bed4bddefc35c9feec57e4a8","modified":1484795440267},{"_id":"source/api/locals.md","hash":"d25ad89d34168e688202acaff8a6d5ff2f59ba0a","modified":1484795440267},{"_id":"source/api/migrator.md","hash":"2940d2b93406f6267da0f7e3923df175e9dd5df9","modified":1484795440267},{"_id":"source/api/posts.md","hash":"830520227b38f5070c0d186708a3b63cf932cbdb","modified":1484795440267},{"_id":"source/api/processor.md","hash":"b45b04440c07044435368a0d91b95a4d55a97bb9","modified":1484795440267},{"_id":"source/api/renderer.md","hash":"32d91081b0cf467baca4ec68b239798a5c807b98","modified":1484795440267},{"_id":"source/api/rendering.md","hash":"2c61fe9909ad12264649b797002f034addf58c77","modified":1484795440267},{"_id":"source/api/router.md","hash":"2ec4b1cda80c235a3a4e73e1015e8c6f4af2e5b3","modified":1484795440267},{"_id":"source/api/scaffolds.md","hash":"fad4cfb68958a2145102cee85152bad3feda1580","modified":1484795440267},{"_id":"source/api/tag.md","hash":"10052dafaae6ad9fcbd3d02fa11dad2e384552ee","modified":1484795440267},{"_id":"source/api/themes.md","hash":"c066cebbb72324834d94174add2a160819d30014","modified":1484795440267},{"_id":"source/docs/asset-folders.md","hash":"079aeac606895bcf0b4aed20d1451605597922b0","modified":1484795440267},{"_id":"source/docs/commands.md","hash":"e8dde969ff6e7a6288e179f52c0428632e78d8f3","modified":1484795440267},{"_id":"source/docs/configuration.md","hash":"db350e0070f321849c079ab2930f5cb894925b01","modified":1484795440267},{"_id":"source/docs/contributing.md","hash":"0d43a7ca29eb931b010dc26a9b0d16f6d40ddc3e","modified":1484795440267},{"_id":"source/docs/data-files.md","hash":"99ccbe40eaecf9f4a8a8abdfd3292621e547bcf8","modified":1484795440267},{"_id":"source/docs/deployment.md","hash":"3031e0ae17186c23d9fc1567c2c090a014e34e64","modified":1484795440267},{"_id":"source/docs/front-matter.md","hash":"ce59a503d37b48d5a2f45a9a016c173c9216a3fc","modified":1484795440267},{"_id":"source/docs/generating.md","hash":"b07b943b72ddac7e98763f52c301a4bbff6a4ab1","modified":1484795440267},{"_id":"source/docs/helpers.md","hash":"098c7fb9b0978ad2f67a6ae46e3b183844cc754c","modified":1484795440267},{"_id":"source/docs/index.md","hash":"a163a12c6bf0d99b0b85974955b667979d6bcf02","modified":1484795440267},{"_id":"source/docs/internationalization.md","hash":"a9ce15f211d21f53e7fb2a1bd7c2daaad8435f32","modified":1484795440267},{"_id":"source/docs/migration.md","hash":"2db8b83236b5b60be3be86ca4545b0622fc42330","modified":1484795440267},{"_id":"source/docs/permalinks.md","hash":"a58b7fbf5cd233edce08b246d40c475bc608e5b1","modified":1484795440267},{"_id":"source/docs/plugins.md","hash":"fa8ab1b0b347b1cf636ee9668cc58d70c0652a1d","modified":1484795440267},{"_id":"source/docs/server.md","hash":"69a988b07b7a9f4d1cd96ed6564d72bc0640fc64","modified":1484795440267},{"_id":"source/docs/setup.md","hash":"47efa859f31bfdfd5b617d17e9840abaa50bbd5a","modified":1484795440267},{"_id":"source/docs/tag-plugins.md","hash":"e84f1143988fc07700d3e679278e31d3e2e95531","modified":1484795440267},{"_id":"source/docs/templates.md","hash":"e4d9241b8bad023149418a1b2c563ba06497b442","modified":1484795440267},{"_id":"source/docs/themes.md","hash":"4bb577398c2cf0e3719d0d697b816037bd87b221","modified":1484795440267},{"_id":"source/docs/troubleshooting.md","hash":"5f94fd90cdbc2f054d8cbea56990723c27da8b20","modified":1484795440267},{"_id":"source/docs/variables.md","hash":"2cace4f643abaaec56ce1ccfd9dbb82edb336565","modified":1484795440267},{"_id":"source/docs/writing.md","hash":"11df80cf07e695de9226cc5ff5ddda70a2cc4d51","modified":1484887017499},{"_id":"source/icon/apple-touch-icon-114x114.png","hash":"a4b2129fa51b447b676a5a34329bb498faca0ef5","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-120x120.png","hash":"8df23624cd19818fbcabdeda215b8765fc9d1923","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-144x144.png","hash":"d364758b94da28035a5741497fdc4ac54c6f8972","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-152x152.png","hash":"c099645d3bc12cb02f0bdad651edd280bbd86a9b","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-57x57.png","hash":"ccd4eeaa6897dc3b8f621f28f9f7e10db2ae3889","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-60x60.png","hash":"a4944c20a0c3f4a639c511269a7706663b01d375","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-72x72.png","hash":"0033140e4489f320044b028f9cae42f57cc44c21","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-76x76.png","hash":"29a8a2c698996bda55f1dd8dd9b8783cb91810a8","modified":1484795440267},{"_id":"source/icon/apple-touch-icon-precomposed.png","hash":"519e8654825c6e49054fe88949d946b1ef7d93e6","modified":1484795440267},{"_id":"source/icon/apple-touch-icon.png","hash":"c099645d3bc12cb02f0bdad651edd280bbd86a9b","modified":1484795440267},{"_id":"source/icon/favicon-160x160.png","hash":"2deeec3abde01dfef87220e399e1966b0b0cf876","modified":1484795440267},{"_id":"source/icon/favicon-16x16.png","hash":"a8ee7712f6560180efccb68546de6ea0d937fff3","modified":1484795440267},{"_id":"source/icon/favicon-196x196.png","hash":"0b74ef7924bb41982e55c71cbc6c5e483b9a609f","modified":1484795440267},{"_id":"source/icon/favicon-32x32.png","hash":"ab9bee1072060aa2f2cc9114daab236716887551","modified":1484795440267},{"_id":"source/icon/favicon-96x96.png","hash":"42fc76f6e615ab7e64dffa84ba41e731e0a28396","modified":1484795440267},{"_id":"source/icon/mstile-144x144.png","hash":"2b4d6d22388c6f4104018668e52275c29056b6e9","modified":1484795440267},{"_id":"source/icon/mstile-150x150.png","hash":"403b5695a36504b2a51231c02b227a72ce2247b9","modified":1484795440267},{"_id":"source/icon/mstile-310x150.png","hash":"b052f59d2db8eaeee9a3a99aa39b7ae4d3a93f54","modified":1484795440267},{"_id":"source/icon/mstile-310x310.png","hash":"c7692bfd39f62c93456349b67daaf573ecfdd8b4","modified":1484795440267},{"_id":"source/icon/mstile-70x70.png","hash":"c1d990cbbd5d62c991f41a1474fb95ac2e90e4e0","modified":1484795440267},{"_id":"source/ko/index.jade","hash":"bbc565e887c8bd69d95a666b5cc542a3c7d3f9e5","modified":1484795440271},{"_id":"source/plugins/index.md","hash":"3559a5b18670ac4bbf333c74aa4ad3577eeec9f6","modified":1484795440271},{"_id":"source/ru/index.jade","hash":"1378c816391eaeea0c8bd4aeb965fde432922c6d","modified":1484795440275},{"_id":"source/themes/index.md","hash":"202fe8ff6c5b1b371407ab5ba723453e006a043b","modified":1484795440275},{"_id":"source/zh-cn/index.jade","hash":"6ce50259c823909e0aa176bb4d8aad2550fdcd28","modified":1484795440387},{"_id":"source/zh-tw/index.jade","hash":"faef4e8cbb0f8b0ce5d196bfcc0142c2ba7be801","modified":1484795440391},{"_id":"themes/navy/languages/en.yml","hash":"3104bf659fbe7e812811e8d38baf10ff5c980ed7","modified":1484795440391},{"_id":"themes/navy/languages/ko.yml","hash":"3104bf659fbe7e812811e8d38baf10ff5c980ed7","modified":1484795440391},{"_id":"themes/navy/languages/ru.yml","hash":"aab3da1424143befae173649b5f7f6d6b5e9f050","modified":1484795440391},{"_id":"themes/navy/languages/zh-cn.yml","hash":"63caf2f126ef671001e94aa050159d7846dc6894","modified":1484795440391},{"_id":"themes/navy/languages/zh-tw.yml","hash":"96dcf3de956fc7963d22988f041e5f7c583d4c15","modified":1484795440391},{"_id":"themes/navy/layout/archive.swig","hash":"6076f145cb3bcc55353e1c6169f4ea7f42461af2","modified":1484795440391},{"_id":"themes/navy/layout/index.swig","hash":"55204ac89cd506f3cca5d85f26909e58d0d5d43a","modified":1484796826419},{"_id":"themes/navy/layout/layout.swig","hash":"ef28a5f5fc3258622e72ee3a836ff8cf415fb790","modified":1484795440391},{"_id":"themes/navy/layout/page.swig","hash":"494bdb8e9f9044caa4016d9dbb3203a3143dd9e7","modified":1484795440391},{"_id":"themes/navy/layout/plugins.swig","hash":"ca573d80f04722504e0d1ed564ebb2395ebcd31d","modified":1484795440391},{"_id":"themes/navy/layout/post.swig","hash":"0478deebea5fd2dc6c2357edcac1cce4b105f712","modified":1484795440391},{"_id":"source/ko/api/box.md","hash":"5eca13469822628efbf11509c3f5df7af3ac2af6","modified":1484795440267},{"_id":"source/ko/api/console.md","hash":"32fd4619e1af158c4b38cf6806a4897658a53e8a","modified":1484795440267},{"_id":"source/ko/api/deployer.md","hash":"a6374c07b3cbbeaa90a1ba6c424f9b7476123d79","modified":1484795440267},{"_id":"source/ko/api/events.md","hash":"3a05cfef798e7070b2c3c7b38cfcc852bfb17a06","modified":1484795440271},{"_id":"source/ko/api/filter.md","hash":"271d57cf25ff0f7b31e6d390142c54d4db0b95a1","modified":1484795440271},{"_id":"source/ko/api/generator.md","hash":"ed526315d6a6de9a0d30d646a1380c81c36adf0b","modified":1484795440271},{"_id":"source/ko/api/helper.md","hash":"63cddb3293e707b0db85dbbd62c3ffb5781e0069","modified":1484795440271},{"_id":"source/ko/api/index.md","hash":"9c318c180021a227273547686009acb38a5e9b12","modified":1484795440271},{"_id":"source/ko/api/locals.md","hash":"dfdfbb72b0a20267469441bcec225c8036f15069","modified":1484795440271},{"_id":"source/ko/api/migrator.md","hash":"fe3d43ee8d5d93f2fed12730ff1da2f4e7b0d315","modified":1484795440271},{"_id":"source/ko/api/posts.md","hash":"94bc9507ab1d306b599784dba67c7ab4c2bbfa91","modified":1484795440271},{"_id":"source/ko/api/processor.md","hash":"e4b6275f432d255273d6ffc319b7969e5bf1d36a","modified":1484795440271},{"_id":"source/ko/api/renderer.md","hash":"2fb2c2ac6ef65bb5827c28e7c0a84267517c9141","modified":1484795440271},{"_id":"source/ko/api/rendering.md","hash":"b6a08708525632333eba69df6aad1f6d4270e64e","modified":1484795440271},{"_id":"source/ko/api/router.md","hash":"82648d177fac0b2c97c78e6f1b81cca398068776","modified":1484795440271},{"_id":"source/ko/api/scaffolds.md","hash":"3d072dc56466bb344d66eb87a0094c767b45e736","modified":1484795440271},{"_id":"source/ko/api/tag.md","hash":"59c88515850220227092b61d5539486f757b5bdd","modified":1484795440271},{"_id":"source/ko/api/themes.md","hash":"2046470bca30d603801a655c3f7308f1e7b777a0","modified":1484795440271},{"_id":"source/ko/docs/asset-folders.md","hash":"b748322d71c35addc8307d7c4df3bfc7ef7c95a5","modified":1484795440271},{"_id":"source/ko/docs/commands.md","hash":"ebd9946a17826422485e6707551cff6882802fa6","modified":1484795440271},{"_id":"source/ko/docs/configuration.md","hash":"3502d56bc8bb1289c07c85d9e1522c6394ca5e17","modified":1484795440271},{"_id":"source/ko/docs/contributing.md","hash":"4c4bfd9a6a4b82065d546470998a2ca2bc7422e2","modified":1484795440271},{"_id":"source/ko/docs/data-files.md","hash":"a4767625e502684e8eb81e4ead7f554ab9a4daa6","modified":1484795440271},{"_id":"source/ko/docs/deployment.md","hash":"498c1875f5dd899cfb2d3de7773d07165ed65f54","modified":1484795440271},{"_id":"source/ko/docs/front-matter.md","hash":"d41216ee29b59ddb2d9df6ff7d0a01c6eafe8bb8","modified":1484795440271},{"_id":"source/ko/docs/generating.md","hash":"cd4fe89a093a34d3a416cb83d905311271df054a","modified":1484795440271},{"_id":"source/ko/docs/helpers.md","hash":"59fa7f175224d11ae8af114205e62a76162e5bb7","modified":1484795440271},{"_id":"source/ko/docs/index.md","hash":"8a2c3fe2d8ceb6f5de24c820d242cbf791021a44","modified":1484795440271},{"_id":"source/ko/docs/internationalization.md","hash":"623a6e64a3cc7163c4f83da93bad6a42af4717f8","modified":1484795440271},{"_id":"source/ko/docs/migration.md","hash":"488c819668e3dfef4088f6d37a991d2c2bf85479","modified":1484795440271},{"_id":"source/ko/docs/permalinks.md","hash":"ad7b68353a65cc4977290034ae8adf04909fd7db","modified":1484795440271},{"_id":"source/ko/docs/plugins.md","hash":"4f45b3b2fa308282a78c57f84b8226f9edd17a92","modified":1484795440271},{"_id":"source/ko/docs/server.md","hash":"b781d718cffb2f0ca2b0fe65eafc2e0b7addbcec","modified":1484795440271},{"_id":"source/ko/docs/setup.md","hash":"67a60918ff6f3d77d7a1753eaaa938078379117d","modified":1484795440271},{"_id":"source/ko/docs/tag-plugins.md","hash":"ac4571762d3da71e3d0dd1e31fa602c7e7eb3ca4","modified":1484795440271},{"_id":"source/ko/docs/templates.md","hash":"50cb15b41e6a046a2626981d9ecf705b0cb8ca57","modified":1484795440271},{"_id":"source/ko/docs/themes.md","hash":"98c2ab9a8fe83c9c05e1e0ed5cfe61f28efd563b","modified":1484795440271},{"_id":"source/ko/docs/troubleshooting.md","hash":"c017c29bdc8ff64a31f0d5cab20a21ed63e37295","modified":1484795440271},{"_id":"source/ko/docs/variables.md","hash":"51728858c9d35da74d97a3a1555c890f5b194ff8","modified":1484795440271},{"_id":"source/ko/docs/writing.md","hash":"6fed3e99261223f702272d23d1a18f37004405fb","modified":1484795440271},{"_id":"source/ru/api/box.md","hash":"d8cb20dbb21f97fc94f24b2e2c389413b53517a1","modified":1484795440271},{"_id":"source/ru/api/console.md","hash":"8e2ed3cdb0198c804a354534bfffd02e212fc8fa","modified":1484795440271},{"_id":"source/ru/api/deployer.md","hash":"8e86df4f298aa00a7efb517813617ea873a11054","modified":1484795440271},{"_id":"source/ru/api/events.md","hash":"e82b9df9655d7dc1dba07068268705e5c2f148b9","modified":1484795440271},{"_id":"source/ru/api/filter.md","hash":"f617eea3b020a427b2112894510bd484f9b97189","modified":1484795440271},{"_id":"source/ru/api/generator.md","hash":"1f9a9b109a2a56216fb6307be7465aa9f56b9012","modified":1484795440271},{"_id":"source/ru/api/helper.md","hash":"e0bac2f294d2308914d5d1fbe8d21cd0ee22d48c","modified":1484795440271},{"_id":"source/ru/api/index.md","hash":"43bd1bd518719163f2acc957a5901c060a824b80","modified":1484795440271},{"_id":"source/ru/api/locals.md","hash":"4fc1842cc45bbdb8858638cda171eb23ae18daed","modified":1484795440271},{"_id":"source/ru/api/migrator.md","hash":"995ef83bbba11cbcafa710d1227e840af48ebdd8","modified":1484795440271},{"_id":"source/ru/api/posts.md","hash":"384f9199d4db9721614942cf71f8d409ec2bfccb","modified":1484795440271},{"_id":"source/ru/api/processor.md","hash":"63b0b146217f93f40ae34dfaa43b173aa85f26d9","modified":1484795440271},{"_id":"source/ru/api/renderer.md","hash":"52fda5a3041ab70d890e5ea02acb490ff0ec36cd","modified":1484795440271},{"_id":"source/ru/api/rendering.md","hash":"a17192e91055f879aab6b592752754c6794b09a8","modified":1484795440271},{"_id":"source/ru/api/router.md","hash":"4720a5c8efff63f54a5ce9ff420291aec86d3142","modified":1484795440271},{"_id":"source/ru/api/tag.md","hash":"51e9d34291c922e198d356d631e9f0894215299c","modified":1484795440271},{"_id":"source/ru/api/scaffolds.md","hash":"fad4cfb68958a2145102cee85152bad3feda1580","modified":1484795440271},{"_id":"source/ru/api/themes.md","hash":"8d1cb67a084165a300a9cc478acfc1201eee9aaa","modified":1484795440271},{"_id":"source/ru/docs/asset-folders.md","hash":"0325362b58178ffe73b8a3149bfd96c4248101f5","modified":1484795440271},{"_id":"source/ru/docs/commands.md","hash":"c120dc2c1c87f6d15745bbd0cb2e35685e6fe716","modified":1484795440271},{"_id":"source/ru/docs/configuration.md","hash":"1a2bffac8601cce89e2059cb022c18e3d6484cc6","modified":1484795440271},{"_id":"source/ru/docs/contributing.md","hash":"71a2fae69b3c8362edf0001a4e587e0ead5df342","modified":1484795440271},{"_id":"source/ru/docs/data-files.md","hash":"dd53e291189d0d5a01bf71f0f738b6e0cd04c3b1","modified":1484795440271},{"_id":"source/ru/docs/deployment.md","hash":"795feeadc3e368593d4bde2e374171d6139ff094","modified":1484795440271},{"_id":"source/ru/docs/front-matter.md","hash":"067b99088dd9d8f5241c7972d4cd3489152ad9de","modified":1484795440271},{"_id":"source/ru/docs/generating.md","hash":"55764b33e34dbbef4423cae6a483fb45df2d463c","modified":1484795440271},{"_id":"source/ru/docs/helpers.md","hash":"16af9dd309d6c0d54ffee775a0a8224ee83c3170","modified":1484795440271},{"_id":"source/ru/docs/index.md","hash":"c4e43e02e25608c0ce49557470d3e6c65e5f1c6e","modified":1484795440271},{"_id":"source/ru/docs/internationalization.md","hash":"06f79b167fa211f1c4a32167f8c6f6988ada5da1","modified":1484795440271},{"_id":"source/ru/docs/migration.md","hash":"cf399b181ec6925e17db159a0ae7ea96d0c740cd","modified":1484795440271},{"_id":"source/ru/docs/permalinks.md","hash":"120ade14fee3e3326592b54bbe1feff662d753c8","modified":1484795440271},{"_id":"source/ru/docs/plugins.md","hash":"0391f950a89e3b0db9641be7c309f5cfebc64dd2","modified":1484795440271},{"_id":"source/ru/docs/server.md","hash":"19c8ca9b3a2ab2880192016cf95e10c9197ab4b0","modified":1484795440271},{"_id":"source/ru/docs/setup.md","hash":"b3b5bb6216742e44f8a65d3c9b76b4c0e8790e0e","modified":1484795440271},{"_id":"source/ru/docs/tag-plugins.md","hash":"07303f95591e3870786a490e142e4f0de5de952a","modified":1484795440271},{"_id":"source/ru/docs/templates.md","hash":"c33a1f5aab5844d80d9aaef57c7081ce15bcb86e","modified":1484795440271},{"_id":"source/ru/docs/themes.md","hash":"c90fcd1511ba5d8f4dc1dd980e317c1675f7b2a6","modified":1484795440275},{"_id":"source/ru/docs/troubleshooting.md","hash":"1aefa9921c4a7542c334b66d4c7adc929dd1dda4","modified":1484795440275},{"_id":"source/ru/docs/variables.md","hash":"0c185af50e61884d514c26bf82d26653ba37340d","modified":1484795440275},{"_id":"source/ru/docs/writing.md","hash":"114de1ae6f0f124e089683a186326ef7e7484a23","modified":1484795440275},{"_id":"source/zh-cn/api/box.md","hash":"952c2effeb6ad530d4835c95c3d12cab0f756fdb","modified":1484795440387},{"_id":"source/zh-cn/api/console.md","hash":"97a9df80fb140bd83f9d7504cf48507f79970b8b","modified":1484795440387},{"_id":"source/zh-cn/api/deployer.md","hash":"658213ea08658ed73352194f80f40eb6c3cd8557","modified":1484795440387},{"_id":"source/zh-cn/api/events.md","hash":"70c3f40a83f7d7c62e1fc96073ceab354b25e7d1","modified":1484795440387},{"_id":"source/zh-cn/api/filter.md","hash":"81ab594418676f9a5155fa4eb560785f4b4611fa","modified":1484795440387},{"_id":"source/zh-cn/api/generator.md","hash":"ab3fcf07222a8064796d6e2b1765332ef9672e62","modified":1484795440387},{"_id":"source/zh-cn/api/helper.md","hash":"c5992b1f3287028fda350210cd7515df2cdbb4cc","modified":1484795440387},{"_id":"source/zh-cn/api/index.md","hash":"b3b2e331b4349a58edf27417bcd3251177802a36","modified":1484795440387},{"_id":"source/zh-cn/api/locals.md","hash":"71c263dd072f225288fb6c809d1dcb0d16843de8","modified":1484795440387},{"_id":"source/zh-cn/api/migrator.md","hash":"0eccbdd508dec777792a036dfd38fab59ed6dafa","modified":1484795440387},{"_id":"source/zh-cn/api/posts.md","hash":"e9484e3bbd29b08109049293412813e235190ee4","modified":1484795440387},{"_id":"source/zh-cn/api/processor.md","hash":"d322062bc6fdf64a4b3f9f57f38e62d6224809f6","modified":1484795440387},{"_id":"source/zh-cn/api/renderer.md","hash":"40273910e0f7deddc2725e4104fe116c964a631f","modified":1484795440387},{"_id":"source/zh-cn/api/rendering.md","hash":"335cf4be00f67a87c842f6a7cc93bb618f0cbac8","modified":1484795440387},{"_id":"source/zh-cn/api/router.md","hash":"952761bc952eac4d8f423272311f5bba9513368c","modified":1484795440387},{"_id":"source/zh-cn/api/scaffolds.md","hash":"d0f06c5c004c714dc114fd53ea32fcaf0edd68e8","modified":1484795440387},{"_id":"source/zh-cn/api/tag.md","hash":"c082d7361ec36b976ecfb2355b9b1f9a80940df7","modified":1484795440387},{"_id":"source/zh-cn/api/themes.md","hash":"099463af2574058f48fdcfc60e7b60639c6a774a","modified":1484795440387},{"_id":"source/themes/screenshots/Adoubi.png","hash":"19cfac8d5b092aa544dba41aefe4be2f94bd93a3","modified":1484795440275},{"_id":"source/themes/screenshots/Cafe.png","hash":"6f639068117b8d44005730864cc0b05a11b28d73","modified":1484795440287},{"_id":"source/themes/screenshots/Chan.png","hash":"d7de078723b6b2089949637a1ced3481e192d15a","modified":1484795440287},{"_id":"source/themes/screenshots/Daily.png","hash":"f8a1f0775fac4d7ab0ad03cd406587373339fa7d","modified":1484795440291},{"_id":"source/themes/screenshots/LightOne.png","hash":"19de8668c7d1571c653e141df4ca565fd390fb00","modified":1484795440319},{"_id":"source/themes/screenshots/Material.png","hash":"7025f849e1eea3a42ad341449ab1dc57ff5575aa","modified":1484795440323},{"_id":"source/themes/screenshots/MyFairLady.png","hash":"fade40da5ba8ae14b6acef02b526bcd296b698de","modified":1484795440323},{"_id":"source/themes/screenshots/NexT.png","hash":"f83f8107f955125c22c23cfaab1a21c570a8f63a","modified":1484795440323},{"_id":"source/themes/screenshots/Nova.png","hash":"78465899cd0c27fb08700a51c03c85afe13402b9","modified":1484795440327},{"_id":"source/themes/screenshots/Simplest.png","hash":"56cfa016584cb6b07a88581889e2017526f8edd4","modified":1484795440339},{"_id":"source/themes/screenshots/Weightless.png","hash":"d28f3cf8aec3604f6daa66b66a0fd91b125c628b","modified":1484795440347},{"_id":"source/themes/screenshots/Wixo.png","hash":"cddbf67a12777fb73abc1bb55265f7f3dd5f903d","modified":1484795440347},{"_id":"source/themes/screenshots/carbon.png","hash":"024724c516dbde706b4dc078458c8ec3091c605b","modified":1484795440351},{"_id":"source/themes/screenshots/light.png","hash":"3776970bdc08222c41f783a2739ed747a865fe11","modified":1484795440363},{"_id":"source/zh-cn/docs/asset-folders.md","hash":"24de3f7ad1c0a4d7a2c2f34f39cbb9b2c9d08a92","modified":1484795440387},{"_id":"source/zh-cn/docs/commands.md","hash":"259a807dca2c5bea0b8227cca65b92c08ad92435","modified":1484795440387},{"_id":"source/zh-cn/docs/configuration.md","hash":"39e97fd20064e37636d1d28901061269388df274","modified":1484795440387},{"_id":"source/zh-cn/docs/data-files.md","hash":"72a47e9666fb9362933250ffc7e02d7270f1542f","modified":1484795440387},{"_id":"source/zh-cn/docs/contributing.md","hash":"6dceff82dc7cae4623b407f136f96c6f8aeb671f","modified":1484795440387},{"_id":"source/zh-cn/docs/deployment.md","hash":"43ac14650ccb3b869474da1cf542a4942bc2c298","modified":1484795440387},{"_id":"source/zh-cn/docs/front-matter.md","hash":"84e9d7c09a2263bb8fe11b4f48f1a959f0c105cf","modified":1484795440387},{"_id":"source/zh-cn/docs/generating.md","hash":"9fcedfb39c233ce3f4ac4ca3d2391da013b055d6","modified":1484795440387},{"_id":"source/zh-cn/docs/helpers.md","hash":"c2e796043e4a342c00c9205878c0e02c3bb8f517","modified":1484795440387},{"_id":"source/zh-cn/docs/index.md","hash":"47a6849dfe2d9a133dc26e24faeb8d38b0d7e69d","modified":1484795440387},{"_id":"source/zh-cn/docs/internationalization.md","hash":"c641f490d79dbf5b85d6429fa67aa284ed9b22d0","modified":1484795440387},{"_id":"source/zh-cn/docs/migration.md","hash":"4a59bdb0ed10b69382244a669bac5436c63c2aac","modified":1484795440387},{"_id":"source/zh-cn/docs/permalinks.md","hash":"3224a8df60ad0c9bbb457545fae30eec788b7148","modified":1484795440387},{"_id":"source/zh-cn/docs/plugins.md","hash":"5ae75aed529c8f90694cf404124443d4fd2f38fe","modified":1484795440387},{"_id":"source/zh-cn/docs/server.md","hash":"938cdc6c2ad4c0b2fa5c333507bee149af38c8ca","modified":1484795440387},{"_id":"source/zh-cn/docs/setup.md","hash":"5e5c756b9fd73ef1f8a18ceb7aa3b0c771f6b8e0","modified":1484795440387},{"_id":"source/zh-cn/docs/tag-plugins.md","hash":"14902972f33eb6dd46c119881151725f617dca2e","modified":1484795440387},{"_id":"source/zh-cn/docs/templates.md","hash":"69dbc23d45ba8afffaf164526962280a0bcfc5fc","modified":1484795440387},{"_id":"source/zh-cn/docs/themes.md","hash":"bd85f5732b3110d7a36c185d6cdb02beb9e8317c","modified":1484795440387},{"_id":"source/zh-cn/docs/troubleshooting.md","hash":"84f33cef9dadcab3f9b729a1e71c516edd430643","modified":1484795440387},{"_id":"source/zh-cn/docs/variables.md","hash":"0dead1d7505e29900caa5ca0bb03d65997d6bd71","modified":1484795440387},{"_id":"source/zh-cn/docs/writing.md","hash":"e34e578088bf1c424f2e9e87478b90a0d57def90","modified":1484795440387},{"_id":"source/zh-tw/api/box.md","hash":"ae31e611c0b4d227a515ec6b40e387dee8ad2a60","modified":1484795440387},{"_id":"source/zh-tw/api/console.md","hash":"1700864c4d60ab592b437237b00830f87efdabda","modified":1484795440387},{"_id":"source/zh-tw/api/deployer.md","hash":"716a44e52504a3848c53da2f591663ea160c64d6","modified":1484795440387},{"_id":"source/zh-tw/api/events.md","hash":"90e8ae80f4decab6aa5aa192b1efa32f7b5dc9b8","modified":1484795440387},{"_id":"source/zh-tw/api/filter.md","hash":"e30ce40e8d60fce3d5cfc629ae357b7ba5c1e029","modified":1484795440387},{"_id":"source/zh-tw/api/generator.md","hash":"7f23d306ff9ad0667f8d1209fc9cd8045d1bc027","modified":1484795440387},{"_id":"source/zh-tw/api/helper.md","hash":"03fdc4a0f78bc50bc4964d0e32f1d400b7362810","modified":1484795440387},{"_id":"source/zh-tw/api/index.md","hash":"2219b20ce6bd24e7547ba4cfad1a2e527882f146","modified":1484795440387},{"_id":"source/zh-tw/api/locals.md","hash":"6264e0c375e9e4e300a81cc6f7d93e4d0ad27a3b","modified":1484795440387},{"_id":"source/zh-tw/api/migrator.md","hash":"16040215e85a10dddefb54a9f9d6680582394276","modified":1484795440387},{"_id":"source/zh-tw/api/posts.md","hash":"5fe54a8b2479de1d732d9ffe2bdfd0931a6b33e0","modified":1484795440391},{"_id":"source/zh-tw/api/processor.md","hash":"0340e3bb4dd7f731fe1768686e803ff5f6cf219d","modified":1484795440391},{"_id":"source/zh-tw/api/renderer.md","hash":"ebeaf49d88a143afc63276cf5cceea4d3c75c1d9","modified":1484795440391},{"_id":"source/zh-tw/api/rendering.md","hash":"587ebcf3ae00b20e60b8d5a328970c055117e1f8","modified":1484795440391},{"_id":"source/zh-tw/api/router.md","hash":"e2ea82810a9db7d4aac0999a24237731a48f0c94","modified":1484795440391},{"_id":"source/zh-tw/api/scaffolds.md","hash":"793d4876ab4fbb1cc67efd20aed2344076bebab2","modified":1484795440391},{"_id":"source/zh-tw/api/tag.md","hash":"fe60f1a5eb875e54f2f5de3dfac93c5f90178b51","modified":1484795440391},{"_id":"source/zh-tw/api/themes.md","hash":"24aadffa81047b9b16e4b3a11a80ee283995851e","modified":1484795440391},{"_id":"source/zh-tw/docs/asset-folders.md","hash":"415bf1dbeaae18b355d2836db8c6d337ce3d1b39","modified":1484795440391},{"_id":"source/zh-tw/docs/commands.md","hash":"28335d4f40523c115ac17668cdc953784601b03b","modified":1484795440391},{"_id":"source/zh-tw/docs/configuration.md","hash":"6d04778faa0d318f0aea7e6ae24421940895b0f8","modified":1484795440391},{"_id":"source/zh-tw/docs/contributing.md","hash":"493895617427f9b9f3f67063f2ed64f7e9250a2f","modified":1484795440391},{"_id":"source/zh-tw/docs/data-files.md","hash":"6fa1f5829dc7c00a73afafe496047c79f74da992","modified":1484795440391},{"_id":"source/zh-tw/docs/deployment.md","hash":"58056e2df4217f6c0bd9eaa0e2f4f1038b1b6577","modified":1484795440391},{"_id":"source/zh-tw/docs/front-matter.md","hash":"341681886aab9c603f50ca91a4e031d44c785526","modified":1484795440391},{"_id":"source/zh-tw/docs/generating.md","hash":"ac4ecd6612de705cbcc372361c4cdff9730ce5ce","modified":1484795440391},{"_id":"source/zh-tw/docs/helpers.md","hash":"5526a11f3cfa83e5ca4f257f2673c36386687f7e","modified":1484795440391},{"_id":"source/zh-tw/docs/index.md","hash":"6c3a83150c709ddc7c12b84af66884e7ab13ffdf","modified":1484795440391},{"_id":"source/zh-tw/docs/internationalization.md","hash":"d151dc3ab9edecaac7e12f78660f75fbe3d21f03","modified":1484795440391},{"_id":"source/zh-tw/docs/migration.md","hash":"3cba57be139cff15292bd11b9b67cdbea101b92d","modified":1484795440391},{"_id":"source/zh-tw/docs/permalinks.md","hash":"5cf6369c80a52c0e732ccde2d9f7d367b062b43d","modified":1484795440391},{"_id":"source/zh-tw/docs/plugins.md","hash":"38c7329e5b03464e20aaa06e30618ecfa5f63775","modified":1484795440391},{"_id":"source/zh-tw/docs/server.md","hash":"d552656503025f972c7c38e7cb5208e507b25278","modified":1484795440391},{"_id":"source/zh-tw/docs/setup.md","hash":"e51fb04bfde19ea4b58d598c05c20fe3ed90ea67","modified":1484795440391},{"_id":"source/zh-tw/docs/tag-plugins.md","hash":"4801edde03f5ca2749d3e41d4cb0f55c7eb6bfbb","modified":1484795440391},{"_id":"source/zh-tw/docs/templates.md","hash":"b9a97a0a38c826db7a58c9ab47e61017e3b0a195","modified":1484795440391},{"_id":"source/zh-tw/docs/themes.md","hash":"a9b871313e7c31ffd90072b456f47802bb1a2908","modified":1484795440391},{"_id":"source/zh-tw/docs/troubleshooting.md","hash":"ca080ccb86cc149ee2b1769a30720e63c7a225fa","modified":1484795440391},{"_id":"source/zh-tw/docs/variables.md","hash":"97f917a0c3fdebf92784798d7a8691385d9c0514","modified":1484795440391},{"_id":"source/zh-tw/docs/writing.md","hash":"744d78b7da06c3bd0ad6023bf8607210f1674a36","modified":1484795440391},{"_id":"themes/navy/layout/partial/after_footer.swig","hash":"c8ce4029e04f234a23e647321747c519deea8d06","modified":1484795440391},{"_id":"themes/navy/layout/partial/comment.swig","hash":"6f5494c97586584884ca8d93b9184d4eadbd8e86","modified":1484795440391},{"_id":"themes/navy/layout/partial/footer.swig","hash":"a3dc4123f7c38ecf5b875bec610e3559d5090639","modified":1484795440391},{"_id":"themes/navy/layout/partial/google_analytics.swig","hash":"44869c53540e7dfc6dfde2550e3bb94e0693c8a6","modified":1484795440391},{"_id":"themes/navy/layout/partial/head.swig","hash":"daa2f73a166fd2ddabb5d8aacb89abaf45dbfb94","modified":1484795440391},{"_id":"themes/navy/layout/partial/header.swig","hash":"f07175832ad14ba6836207c2e6236ac8f6d73d75","modified":1484795440391},{"_id":"themes/navy/layout/partial/mobile_nav.swig","hash":"b7e6894ad08946bac5cb9e04a5369952590b8899","modified":1484795440391},{"_id":"themes/navy/layout/partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1484795440391},{"_id":"themes/navy/layout/partial/post.swig","hash":"e75df7f513ec321d2a95b8f689470adbab955760","modified":1484795440391},{"_id":"themes/navy/layout/partial/share.swig","hash":"363c6aa8ca8dbee42dc78675a938981b2f9b65aa","modified":1484795440391},{"_id":"themes/navy/layout/partial/sidebar.swig","hash":"52ddc48f6c53bf8bd155f94e1fd5b9dbcc19d0a5","modified":1484795440391},{"_id":"themes/navy/layout/partial/theme.swig","hash":"5a279ad8f6c6b7c104cce495faa563d8b7a7c74a","modified":1484795440391},{"_id":"themes/navy/source/css/_variables.styl","hash":"0c90e53c9ce8347f452c4ec6cb4ee9f71617ba3d","modified":1484795440391},{"_id":"themes/navy/source/css/navy.styl","hash":"234627866d9597a4f810099e29cd266089a9dcca","modified":1484795440391},{"_id":"themes/navy/source/js/lang_select.js","hash":"8bb0cd0b464357f8e2b794e64b89e4dbe2a836e3","modified":1484795440391},{"_id":"themes/navy/source/js/mobile_nav.js","hash":"503a422e1322a458a311330e0345b3a49a8f8f05","modified":1484795440391},{"_id":"themes/navy/source/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1484795440391},{"_id":"themes/navy/source/js/toc.js","hash":"179e3d2634672d401e3a1d85d1b558e5a61f84dc","modified":1484795440391},{"_id":"source/themes/screenshots/Aero-Dual.png","hash":"dcbb4849bf1336566219b838ae038847b92b92f2","modified":1484795440275},{"_id":"source/themes/screenshots/Bootstrap-Blog.png","hash":"4bcd1db5e544f3253f5a2d8f69f209df96d0aa34","modified":1484795440287},{"_id":"source/themes/screenshots/Cactus Dark.png","hash":"6c59bb62dd2b6c2a8d452ac306022e704de67c5c","modified":1484795440287},{"_id":"source/themes/screenshots/Even.png","hash":"26820acbb82bfc01d88c2f68fb8b830ab81aa0e1","modified":1484795440291},{"_id":"source/themes/screenshots/Flexy.png","hash":"9543ed2967fe81e127ad8b264d1a54eb93ae2642","modified":1484795440295},{"_id":"source/themes/screenshots/Foundation.png","hash":"6aa1326007c57ea87e1c3bf3ea1bca90dd2b5312","modified":1484795440295},{"_id":"source/themes/screenshots/Freemind.png","hash":"a3459083b8edfc633d7fd21a3dc03d20f72c707b","modified":1484795440299},{"_id":"source/themes/screenshots/Maupassant.png","hash":"f3238c0b7f7e43468544c5cdc00c403a8b4814b9","modified":1484795440323},{"_id":"source/themes/screenshots/Overdose.png","hash":"3a8a469da7c02127d02e44fd4e8fca4870bdd14c","modified":1484795440331},{"_id":"source/themes/screenshots/Typing.png","hash":"33b39c8a626db45ee473ce3e3d0e37ebd9fb83d3","modified":1484795440343},{"_id":"source/themes/screenshots/concise.png","hash":"29d8fa81bed5148a70d17c0480f26118be338a43","modified":1484795440355},{"_id":"source/themes/screenshots/hexo-fabric.png","hash":"a6bda45ba2669b858a0ae675a11a8dd12e0176ab","modified":1484795440359},{"_id":"source/themes/screenshots/hollow.png","hash":"1061d49984af272066c5f1957fea2d19ffe4b0f3","modified":1484795440359},{"_id":"source/themes/screenshots/jane.png","hash":"6de0e31205cc8eb458bfd55db649aa99d0a37f12","modified":1484795440363},{"_id":"source/themes/screenshots/legend.png","hash":"2304505a1b12cee2cc5cfea1dc1a4629453bfcb6","modified":1484795440363},{"_id":"source/themes/screenshots/wiki-i18n.png","hash":"439cb85b087692a44f31045821e3f47bddff65a9","modified":1484795440383},{"_id":"source/themes/screenshots/yinwang.png","hash":"516427859b3516be7a3102f07d4f7934678019de","modified":1484795440387},{"_id":"source/themes/screenshots/zzoman2015.png","hash":"d417840f23e1006c66c0ecf5692639566f5e34a7","modified":1484795440387},{"_id":"source/themes/screenshots/Raytaylorism.png","hash":"6b2397e54893faf8ae787a7138da5286109c6499","modified":1484795440339},{"_id":"source/themes/screenshots/AlphaDust.png","hash":"d5ae1a98ccdd84a30648286a85bef63dd6c9b757","modified":1484795440283},{"_id":"source/themes/screenshots/Anatole.png","hash":"61476ec99bdd2f7aeb52a23addfbf0308fa1e2c4","modified":1484795440283},{"_id":"source/themes/screenshots/Anisina.png","hash":"146dd991f55a827a514259e20a51de1e9b07a13d","modified":1484795440283},{"_id":"source/themes/screenshots/Apollo.png","hash":"9703bb64c753f204f3940792c74dc2474f4faf24","modified":1484795440287},{"_id":"source/themes/screenshots/Corporate.png","hash":"63b92e65c02b3c04f495dacfbe6019cbbcf01578","modified":1484795440291},{"_id":"source/themes/screenshots/Free2mind.png","hash":"b99492bda941629d5d49bfa60ff186312dc8dba3","modified":1484795440295},{"_id":"source/themes/screenshots/Hiero.png","hash":"7b430bf82a3f8f4194bac272822ed697e976117f","modified":1484795440303},{"_id":"source/themes/screenshots/Jacman.png","hash":"820e34d6fed6858c85034eb9f1b1b4c42f2d5da6","modified":1484795440311},{"_id":"source/themes/screenshots/Jekyll.png","hash":"06a42ba9b8456f7835637060cd7c882304bb038e","modified":1484795440315},{"_id":"source/themes/screenshots/Noise.png","hash":"b203eec4312548841c0655dd230863bbeb7d0398","modified":1484795440327},{"_id":"source/themes/screenshots/Nuna.png","hash":"e144848b5b0e60b830074486356d571c8cdf6aa7","modified":1484795440327},{"_id":"source/themes/screenshots/Oishi.png","hash":"f10364388e01df14a19d4c6401dfbedec1efdc52","modified":1484795440327},{"_id":"source/themes/screenshots/Primer.png","hash":"19d00107677ab73540a801a4bdb11b9489fa7365","modified":1484795440335},{"_id":"source/themes/screenshots/Yelee.png","hash":"35f7c173424902ba99c64b7fcab6da784eb6d02c","modified":1484795440347},{"_id":"themes/navy/source/css/_partial/archive.styl","hash":"f7ff7e9eb92f6786ccbf79bb4193a81ab8b49f8b","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/base.styl","hash":"91e2b7a618c3103a49445ae0187920924d6a19c9","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/footer.styl","hash":"cf03e141fb0db12785d6b6e61a24872568b20dac","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/header.styl","hash":"d54e6fbcbbecc580151d54ebf429cf2b91591c20","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/highlight.styl","hash":"52ea72b2c65fd1cf105247ff2f41502e7e3f19ce","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/index.styl","hash":"5fc130658d9200a87ec7ab33d10dfc9f29f04617","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/mobile_nav.styl","hash":"f333f14099a39e77c557fec790e2649db50de6d2","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/page.styl","hash":"3ae39a6e7840f8ae2ad7af5c73ec47cfef5693ed","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/plugins.styl","hash":"e69ad06200a86c856d7c361be9289b5931593ab8","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/post.styl","hash":"037864b22a7775df5086f8977c51d86dd7053625","modified":1484795440391},{"_id":"themes/navy/source/css/_partial/sidebar.styl","hash":"39451aef60afca98aa757eb76690a9e3e32cffbb","modified":1484795440391},{"_id":"source/_posts/2014-07-13-hexo-2-8-released/generate-console.png","hash":"1112c1f241871475b1ddac6eeecfea576abb465f","modified":1484795440259},{"_id":"source/themes/screenshots/Simple.png","hash":"143cc2777ddea0f61fb6db43f26b3f548205555a","modified":1484795440339},{"_id":"source/themes/screenshots/Again.png","hash":"0700cf45eb85d251d4578b95fb1d51342a3c3aeb","modified":1484795440275},{"_id":"source/themes/screenshots/BlueLake.png","hash":"e6bd3780d68ce487a21e1a27f4d0db0001a1e5d7","modified":1484795440287},{"_id":"source/themes/screenshots/Hacker.png","hash":"22037978ac9a5fee8e64819088d466b5eb880bb9","modified":1484795440299},{"_id":"source/themes/screenshots/Paperbox.png","hash":"021e2c2f56b945a17d24053c57e0f4b482a5b774","modified":1484795440331},{"_id":"source/themes/screenshots/Phantom.png","hash":"a9486a55c0f0fdeddcb58df995cfdabad78a6b68","modified":1484795440331},{"_id":"source/themes/screenshots/Tranquilpeak.png","hash":"2e4560e4f02487402d842d0ec3c5230a26925725","modified":1484795440343},{"_id":"source/themes/screenshots/Very-Simple.png","hash":"e0df14af244231d62aa9e4f23fc8ffd341007405","modified":1484795440347},{"_id":"source/themes/screenshots/gstyle.png","hash":"dbe1cfe0b70a8b06aa93af7b1ff4e40e99424f97","modified":1484795440355},{"_id":"source/themes/screenshots/indigo.png","hash":"11ce389712ea336fca4efea06a7d4001ecaa8c2d","modified":1484795440363},{"_id":"source/themes/screenshots/phase.png","hash":"358502bcfebd9e5782eb3fd3d96997f194dc4841","modified":1484795440367},{"_id":"source/themes/screenshots/ttstyle.png","hash":"d41e3f0673f18151f6916ad88fbcb3e606a79601","modified":1484795440383},{"_id":"source/themes/screenshots/yujuan.png","hash":"f5bd31fce4d6833b4a946aea4a5d5b77690e8e8f","modified":1484795440387},{"_id":"source/themes/screenshots/CleanBlog.png","hash":"ffee2f310b4e5447e863b51b9256b948aabb3a97","modified":1484795440287},{"_id":"source/themes/screenshots/Hueman.png","hash":"ad4a5fe46cb4174f86f216fbc6af5cb8999487f9","modified":1484795440307},{"_id":"source/themes/screenshots/Pixel.png","hash":"1be15fce92ef3829320e23a834a5207e39c4ad03","modified":1484795440331},{"_id":"source/themes/screenshots/QnA.png","hash":"4c6a389be61f07b39936ee611e6d96af19e58946","modified":1484795440335},{"_id":"source/themes/screenshots/Smackdown.png","hash":"3f3187f0accb41c73f11b3b0146f48adee26c637","modified":1484795440343},{"_id":"source/themes/screenshots/X'new.png","hash":"ab84bc4f097b9c25b775b267e1a609340b691e7b","modified":1484795440347},{"_id":"source/themes/screenshots/casual.png","hash":"dd7614b8e3a5984a6bfdebb70d44f0e95586d06c","modified":1484795440351},{"_id":"source/themes/screenshots/landscape.png","hash":"cbefbc21018cf6db8efad8271dabbe360caa64ff","modified":1484795440363},{"_id":"source/themes/screenshots/simpleblock.png","hash":"04e6642a23ddae2208de5eda43cc410718d32451","modified":1484795440367},{"_id":"source/_posts/2014-07-13-hexo-2-8-released/generate-console@2x.png","hash":"f2a8a4a7461e977c5908015f9bbb8befcd4524bb","modified":1484795440263},{"_id":"source/themes/screenshots/Hipaper.png","hash":"12d42037cb2758ec395342ca55009e092c3d013f","modified":1484795440303},{"_id":"source/themes/screenshots/MeiliDu.png","hash":"b83ccea8a7fc66d1b680fbf733eac31a8a6f105d","modified":1484795440323},{"_id":"source/themes/screenshots/Pln.png","hash":"41c3e629fd16016b9c90450712212e2a5908cb3b","modified":1484795440335},{"_id":"source/themes/screenshots/Typescript.png","hash":"d77251051f0d783c84294f8eaac26f7650930eee","modified":1484795440343},{"_id":"source/themes/screenshots/hexoThemeKacper.png","hash":"b60ef125b73449fbd1a0aac6dda9d1c04c99dcfa","modified":1484795440359},{"_id":"source/themes/screenshots/mls.png","hash":"a7251fa61d70632902e543224b6fce000f3f25e8","modified":1484795440363},{"_id":"source/themes/screenshots/Freemind.386.png","hash":"bb50b7d0af951100fbacd2294c05b3225ac1e01b","modified":1484795440299},{"_id":"source/themes/screenshots/Icarus.png","hash":"e12027c07c078f0e4ab5ff1526da9ec1a3209e2a","modified":1484795440311},{"_id":"source/themes/screenshots/Laughing.png","hash":"868ec75f24a3ac172e5fff41f8c3081e0d36fde1","modified":1484795440319},{"_id":"source/themes/screenshots/Minos.png","hash":"6d8cc3af30336ff75a82f37d96e88c3bba146c6b","modified":1484795440323},{"_id":"source/themes/screenshots/varaint.png","hash":"feaf1308077d3bff875be077b2e4f5340ae69529","modified":1484795440383},{"_id":"source/themes/screenshots/Line.png","hash":"b288d7ce9fe947762fb36ab32867339e49751e77","modified":1484795440319},{"_id":"source/themes/screenshots/spfk.png","hash":"56456d489b4bf0cb2621038234c6957deed56145","modified":1484795440371},{"_id":"source/themes/screenshots/Ada.png","hash":"a4c2bc816e4ee7d907eaebc70f14ef9fbdec1fe5","modified":1484795440275},{"_id":"source/themes/screenshots/CyanStyle.png","hash":"a2f64e43fbe5e3ace8179cb22747cbd4039d833c","modified":1484795440291},{"_id":"source/themes/screenshots/Hiker.png","hash":"ac1d88ec1dbc5db6eccbfa9f5639e4877772b5c3","modified":1484795440303},{"_id":"source/themes/screenshots/LandFarZ.png","hash":"42018d5b4fd81f67ab1d7ca350219606802d3302","modified":1484795440315},{"_id":"source/themes/screenshots/Aloha.png","hash":"5d0fa89aadc07fee8f16da05a27f45c696e0510d","modified":1484795440283},{"_id":"source/themes/screenshots/Random.png","hash":"7ded7367e0ad8429c0a7b39007ba38f884deeed7","modified":1484795440335},{"_id":"source/themes/screenshots/Magnetic.png","hash":"e550378d42b7680de3904bcc9923bdf76b38565c","modified":1484795440319},{"_id":"source/themes/screenshots/hexadillax.png","hash":"a950f87fbab846e27f43fa0c2c88e59ce51637ac","modified":1484795440359},{"_id":"source/themes/screenshots/pteris.png","hash":"d9298b3ec247961f506885e9d006023357ab3362","modified":1484795440367},{"_id":"source/themes/screenshots/Huxblog.png","hash":"101145e25e75875e1a187f1af4b69bf17fc56100","modified":1484795440311},{"_id":"source/themes/screenshots/beautiful-hexo.png","hash":"7b7f2e94d787da46dc74f4e070d6cd74a8ae0f7f","modified":1484795440351},{"_id":"source/themes/screenshots/strata.png","hash":"1194bc662ad83f431803fe3384ef5c40ca832d5e","modified":1484795440383},{"_id":"public/sitemap.xml","hash":"99d2e6b339f46bb0fbd021ec07424c41fdbad2e4","modified":1484796135025},{"_id":"public/atom.xml","hash":"dd4b465f0bed2ae198ed2a2c141e88f370671b6a","modified":1484796134349},{"_id":"public/index.html","hash":"f300c9cb72a3a3323e0ca97ace5d33a22e4f54f6","modified":1484796715760},{"_id":"public/api/deployer.html","hash":"3b4081e3186548595d29cd4cc2695e194c56a2ef","modified":1484796715761},{"_id":"public/api/helper.html","hash":"7c44c466d53de3c10b7d4923ef989d149dc985ff","modified":1484796715763},{"_id":"public/api/locals.html","hash":"394a7db36739bf084377a00f59f89fb63b0abe27","modified":1484796715763},{"_id":"public/api/migrator.html","hash":"1d4958bd00db3ab962f1e2da7c751e232cd0e7f8","modified":1484796715764},{"_id":"public/api/posts.html","hash":"e3e8da0d42974a39f0e65cd327cc9096e4f3e208","modified":1484796715764},{"_id":"public/api/processor.html","hash":"e6985f198a5039cb942422d73b9e643946dbe466","modified":1484796715764},{"_id":"public/api/scaffolds.html","hash":"275485d4bf7ee76c4c035219bc93179ae1611248","modified":1484796715764},{"_id":"public/api/themes.html","hash":"b89258e9080806cfdb0ad068fe779e03c8c29efd","modified":1484796715764},{"_id":"public/docs/data-files.html","hash":"befea0bb2e2c93638615d850f157facaaf2c2e16","modified":1484796715764},{"_id":"public/docs/generating.html","hash":"7e9f6b4df939040ce00c7f61242ee5ccc25590a5","modified":1484796715764},{"_id":"public/news/2016/02/28/hexo-3-2-released/index.html","hash":"03faff1c126befc580094264e39f35010fbb53bb","modified":1484795751544},{"_id":"public/news/2015/03/05/hexo-3-0-released/index.html","hash":"7eec8e4efcda8f35e68792b6df4406a6f352ad02","modified":1484795751544},{"_id":"public/news/2015/02/27/new-documentation-and-registry/index.html","hash":"e9e1dbf116b8e1bb96ba2407e371777c7d2caabe","modified":1484795751544},{"_id":"public/news/2014/07/13/hexo-2-8-released/index.html","hash":"211187121ca56f6754d6fd2405c9d84c29f465e6","modified":1484795751545},{"_id":"public/news/2014/06/14/hexo-2-7-released/index.html","hash":"14e099186f39b526ed59fa7905fcae75caea32d3","modified":1484795751545},{"_id":"public/news/index.html","hash":"a52474b589591147dccfc57b21ac839cd8b4570b","modified":1484796715765},{"_id":"public/news/2014/index.html","hash":"b45e4c21692f1acad26414ed653fac8be2814c97","modified":1484796715765},{"_id":"public/news/2014/06/index.html","hash":"61d3e0917ac605df2507f3723dc44d1ec95fbb84","modified":1484796715765},{"_id":"public/news/2014/07/index.html","hash":"bbe7b9f1f4a900dda2407839d4be718661fa630b","modified":1484796715765},{"_id":"public/news/2015/index.html","hash":"c3dd6a067a76f53c08547a84d8beff0e60600f0f","modified":1484796715765},{"_id":"public/news/2015/02/index.html","hash":"2f6aaa32335cab52feb5d6e4fe9e23c6ef6168d7","modified":1484796715765},{"_id":"public/news/2015/03/index.html","hash":"0c8317e3c9919e22f9969370528073b169cb8139","modified":1484796715765},{"_id":"public/news/2016/index.html","hash":"86d700e9aaadba08df00faf9a5ce2cc2fa272aa4","modified":1484796715766},{"_id":"public/news/2016/02/index.html","hash":"4b4f02ac35e36859c7c31dfe7f0d7c947c82dd91","modified":1484796715766},{"_id":"public/api/box.html","hash":"5661f63b75af753464c14c1563d6ddfab174cf8a","modified":1484796715760},{"_id":"public/api/console.html","hash":"6a2deb1e79556fb436307b742a914e295f358e6d","modified":1484796715766},{"_id":"public/api/events.html","hash":"ff1d672cca226e3cdca6306576a38b81652d293c","modified":1484796715763},{"_id":"public/api/filter.html","hash":"6b3132b69fe220a1b913a27eee0cd868d1024668","modified":1484796715766},{"_id":"public/api/generator.html","hash":"b03dc16d31696d6ab9d4612ce8cbf46c5061a3d0","modified":1484796715771},{"_id":"public/api/index.html","hash":"e4baab251de4a81ad6f7ecf75cb249d9db822a2a","modified":1484796715771},{"_id":"public/api/renderer.html","hash":"6ae6afb082b115c035df2f7f080085112243c766","modified":1484796715771},{"_id":"public/api/rendering.html","hash":"e0b60b0dcb791ef329eeb53546d7503af904597b","modified":1484796715771},{"_id":"public/api/router.html","hash":"b38fb7827bf71e2f18f86e6de498d8b4336669c4","modified":1484796715771},{"_id":"public/api/tag.html","hash":"5bc8bd76ac9cbfaf552682951175f6db0e86ce65","modified":1484796715771},{"_id":"public/docs/asset-folders.html","hash":"d680b00cdb17b3a6d6b3da61e84dcb9b7b4518ca","modified":1484796715772},{"_id":"public/docs/commands.html","hash":"716164916331d01061010ad43d318ff5fc2009a0","modified":1484796715772},{"_id":"public/docs/configuration.html","hash":"d1f13f521c01e839b303593a50a530d853b970a8","modified":1484796715772},{"_id":"public/docs/contributing.html","hash":"490dbae50b90f3675c3f02015555dda6982edab2","modified":1484796715772},{"_id":"public/docs/deployment.html","hash":"6882c84deeed4fe397a6d2216fb3d6921d63cc0a","modified":1484796715772},{"_id":"public/docs/front-matter.html","hash":"5ffbde4cc769fada0fe30ab8e29dc7b9d76af5b6","modified":1484796715764},{"_id":"public/docs/helpers.html","hash":"c08b4a614cfdd6c516b43bf0563f5d5878a1fa82","modified":1484796715772},{"_id":"public/docs/index.html","hash":"1599e3acc10b1a37633df1d518d6255b53932a71","modified":1484796715772},{"_id":"public/docs/internationalization.html","hash":"f4b418fcad6daa27bb038fbaf5fe7531ecda7c56","modified":1484796715772},{"_id":"public/docs/migration.html","hash":"9b03073ffccb8f6c2f82b065687e8f15b8daf6e2","modified":1484796715772},{"_id":"public/docs/permalinks.html","hash":"79c7b684a92241910bee27c47d5a9bb60cae9896","modified":1484796715772},{"_id":"public/docs/plugins.html","hash":"03d49f0ae9bcb9ea27e8d24c03d086693dbfcb49","modified":1484796715772},{"_id":"public/docs/server.html","hash":"9621c6c912973f94a1bc95f644ac033f5551f975","modified":1484796715773},{"_id":"public/docs/setup.html","hash":"be8be85169e652deaa2c67637fad6e59890098c7","modified":1484796715773},{"_id":"public/docs/tag-plugins.html","hash":"4f2b99a3b0536e401707bf127491d685050acc6e","modified":1484796715773},{"_id":"public/docs/templates.html","hash":"f25beec8048431190ccc6fa44c3dcb70a6a9dfba","modified":1484796715773},{"_id":"public/docs/themes.html","hash":"e85024781856ab8765674dad7ad12fc6aab42879","modified":1484796715773},{"_id":"public/docs/troubleshooting.html","hash":"1d11772ae65e28728385233ab38299bf0cd737ff","modified":1484796715773},{"_id":"public/docs/variables.html","hash":"8bd34ee057f106a170e517a38740b21c6280ab60","modified":1484796715773},{"_id":"public/docs/writing.html","hash":"8fee6b05994ea697eadeb25ce9283ecdae14fa46","modified":1484796715773},{"_id":"public/plugins/index.html","hash":"bc6ec5be2c7dfae8c6ab6d56a826ddf2b960ac67","modified":1484796715773},{"_id":"public/themes/index.html","hash":"ac25ac56d6c824d5c39bb0b03eca35cb6395e671","modified":1484796715773},{"_id":"public/CNAME","hash":"bacf1addbc2108243f9a0c04c290e47975c41a37","modified":1484795751586},{"_id":"public/browserconfig.xml","hash":"f54412705ab9eb69b544f438c9a1e15ae57f27c0","modified":1484795751586},{"_id":"public/favicon.ico","hash":"96b9a549337c2bec483c2879eeafa4d1f8748fed","modified":1484795751587},{"_id":"public/logo.png","hash":"a1e49e14162d7f2bc717111f8f07c86cb5ae84df","modified":1484795751587},{"_id":"public/logo.svg","hash":"6657ba50e702d84afb32fe846bed54fba1a77add","modified":1484795751587},{"_id":"public/robots.txt","hash":"55107e568647402d4e0d108be00fce6bded104d8","modified":1484795751587},{"_id":"public/icon/apple-touch-icon-114x114.png","hash":"a4b2129fa51b447b676a5a34329bb498faca0ef5","modified":1484795751587},{"_id":"public/icon/apple-touch-icon-120x120.png","hash":"8df23624cd19818fbcabdeda215b8765fc9d1923","modified":1484795751587},{"_id":"public/icon/apple-touch-icon-144x144.png","hash":"d364758b94da28035a5741497fdc4ac54c6f8972","modified":1484795751587},{"_id":"public/icon/apple-touch-icon-152x152.png","hash":"c099645d3bc12cb02f0bdad651edd280bbd86a9b","modified":1484795751587},{"_id":"public/icon/apple-touch-icon-57x57.png","hash":"ccd4eeaa6897dc3b8f621f28f9f7e10db2ae3889","modified":1484795751588},{"_id":"public/icon/apple-touch-icon-60x60.png","hash":"a4944c20a0c3f4a639c511269a7706663b01d375","modified":1484795751588},{"_id":"public/icon/apple-touch-icon-72x72.png","hash":"0033140e4489f320044b028f9cae42f57cc44c21","modified":1484795751588},{"_id":"public/icon/apple-touch-icon-76x76.png","hash":"29a8a2c698996bda55f1dd8dd9b8783cb91810a8","modified":1484795751588},{"_id":"public/icon/apple-touch-icon-precomposed.png","hash":"519e8654825c6e49054fe88949d946b1ef7d93e6","modified":1484795751588},{"_id":"public/icon/apple-touch-icon.png","hash":"c099645d3bc12cb02f0bdad651edd280bbd86a9b","modified":1484795751588},{"_id":"public/icon/favicon-160x160.png","hash":"2deeec3abde01dfef87220e399e1966b0b0cf876","modified":1484795751588},{"_id":"public/icon/favicon-16x16.png","hash":"a8ee7712f6560180efccb68546de6ea0d937fff3","modified":1484795751588},{"_id":"public/icon/favicon-196x196.png","hash":"0b74ef7924bb41982e55c71cbc6c5e483b9a609f","modified":1484795751588},{"_id":"public/icon/favicon-32x32.png","hash":"ab9bee1072060aa2f2cc9114daab236716887551","modified":1484795751588},{"_id":"public/icon/favicon-96x96.png","hash":"42fc76f6e615ab7e64dffa84ba41e731e0a28396","modified":1484795751588},{"_id":"public/icon/mstile-144x144.png","hash":"2b4d6d22388c6f4104018668e52275c29056b6e9","modified":1484795751588},{"_id":"public/icon/mstile-150x150.png","hash":"403b5695a36504b2a51231c02b227a72ce2247b9","modified":1484795751588},{"_id":"public/icon/mstile-310x150.png","hash":"b052f59d2db8eaeee9a3a99aa39b7ae4d3a93f54","modified":1484795751588},{"_id":"public/icon/mstile-310x310.png","hash":"c7692bfd39f62c93456349b67daaf573ecfdd8b4","modified":1484795751588},{"_id":"public/icon/mstile-70x70.png","hash":"c1d990cbbd5d62c991f41a1474fb95ac2e90e4e0","modified":1484795751589},{"_id":"public/themes/screenshots/Adoubi.png","hash":"19cfac8d5b092aa544dba41aefe4be2f94bd93a3","modified":1484795751589},{"_id":"public/themes/screenshots/Cafe.png","hash":"6f639068117b8d44005730864cc0b05a11b28d73","modified":1484795751589},{"_id":"public/themes/screenshots/Chan.png","hash":"d7de078723b6b2089949637a1ced3481e192d15a","modified":1484795751589},{"_id":"public/themes/screenshots/Daily.png","hash":"f8a1f0775fac4d7ab0ad03cd406587373339fa7d","modified":1484795751589},{"_id":"public/themes/screenshots/LightOne.png","hash":"19de8668c7d1571c653e141df4ca565fd390fb00","modified":1484795751589},{"_id":"public/themes/screenshots/Material.png","hash":"7025f849e1eea3a42ad341449ab1dc57ff5575aa","modified":1484795751589},{"_id":"public/themes/screenshots/MyFairLady.png","hash":"fade40da5ba8ae14b6acef02b526bcd296b698de","modified":1484795751589},{"_id":"public/themes/screenshots/NexT.png","hash":"f83f8107f955125c22c23cfaab1a21c570a8f63a","modified":1484795751589},{"_id":"public/themes/screenshots/Nova.png","hash":"78465899cd0c27fb08700a51c03c85afe13402b9","modified":1484795751589},{"_id":"public/themes/screenshots/Simplest.png","hash":"56cfa016584cb6b07a88581889e2017526f8edd4","modified":1484795751589},{"_id":"public/themes/screenshots/Weightless.png","hash":"d28f3cf8aec3604f6daa66b66a0fd91b125c628b","modified":1484795751589},{"_id":"public/themes/screenshots/Wixo.png","hash":"cddbf67a12777fb73abc1bb55265f7f3dd5f903d","modified":1484795751589},{"_id":"public/themes/screenshots/carbon.png","hash":"024724c516dbde706b4dc078458c8ec3091c605b","modified":1484795751590},{"_id":"public/themes/screenshots/light.png","hash":"3776970bdc08222c41f783a2739ed747a865fe11","modified":1484795751590},{"_id":"public/themes/screenshots/Aero-Dual.png","hash":"dcbb4849bf1336566219b838ae038847b92b92f2","modified":1484795752713},{"_id":"public/themes/screenshots/Bootstrap-Blog.png","hash":"4bcd1db5e544f3253f5a2d8f69f209df96d0aa34","modified":1484795752714},{"_id":"public/themes/screenshots/Cactus Dark.png","hash":"6c59bb62dd2b6c2a8d452ac306022e704de67c5c","modified":1484795752714},{"_id":"public/themes/screenshots/Even.png","hash":"26820acbb82bfc01d88c2f68fb8b830ab81aa0e1","modified":1484795752714},{"_id":"public/themes/screenshots/Flexy.png","hash":"9543ed2967fe81e127ad8b264d1a54eb93ae2642","modified":1484795752714},{"_id":"public/themes/screenshots/Foundation.png","hash":"6aa1326007c57ea87e1c3bf3ea1bca90dd2b5312","modified":1484795752714},{"_id":"public/themes/screenshots/Freemind.png","hash":"a3459083b8edfc633d7fd21a3dc03d20f72c707b","modified":1484795752714},{"_id":"public/themes/screenshots/Overdose.png","hash":"3a8a469da7c02127d02e44fd4e8fca4870bdd14c","modified":1484795752714},{"_id":"public/themes/screenshots/Maupassant.png","hash":"f3238c0b7f7e43468544c5cdc00c403a8b4814b9","modified":1484795752715},{"_id":"public/themes/screenshots/Typing.png","hash":"33b39c8a626db45ee473ce3e3d0e37ebd9fb83d3","modified":1484795752715},{"_id":"public/themes/screenshots/concise.png","hash":"29d8fa81bed5148a70d17c0480f26118be338a43","modified":1484795752715},{"_id":"public/themes/screenshots/hexo-fabric.png","hash":"a6bda45ba2669b858a0ae675a11a8dd12e0176ab","modified":1484795752715},{"_id":"public/themes/screenshots/hollow.png","hash":"1061d49984af272066c5f1957fea2d19ffe4b0f3","modified":1484795752715},{"_id":"public/themes/screenshots/jane.png","hash":"6de0e31205cc8eb458bfd55db649aa99d0a37f12","modified":1484795752715},{"_id":"public/themes/screenshots/legend.png","hash":"2304505a1b12cee2cc5cfea1dc1a4629453bfcb6","modified":1484795752715},{"_id":"public/themes/screenshots/wiki-i18n.png","hash":"439cb85b087692a44f31045821e3f47bddff65a9","modified":1484795752715},{"_id":"public/themes/screenshots/yinwang.png","hash":"516427859b3516be7a3102f07d4f7934678019de","modified":1484795752715},{"_id":"public/themes/screenshots/zzoman2015.png","hash":"d417840f23e1006c66c0ecf5692639566f5e34a7","modified":1484795752715},{"_id":"public/themes/screenshots/Raytaylorism.png","hash":"6b2397e54893faf8ae787a7138da5286109c6499","modified":1484795752715},{"_id":"public/js/lang_select.js","hash":"8bb0cd0b464357f8e2b794e64b89e4dbe2a836e3","modified":1484795752734},{"_id":"public/js/mobile_nav.js","hash":"503a422e1322a458a311330e0345b3a49a8f8f05","modified":1484795752735},{"_id":"public/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1484795752735},{"_id":"public/js/toc.js","hash":"179e3d2634672d401e3a1d85d1b558e5a61f84dc","modified":1484795752735},{"_id":"public/css/navy.css","hash":"9551b1faece8b8c70fe13526738be33432f002f3","modified":1484795752735},{"_id":"public/themes/screenshots/AlphaDust.png","hash":"d5ae1a98ccdd84a30648286a85bef63dd6c9b757","modified":1484795752735},{"_id":"public/themes/screenshots/Anatole.png","hash":"61476ec99bdd2f7aeb52a23addfbf0308fa1e2c4","modified":1484795752735},{"_id":"public/themes/screenshots/Anisina.png","hash":"146dd991f55a827a514259e20a51de1e9b07a13d","modified":1484795752735},{"_id":"public/themes/screenshots/Apollo.png","hash":"9703bb64c753f204f3940792c74dc2474f4faf24","modified":1484795752735},{"_id":"public/themes/screenshots/Corporate.png","hash":"63b92e65c02b3c04f495dacfbe6019cbbcf01578","modified":1484795752735},{"_id":"public/themes/screenshots/Free2mind.png","hash":"b99492bda941629d5d49bfa60ff186312dc8dba3","modified":1484795752735},{"_id":"public/themes/screenshots/Hiero.png","hash":"7b430bf82a3f8f4194bac272822ed697e976117f","modified":1484795752736},{"_id":"public/themes/screenshots/Jacman.png","hash":"820e34d6fed6858c85034eb9f1b1b4c42f2d5da6","modified":1484795752736},{"_id":"public/themes/screenshots/Jekyll.png","hash":"06a42ba9b8456f7835637060cd7c882304bb038e","modified":1484795752736},{"_id":"public/themes/screenshots/Noise.png","hash":"b203eec4312548841c0655dd230863bbeb7d0398","modified":1484795752737},{"_id":"public/themes/screenshots/Nuna.png","hash":"e144848b5b0e60b830074486356d571c8cdf6aa7","modified":1484795752739},{"_id":"public/themes/screenshots/Oishi.png","hash":"f10364388e01df14a19d4c6401dfbedec1efdc52","modified":1484795752739},{"_id":"public/themes/screenshots/Primer.png","hash":"19d00107677ab73540a801a4bdb11b9489fa7365","modified":1484795752739},{"_id":"public/themes/screenshots/Yelee.png","hash":"35f7c173424902ba99c64b7fcab6da784eb6d02c","modified":1484795752739},{"_id":"public/themes/screenshots/Simple.png","hash":"143cc2777ddea0f61fb6db43f26b3f548205555a","modified":1484795752739},{"_id":"public/themes/screenshots/Again.png","hash":"0700cf45eb85d251d4578b95fb1d51342a3c3aeb","modified":1484795752759},{"_id":"public/themes/screenshots/BlueLake.png","hash":"e6bd3780d68ce487a21e1a27f4d0db0001a1e5d7","modified":1484795752759},{"_id":"public/themes/screenshots/Hacker.png","hash":"22037978ac9a5fee8e64819088d466b5eb880bb9","modified":1484795752759},{"_id":"public/themes/screenshots/Paperbox.png","hash":"021e2c2f56b945a17d24053c57e0f4b482a5b774","modified":1484795752759},{"_id":"public/themes/screenshots/Phantom.png","hash":"a9486a55c0f0fdeddcb58df995cfdabad78a6b68","modified":1484795752760},{"_id":"public/themes/screenshots/Tranquilpeak.png","hash":"2e4560e4f02487402d842d0ec3c5230a26925725","modified":1484795752760},{"_id":"public/themes/screenshots/Very-Simple.png","hash":"e0df14af244231d62aa9e4f23fc8ffd341007405","modified":1484795752760},{"_id":"public/themes/screenshots/gstyle.png","hash":"dbe1cfe0b70a8b06aa93af7b1ff4e40e99424f97","modified":1484795752760},{"_id":"public/themes/screenshots/indigo.png","hash":"11ce389712ea336fca4efea06a7d4001ecaa8c2d","modified":1484795752760},{"_id":"public/themes/screenshots/phase.png","hash":"358502bcfebd9e5782eb3fd3d96997f194dc4841","modified":1484795752761},{"_id":"public/themes/screenshots/ttstyle.png","hash":"d41e3f0673f18151f6916ad88fbcb3e606a79601","modified":1484795752761},{"_id":"public/themes/screenshots/yujuan.png","hash":"f5bd31fce4d6833b4a946aea4a5d5b77690e8e8f","modified":1484795752761},{"_id":"public/news/2014/07/13/hexo-2-8-released/generate-console.png","hash":"1112c1f241871475b1ddac6eeecfea576abb465f","modified":1484795752761},{"_id":"public/themes/screenshots/CleanBlog.png","hash":"ffee2f310b4e5447e863b51b9256b948aabb3a97","modified":1484795752770},{"_id":"public/themes/screenshots/Hueman.png","hash":"ad4a5fe46cb4174f86f216fbc6af5cb8999487f9","modified":1484795752770},{"_id":"public/themes/screenshots/Pixel.png","hash":"1be15fce92ef3829320e23a834a5207e39c4ad03","modified":1484795752771},{"_id":"public/themes/screenshots/QnA.png","hash":"4c6a389be61f07b39936ee611e6d96af19e58946","modified":1484795752771},{"_id":"public/themes/screenshots/Smackdown.png","hash":"3f3187f0accb41c73f11b3b0146f48adee26c637","modified":1484795752771},{"_id":"public/themes/screenshots/X'new.png","hash":"ab84bc4f097b9c25b775b267e1a609340b691e7b","modified":1484795752771},{"_id":"public/themes/screenshots/casual.png","hash":"dd7614b8e3a5984a6bfdebb70d44f0e95586d06c","modified":1484795752771},{"_id":"public/themes/screenshots/landscape.png","hash":"cbefbc21018cf6db8efad8271dabbe360caa64ff","modified":1484795752772},{"_id":"public/themes/screenshots/simpleblock.png","hash":"04e6642a23ddae2208de5eda43cc410718d32451","modified":1484795752772},{"_id":"public/themes/screenshots/Hipaper.png","hash":"12d42037cb2758ec395342ca55009e092c3d013f","modified":1484795752781},{"_id":"public/themes/screenshots/MeiliDu.png","hash":"b83ccea8a7fc66d1b680fbf733eac31a8a6f105d","modified":1484795752781},{"_id":"public/themes/screenshots/Pln.png","hash":"41c3e629fd16016b9c90450712212e2a5908cb3b","modified":1484795752781},{"_id":"public/themes/screenshots/Typescript.png","hash":"d77251051f0d783c84294f8eaac26f7650930eee","modified":1484795752781},{"_id":"public/themes/screenshots/hexoThemeKacper.png","hash":"b60ef125b73449fbd1a0aac6dda9d1c04c99dcfa","modified":1484795752781},{"_id":"public/themes/screenshots/mls.png","hash":"a7251fa61d70632902e543224b6fce000f3f25e8","modified":1484795752782},{"_id":"public/news/2014/07/13/hexo-2-8-released/generate-console@2x.png","hash":"f2a8a4a7461e977c5908015f9bbb8befcd4524bb","modified":1484795752782},{"_id":"public/themes/screenshots/Freemind.386.png","hash":"bb50b7d0af951100fbacd2294c05b3225ac1e01b","modified":1484795752790},{"_id":"public/themes/screenshots/Icarus.png","hash":"e12027c07c078f0e4ab5ff1526da9ec1a3209e2a","modified":1484795752790},{"_id":"public/themes/screenshots/Laughing.png","hash":"868ec75f24a3ac172e5fff41f8c3081e0d36fde1","modified":1484795752790},{"_id":"public/themes/screenshots/Minos.png","hash":"6d8cc3af30336ff75a82f37d96e88c3bba146c6b","modified":1484795752790},{"_id":"public/themes/screenshots/varaint.png","hash":"feaf1308077d3bff875be077b2e4f5340ae69529","modified":1484795752791},{"_id":"public/themes/screenshots/Line.png","hash":"b288d7ce9fe947762fb36ab32867339e49751e77","modified":1484795752798},{"_id":"public/themes/screenshots/spfk.png","hash":"56456d489b4bf0cb2621038234c6957deed56145","modified":1484795752798},{"_id":"public/themes/screenshots/Ada.png","hash":"a4c2bc816e4ee7d907eaebc70f14ef9fbdec1fe5","modified":1484795752802},{"_id":"public/themes/screenshots/CyanStyle.png","hash":"a2f64e43fbe5e3ace8179cb22747cbd4039d833c","modified":1484795752805},{"_id":"public/themes/screenshots/Hiker.png","hash":"ac1d88ec1dbc5db6eccbfa9f5639e4877772b5c3","modified":1484795752805},{"_id":"public/themes/screenshots/LandFarZ.png","hash":"42018d5b4fd81f67ab1d7ca350219606802d3302","modified":1484795752805},{"_id":"public/themes/screenshots/Aloha.png","hash":"5d0fa89aadc07fee8f16da05a27f45c696e0510d","modified":1484795752808},{"_id":"public/themes/screenshots/Random.png","hash":"7ded7367e0ad8429c0a7b39007ba38f884deeed7","modified":1484795752808},{"_id":"public/themes/screenshots/Magnetic.png","hash":"e550378d42b7680de3904bcc9923bdf76b38565c","modified":1484795752810},{"_id":"public/themes/screenshots/hexadillax.png","hash":"a950f87fbab846e27f43fa0c2c88e59ce51637ac","modified":1484795752812},{"_id":"public/themes/screenshots/pteris.png","hash":"d9298b3ec247961f506885e9d006023357ab3362","modified":1484795752814},{"_id":"public/themes/screenshots/Huxblog.png","hash":"101145e25e75875e1a187f1af4b69bf17fc56100","modified":1484795752817},{"_id":"public/themes/screenshots/beautiful-hexo.png","hash":"7b7f2e94d787da46dc74f4e070d6cd74a8ae0f7f","modified":1484795752819},{"_id":"public/themes/screenshots/strata.png","hash":"1194bc662ad83f431803fe3384ef5c40ca832d5e","modified":1484795752820},{"_id":"public/news/28/02/2016/hexo-3-2-released/index.html","hash":"704503f56e34d7ed7c65b10c012e7a02ba139493","modified":1484796715764},{"_id":"public/news/05/03/2015/hexo-3-0-released/index.html","hash":"75e2bccdfe6b0ff98ce251ba33daba1595ebd035","modified":1484796715764},{"_id":"public/news/27/02/2015/new-documentation-and-registry/index.html","hash":"5c7e9231c01dcb38e52b076510205543c5362049","modified":1484796715764},{"_id":"public/news/13/07/2014/hexo-2-8-released/index.html","hash":"e1ba11fe125db3aea4727b8e28a22d40d963f516","modified":1484796715764},{"_id":"public/news/14/06/2014/hexo-2-7-released/index.html","hash":"60c37324a27a2d7751af20b0952a81b799661a8b","modified":1484796715765},{"_id":"public/news/13/07/2014/hexo-2-8-released/generate-console.png","hash":"1112c1f241871475b1ddac6eeecfea576abb465f","modified":1484796135201},{"_id":"public/news/13/07/2014/hexo-2-8-released/generate-console@2x.png","hash":"f2a8a4a7461e977c5908015f9bbb8befcd4524bb","modified":1484796135205}],"Category":[],"Data":[{"_id":"languages","data":{"en":"English"}},{"_id":"menu","data":{"docs":"/docs/","api":"/api/","news":"/news/","plugins":"/plugins/","themes":"/themes/"}},{"_id":"plugins","data":[{"name":"hexo-filter-flowchart","description":"Generate flowchart diagrams for Hexo.","link":"https://github.com/bubkoo/hexo-filter-flowchart","tags":["filter","flowchart","diagrams","markdown"]},{"name":"hexo-filter-sequence","description":"Generate UML sequence diagrams for Hexo.","link":"https://github.com/bubkoo/hexo-filter-sequence","tags":["filter","sequence","diagrams","markdown"]},{"name":"hexo-filter-sup","description":"Generate superscript (sup) tag for Hexo.","link":"https://github.com/bubkoo/hexo-filter-sup","tags":["sup","tag","filter","markdown"]},{"name":"hexo-filter-sub","description":"Generate subscript (sub) tag for Hexo.","link":"https://github.com/bubkoo/hexo-filter-sub","tags":["sub","tag","filter","markdown"]},{"name":"hexo-d3cloudtag","description":"Using d3-cloud to generate tagcloud for Hexo.","link":"https://github.com/lucyhao/hexo-d3cloudtag","tags":["plugins","d3-cloudud","tagcloud"]},{"name":"hexagon","description":"Package manager for Hexo.","link":"https://github.com/adamsiwiec/hexagon","tags":["themes","plugins","emojis","cli","manager"]},{"name":"hexo-tag-html5video","description":"Embed html5 video player and play videos stored in asset_path or elsewhere in public folder for Hexo.","link":"https://github.com/stephenmkbrady/hexo-tag-html5","tags":["tag_plugins","mp4","html5video","webm","video"]},{"name":"hexo-generator-fragments","description":"Generate paged html fragments for `Index`, `Category` and `Tag` pages, let `Hexo` support elegant ajax pagination.","link":"https://github.com/mamboer/hexo-generator-fragments","tags":["generator","pagination","ajax-pagination","fragments"]},{"name":"hexo-filter-cleanup","description":"All in one. Minifier & Optimization plugin for Hexo. Inspired by `hexo-all-minifier` but including more features.","link":"https://github.com/mamboer/hexo-filter-cleanup","tags":["filter","imagemin","html-minifier","uglify","useref","favicons"]},{"name":"hexo-helper-obfuscate","description":"Obfuscate strings using html entities. Handy against crawlers.","link":"https://github.com/andrewpeterprifer/hexo-helper-obfuscate/","tags":["helper","obfuscate","encode","email","crawler","entity","entities"]},{"name":"hexo-wordcount","description":"Word Count Plugin for Hexo.","link":"https://github.com/willin/hexo-wordcount","tags":["wordcount","count","words"]},{"name":"hexo-imagemin","description":"Minify images with imagemin.","link":"https://github.com/vseventer/hexo-imagemin","tags":["assets","filter","imagemin","images"]},{"name":"hexo-more-css","description":"Compress CSS with more-css.","link":"https://github.com/vseventer/hexo-more-css","tags":["css","filter","minify","more-css"]},{"name":"hexo-uncss","description":"Remove unused styles from CSS with uncss.","link":"https://github.com/vseventer/hexo-uncss","tags":["css","filter","html","uncss"]},{"name":"hexo-ruby-character","description":"Ruby character tag for Hexo, like <ruby>博客<rp> (</rp><rt>bó kè</rt><rp>) </rp></ruby>.","link":"https://github.com/JamesPan/hexo-ruby-character","tags":["tag","ruby-character","pinyin"]},{"name":"hexo-filter-indicate-the-source","description":"Insert informations that can indicate the source of blog posts.","link":"https://github.com/JamesPan/hexo-filter-indicate-the-source","tags":["filter","indicate-the-source","anti-crawl"]},{"name":"hexo-server","description":"Server module for Hexo.","link":"https://github.com/hexojs/hexo-server","tags":["official","server","console"]},{"name":"hexo-cli","description":"Command line interface for Hexo.","link":"https://github.com/hexojs/hexo-cli","tags":["official","console","cli"]},{"name":"hexo-browsersync","description":"BrowserSync plugin for Hexo.","link":"https://github.com/hexojs/hexo-browsersync","tags":["official","browsersync","server"]},{"name":"hexo-renderer-less","description":"Less renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-less","tags":["official","renderer","less","style","css"]},{"name":"hexo-renderer-webpack","description":"Webpack renderer for Hexo.","link":"https://github.com/briangonzalez/hexo-renderer-webpack","tags":["renderer","js","webpack"]},{"name":"hexo-generator-amp","description":"AMP (acccelerated mobile pages) page generator plugin for Hexo.","link":"https://github.com/tea3/hexo-generator-amp","tags":["generator","amp"]},{"name":"hexo-related-popular-posts","description":"A hexo plugin that generates a list of links to related posts and popular posts. Also , this plugin can get Visitor Counts (PV) on posts.","link":"https://github.com/tea3/hexo-related-popular-posts","tags":["popularPosts","relatedPosts","RelevanceOfContents","visitorCounts","pageViews","PV","helper","generator"]},{"name":"hexo-generator-archive","description":"Archive generator plugin for Hexo.","link":"https://github.com/hexojs/hexo-generator-archive","tags":["official","generator","archive"]},{"name":"hexo-generator-category","description":"Category generator plugin for Hexo.","link":"https://github.com/hexojs/hexo-generator-category","tags":["official","generator","category"]},{"name":"hexo-generator-tag","description":"Tag generator plugin for Hexo.","link":"https://github.com/hexojs/hexo-generator-tag","tags":["official","generator","tag"]},{"name":"hexo-generator-index","description":"Index generator plugin for Hexo.","link":"https://github.com/hexojs/hexo-generator-index","tags":["official","generator","index"]},{"name":"hexo-generator-search","description":"Search data generator for Hexo.","link":"https://github.com/PaicHyperionDev/hexo-generator-search","tags":["generator","search"]},{"name":"hexo-renderer-marked","description":"Markdown renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-marked","tags":["official","renderer","markdown","marked"]},{"name":"hexo-renderer-kramed","description":"Markdown renderer for Hexo with kramed engine.","link":"https://github.com/sun11/hexo-renderer-kramed","tags":["renderer","markdown","kramed"]},{"name":"hexo-autoprefixer","description":"Autoprefixer plugin for Hexo.","link":"https://github.com/hexojs/hexo-autoprefixer","tags":["official","filter","css","autoprefixer"]},{"name":"hexo-clean-css","description":"Minify CSS files with clean-css.","link":"https://github.com/hexojs/hexo-clean-css","tags":["official","filter","css","cleancss","minify"]},{"name":"hexo-html-minifier","description":"Minify HTML files with HTMLMinifier.","link":"https://github.com/hexojs/hexo-html-minifier","tags":["official","filter","html","minify"]},{"name":"hexo-uglify","description":"Minify JavaScript files with UglifyJS.","link":"https://github.com/hexojs/hexo-uglify","tags":["official","filter","js","uglify","minify"]},{"name":"hexo-notify","description":"Notification plugins for Hexo.","link":"https://github.com/hexojs/hexo-notify","tags":["official","notify"]},{"name":"hexo-deployer-openshift","description":"OpenShift deployer for Hexo.","link":"https://github.com/hexojs/hexo-deployer-openshift","tags":["official","deployer","openshift"]},{"name":"hexo-deployer-heroku","description":"Heroku deployer for Hexo.","link":"https://github.com/hexojs/hexo-deployer-heroku","tags":["official","deployer","heroku"]},{"name":"hexo-deployer-git","description":"Git deployer plugin for Hexo.","link":"https://github.com/hexojs/hexo-deployer-git","tags":["official","deployer","git"]},{"name":"hexo-deployer-rsync","description":"Rsync deployer plugin for Hexo.","link":"https://github.com/hexojs/hexo-deployer-rsync","tags":["official","deployer","rsync"]},{"name":"hexo-deployer-s3","description":"Amazon S3 deployer plugin for Hexo.","link":"https://github.com/nt3rp/hexo-deployer-s3","tags":["deployer","s3"]},{"name":"hexo-deployer-s3-cloudfront","description":"Amazon S3 and Cloudfront deployer plugin for Hexo.","link":"https://github.com/Wouter33/hexo-deployer-s3-cloudfront","tags":["deployer","s3","cloudfront"]},{"name":"hexo-deployer-ansible","description":"Ansible deployer plugin for Hexo.","link":"https://github.com/zyuyou/hexo-deployer-ansible","tags":["deployer","ansible"]},{"name":"hexo-generator-sitemap","description":"Sitemap generator for Hexo.","link":"https://github.com/hexojs/hexo-generator-sitemap","tags":["official","generator","sitemap"]},{"name":"hexo-generator-seo-friendly-sitemap","description":"SEO friendly sitemap generator for Hexo. Generate separated sitemap files for pages, posts, categories, tags and add a XSL stylesheet.","link":"https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap","tags":["generator","sitemap","SEO"]},{"name":"hexo-generator-feed","description":"Feed generator for Hexo.","link":"https://github.com/hexojs/hexo-generator-feed","tags":["official","generator","feed","rss"]},{"name":"hexo-renderer-stylus","description":"Stylus renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-stylus","tags":["official","renderer","css","stylus"]},{"name":"hexo-filter-auto-spacing","description":"Add spaces between CJK characters and western characters.","link":"https://github.com/hexojs/hexo-filter-auto-spacing","tags":["official","filter","spacing"]},{"name":"hexo-migrator-wordpress","description":"WordPress migrator for Hexo.","link":"https://github.com/hexojs/hexo-migrator-wordpress","tags":["official","migrator","wordpress"]},{"name":"hexo-migrator-rss","description":"RSS migrator for Hexo.","link":"https://github.com/hexojs/hexo-migrator-rss","tags":["official","migrator","rss"]},{"name":"hexo-migrator-github-issue","description":"Github issue migrator for Hexo.","link":"https://github.com/Yikun/hexo-migrator-github-issue","tags":["migrator","github","issue"]},{"name":"hexo-renderer-ejs","description":"EJS renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-ejs","tags":["official","renderer","ejs"]},{"name":"hexo-renderer-jade","description":"Jade renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-jade","tags":["official","renderer","jade"]},{"name":"hexo-renderer-haml","description":"Haml renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-haml","tags":["official","renderer","haml"]},{"name":"hexo-renderer-dot","description":"doT renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-dot","tags":["official","renderer","dot"]},{"name":"hexo-renderer-coffeescript","description":"CoffeeScript renderer for Hexo.","link":"https://github.com/hexojs/hexo-renderer-coffeescript","tags":["official","renderer","coffeescript","coffee"]},{"name":"hexo-livereload","description":"Livereload plugin for Hexo.","link":"https://github.com/hexojs/hexo-livereload","tags":["official","server","livereload"]},{"name":"hexo-generator-alias","description":"Generate alias pages for redirecting to post, pages or URL.","link":"https://github.com/hexojs/hexo-generator-alias","tags":["official","generator","alias","redirect"]},{"name":"hexo-deployer-ftpsync","description":"FTP deployer for Hexo.","link":"https://github.com/hexojs/hexo-deployer-ftpsync","tags":["official","deployer","ftp"]},{"name":"hexo-migrator-blogger","description":"Blogger (blogspot.com) migrator for Hexo.","link":"https://github.com/hr6r/hexo-migrator-blogger","tags":["migrator","blogger","blogspot"]},{"name":"hexo-renderer-markdown-it","description":"Very fast Markdown renderer with support for CommonMark, GFM and more.","link":"https://github.com/celsomiranda/hexo-renderer-markdown-it","tags":["renderer","markdown","markdown-it"]},{"name":"hexo-renderer-org","description":"Hexo renderer plugin for emacs org-mode.","link":"https://github.com/CodeFalling/hexo-renderer-org","tags":["renderer","orgmode"]},{"name":"hexo-renderer-bourbon","description":"An up-to-date node-sass wrapper for Hexo that includes Bourbon mixins.","link":"https://github.com/celsomiranda/hexo-renderer-bourbon","tags":["renderer","sass","libsass","bourbon"]},{"name":"hexo-migrator-joomla","description":"Joomla migrator for Hexo.","link":"https://github.com/welksonramos/hexo-migrator-joomla","tags":["official","joomla","migrator"]},{"name":"hexo-renderer-yasr","description":"A Stylus CSS renderer for Hexo that uses Nib, Axis, Rupture, Jeet and Autoprefixer with Sourcemaps.","link":"https://github.com/celsomiranda/hexo-renderer-yasr","tags":["renderer","css","stylus","nib","jeet","rupture","axis","sourcemaps"]},{"name":"hexo-renderer-pandoc","description":"A pandoc-flavored-markdown renderer for Hexo. Also supports rendering textile, reStructedText, etc.","link":"https://github.com/wzpan/hexo-renderer-pandoc","tags":["renderer","pandoc","markdown","textile","reStructedText"]},{"name":"hexo-renderer-restructuredtext","description":"Renderer for restructuredtext using Docutils","link":"https://gitlab.com/mcepl/hexo-renderer-restructuredtext.git","tags":["renderer","reStructedText","rst"]},{"name":"hexo-tag-instagram","description":"Embed instagram photo and movie tag plugin for Hexo.","link":"https://github.com/tea3/hexo-tag-instagram","tags":["tag_plugins","instagram","photo","video"]},{"name":"hexo-tag-twentytwenty","description":"Hexo tag to embed Image Comparison Slider Scripts. Image Comparison Slider depend on jQuery Twenty Twenty plugin.","link":"https://github.com/tea3/hexo-tag-twentytwenty","tags":["tag_plugins","image","comparison","slider","twentytwenty"]},{"name":"hexo-tag-bootstrap","description":"hexo-tag-bootstrap is a collection of Hexo tag plugins, which wraps most Twitter-Bootstrap 3.1.1 components in a uniform way.","link":"https://github.com/wzpan/hexo-tag-bootstrap","tags":["tag_plugins","bootstrap"]},{"name":"hexo-tag-spotify","description":"Server module for Hexo.","link":"https://github.com/ivanovyordan/hexo-tag-spotify","tags":["tag","spotify","music","widget"]},{"name":"hexo-tag-plantuml","description":"hexo-tag-plantuml is a tag plugin for Hexo. It can work with plantuml to draw uml.","link":"https://github.com/oohcoder/hexo-tag-plantuml","tags":["tag_plugins","plantuml","uml"]},{"name":"hexo-tag-katex","description":"Hexo Tag Plugin to support LaTeX using Katex library.","link":"https://github.com/iamprasad88/hexo-tag-katex","tags":["tag","latex","katex","tex"]},{"name":"hexo-toc","description":"Insert a markdown TOC (Table Of Contents) before posts are rendered when and where a placeholder is found.","link":"https://github.com/bubkoo/hexo-toc","tags":["toc","filter","markdown","placeholder"]},{"name":"hexo-filter-fenced-code","description":"Extend syntax for the native fenced code block. Use tag-plugins as fenced code block.","link":"https://github.com/bubkoo/hexo-filter-fenced-code","tags":["filter","code block","extend","syntax","markdown"]},{"name":"hexo-beautify","description":"Beautify Hexo generated HTML, CSS and JS files, using js-beautify.","link":"https://github.com/celsomiranda/hexo-beautify","tags":["filter","beautify","html","css","js"]},{"name":"hexo-qiniu-sync","description":"Sync static files to Qiniu CDN for you automatically","link":"https://github.com/gyk001/hexo-qiniu-sync","tags":["sync","qiniu","cdn","image","css","js"]},{"name":"hexo-front-matter-excerpt","description":"Write post excerpts using YAML front matter.","link":"https://github.com/lalunamel/hexo-front-matter-excerpt","tags":["excerpt","front-matter"]},{"name":"hexo-github","description":"Display a GitHub repository badge with timeline in your post to keep track of version difference.","link":"https://github.com/akfish/hexo-github","tags":["tag","timeline","badge","github","version control"]},{"name":"hexo-math","description":"Add MathJax support","link":"https://github.com/akfish/hexo-math","tags":["tag","math","MathJax"]},{"name":"hexo-tag-googlemaps","description":"A hexo tag for google maps. Does much more than a simple embedded iFrame","link":"https://github.com/the-simian/hexo-tag-googlemaps","tags":["tag","googlemaps","map","latitude","longitude","markers"]},{"name":"hexo-tag-googlecharts","description":"A hexo tag for inserting google charts in your blog","link":"https://github.com/juampi92/hexo-tag-googlecharts","tags":["tag","googlecharts","chart"]},{"name":"hexo-tag-deezer","description":"Tag for showing Deezer track widget on page.","link":"https://github.com/OdinsHat/hexo-tag-deezer","tags":["tag","deezer","music","widget"]},{"name":"hexo-tag-flickr","description":"Allows you to embed Flickr photo on your blog posts.","link":"https://github.com/visioncan/hexo-tag-flickr","tags":["tag","flickr","photo","image"]},{"name":"hexo-tag-imgurgal","description":"Embed imgur galleries/albums","link":"https://github.com/DrummerHead/hexo-tag-imgurgal","tags":["tag","imgur","photos","image","gallery","album"]},{"name":"hexo-tag-vine","description":"Embed your Vine videos in posts/pages.","link":"https://github.com/welksonramos/hexo-tag-vine","tags":["tag","vine","video","social"]},{"name":"hexo-tag-xvideos","description":"Embed xvideos player in your posts/pages.","link":"https://github.com/welksonramos/hexo-tag-xvideos","tags":["tag","xvideos","video"]},{"name":"hexo-hey","description":"An admin plugin for Hexo.","link":"https://github.com/nihgwu/hexo-hey","tags":["admin","dashboard","editor"]},{"name":"hexo-admin","description":"Edit your content in style with this integrating blogging environment.","link":"https://github.com/jaredly/hexo-admin","tags":["admin","interface","editor","IDE","preview","ghost","dashboard"]},{"name":"hexo-tag-bilibili","description":"Embed bilibili videos in Hexo posts/pages.","link":"https://github.com/Z4Tech/hexo-tag-bilibili","tags":["tag","bilibili","video"]},{"name":"hexo-generator-json-content","description":"Generate a JSON file for generic use or consumption with the contents of posts and pages. Useful for AJAX search or content API.","link":"https://github.com/alexbruno/hexo-generator-json-content","tags":["generator","content","json","data","search","api"]},{"name":"hexo-generator-json-feed","description":"Generate a JSON file similar to RSS feed channel structure with posts contents for generic use or consumption.","link":"https://github.com/alexbruno/hexo-generator-json-feed","tags":["generator","content","json","feed","rss","search","api"]},{"name":"hexo-tag-niconico","description":"Embed NicoNico seiga/douga in Hexo posts/pages.","link":"https://github.com/kamiya555/hexo-tag-niconico","tags":["tag","niconico","video","image"]},{"name":"hexo-cli-extras","description":"Unofficial CLI plugin for convenient editing, renaming, deleting, isolating and integrating posts and pages from the command line.","link":"https://github.com/greg-js/hexo-cli-extras","tags":["console","cli","editor","admin"]},{"name":"hexo-filter-fix-cjk-spacing","description":"Join continuous CJK lines in markdown before rendering.","link":"https://github.com/lotabout/hexo-filter-fix-cjk-spacing","tags":["filter","cjk","spacing","line"]},{"name":"hexo-tag-owl","description":"A media tag for Hexo 3.x","link":"https://github.com/m80126colin/hexo-tag-owl","tags":["hexo","blog","tag","video","youtube","niconico","bilibili","vimeo","tudou","youku","tencent","image","giphy"]},{"name":"hexo-tag-githubimage","description":"Inserts an image tag using a github content distribution.","link":"https://github.com/wizicer/hexo-tag-githubimage/","tags":["website","blog","hexo","image","embedded","github"]},{"name":"hexo-imgix","description":"Use the imgix API for image manipulation via a tag, filter and helper.","link":"https://github.com/mshick/hexo-imgix/","tags":["hexo","imgix","filter","tag","helper","manipulation","image"]},{"name":"hexo-pdf","description":"Hexo tag to embed pdf in posts/pages.","link":"https://github.com/superalsrk/hexo-pdf/","tags":["hexo","tag","pdf"]},{"name":"hexo-all-minifier","description":"Minifier & Optimization plugin for Hexo, include HTML, CSS, JS and Image.","link":"https://github.com/unhealthy/hexo-all-minifier","tags":["hexo","filter","minify","optimize","html","css","js","image"]},{"name":"hexo-autonofollow","description":"Adds nofollow attribute to all external links in your hexo blog posts automatically.","link":"https://github.com/liuzc/hexo-autonofollow","tags":["hexo-autonofollow","SEO","nofollow","external"]},{"name":"hexo-auto-canonical","description":"A generator automatically make canonical link for hexo.","link":"https://github.com/HyunSeob/hexo-auto-canonical","tags":["hexo-auto-canonical","helper","canonical","SEO"]},{"name":"hexo-generator-postmap","description":"Generates a page with an embedded Google map, showing the locations of all geo-tagged posts and pages.","link":"https://github.com/jamiei/hexo-generator-postmap","tags":["hexo-generator-postmap","maps","generator","google","location"]},{"name":"hexo-tag-aplayer","description":"Embed aplayer in Hexo posts/pages.","link":"https://github.com/grzhan/hexo-tag-aplayer","tags":["hexo-tag-aplayer","tag","player","aplayer","music"]},{"name":"hexo-tag-dplayer","description":"Embed dplayer in Hexo posts/pages.","link":"https://github.com/NextMoe/hexo-tag-dplayer","tags":["hexo-tag-dplayer","tag","player","dplayer","video"]},{"name":"hexo-tag-youku","description":"A hexo tag for inserting youku video in your blog.","link":"https://github.com/zhoulvjun/hexo-tag-youku","tags":["hexo-tag-youku","tag","youku","video"]},{"name":"hexo-tag-echarts","description":"A hexo tag for inserting echarts chart in your blog.","link":"https://github.com/zhoulvjun/hexo-tag-echarts","tags":["hexo-tag-echarts","tag","echarts","chart"]},{"name":"hexo-tag-htmltag","description":"A Hexo tag for inserting arbitrary html tags (with attributes) into posts.","link":"https://github.com/seangravener/hexo-tag-htmlTag","tags":["hexo-tag-htmltag","tag","html","code"]},{"name":"hexo-featured-image","description":"A plugin that adds support for featured images in posts and json-content.","link":"https://github.com/poacher2k/hexo-featured-image","tags":["hexo-featured-image","featured","image","json","json-content"]},{"name":"hexo-url-image","description":"adding url_image in front-matter, then refer post.url_image in your templates;","link":"https://github.com/roybein/hexo-url-image","tags":["hexo-url-image","url","image"]},{"name":"hexo-tag-admonition","description":"Tag plugin for inserting admonition in your blog.","link":"https://github.com/haishanh/hexo-tag-admonition","tags":["hexo-tag-admonition","tag","admonition"]},{"name":"hexo-addlink","description":"An plugin for adding current post link in hexo post page.","link":"https://github.com/acwong00/hexo-addlink","tags":["hexo-addlink","filter","post"]},{"name":"hexo-tag-cloud","description":"Yet, another tag cloud plugin for hexo.","link":"https://github.com/MikeCoder/hexo-tag-cloud","tags":["hexo-tag-cloud","tag","cloud"]},{"name":"hexo-critical-css","description":"Add critical css to your HTML for faster rendering pages.","link":"https://github.com/john-whitley/hexo-critical-css","tags":["hexo-critical-css","css","critical","filter"]},{"name":"hexo-github-card","description":"Display a card for GitHub profile and repo in your hexo blog post.","link":"https://github.com/Gisonrg/hexo-github-card","tags":["tag","github","card","profile"]},{"name":"hexo-autolinker","description":"Automatically create HTML links from URLs, emails, Twitter handles and more.","link":"https://github.com/klugjo/hexo-autolinker","tags":["hexo-autolinker","hyperlink","link","email","URL"]},{"name":"hexo-footnotes","description":"A plugin to support markdown footnotes in your Hexo blog posts","link":"https://github.com/LouisBarranqueiro/hexo-footnotes","tags":["filter","markdown","footnotes"]},{"name":"hexo-generator-recent","description":"Creates a list of recent articles in JSON","link":"https://github.com/leviwheatcroft/hexo-generator-recent","tags":["generator","recent"]},{"name":"hexo-index-anything","description":"Generate custom indexes","link":"https://github.com/leviwheatcroft/hexo-index-anything","tags":["index","generator"]},{"name":"hexo-thumbnails","description":"generate image thumbnails","link":"https://github.com/leviwheatcroft/hexo-thumbnails","tags":["thumbs","thumbnails"]},{"name":"hexo-imgur","description":"populate post variables from imgur gallery","link":"https://github.com/leviwheatcroft/hexo-imgur","tags":["imgur","photos","gallery","tag"]},{"name":"hexo-filter-pathfix","description":"using absolute path for assets","link":"https://github.com/wayou/hexo-filter-pathfix","tags":["assets","filter","path","tag"]},{"name":"hexo-image-caption","description":"add caption for images within posts","link":"https://github.com/wayou/hexo-image-caption","tags":["posts","image","caption"]},{"name":"hexo-uuid","description":"give your posts an uuid","link":"https://github.com/chekun/hexo-uuid","tags":["post","uuid"]},{"name":"hexo-excerpt","description":"automatic excerpt generator","link":"https://github.com/chekun/hexo-excerpt","tags":["post","excerpt"]},{"name":"hexo-hrefmd","description":"set hexo can modfiy .md to html in links. |md链接支持","link":"https://github.com/rozbo/hexo-hrefmd","tags":["href","md","中文支持"]},{"name":"hexo-neat","description":"auto Minify html、js、css and make it neat","link":"https://github.com/rozbo/hexo-neat","tags":["minify","all in on","中文支持","html","js","css"]},{"name":"hexo-abbrlink","description":"auto create one and only link for every post for hexo","link":"https://github.com/rozbo/hexo-abbrlink","tags":["permalink","link","固定链接"]},{"name":"hexo-generator-github","description":"Github generator for Hexo","link":"https://github.com/Jamling/hexo-generator-github","tags":["github","generator","helper"]},{"name":"hexo-generator-i18n","description":"Multi-languages pages generator for Hexo","link":"https://github.com/Jamling/hexo-generator-i18n","tags":["i18n","generator","helper"]},{"name":"hexo-generator-index2","description":"Filtered index generator for Hexo","link":"https://github.com/Jamling/hexo-generator-index2","tags":["generator","index"]},{"name":"hexo-filter-highlight","description":"Highlight plugin using highlight.js for Hexo","link":"https://github.com/Jamling/hexo-filter-highlight","tags":["highlight","代码高亮"]},{"name":"hexo-encrypt","description":"encrypt the content of your post(对你的文章内容进行加密)","link":"https://github.com/edolphin-ydf/hexo-encrypt","tags":["encrypt","permission","private"]},{"name":"hexo-tag-leaflet","description":"Add a new tag to integrate leaflet based online maps.","link":"https://github.com/ender74/hexo-tag-leaflet","tags":["tag","map","leaflet","osm","tracks"]},{"name":"hexo-tag-asciinema","description":"Embed asciinema into your post","link":"https://github.com/zenyai/hexo-tag-asciinema","tags":["tag","asciinema"]},{"name":"hexo-tag-kbd","description":"Displays the keycaps in your post/page.","link":"https://github.com/kamiya555/hexo-tag-kbd","tags":["tag","keycaps"]},{"name":"hexo-generator-index-i18n","description":"I18n index generator plugin for Hexo.","link":"https://github.com/xcatliu/hexo-generator-index-i18n","tags":["generator","index","i18n"]},{"name":"hexo-generator-archive-alphabet","description":"Generate alphabetical archive for Hexo.","link":"https://github.com/xcatliu/hexo-generator-archive-alphabet","tags":["generator","archive","alphabet"]},{"name":"hexo-generator-archive-alphabet-i18n","description":"Generate i18n alphabetical archive for Hexo.","link":"https://github.com/xcatliu/hexo-generator-archive-alphabet-i18n","tags":["generator","archive","alphabet","i18n"]},{"name":"hexo-tag-tencent","description":"A hexo plugin for inserting youku or tencent video in your site.","link":"https://github.com/HmyBmny/hexo-tag-tencent","tags":["tag","video","youku","tencent video"]},{"name":"hexo-filter-date-from-git","description":"Read git log and overwrite the front-matter properties `date` and `updated` for each posts.","link":"https://github.com/xcatliu/hexo-filter-date-from-git","tags":["date","updated","git"]},{"name":"hexo-filter-author-from-git","description":"Read git log and add the properties `author` and `contributors` for each posts.","link":"https://github.com/xcatliu/hexo-filter-author-from-git","tags":["author","contributors","git"]},{"name":"hexo-medium-image","description":"A medium-like image lazyload plugin.","link":"https://github.com/ele828/hexo-medium-image-plugin","tags":["image","medium","lazyload"]},{"name":"hexo-algoliasearch","description":"A plugin to index posts of your Hexo blog on Algolia","link":"https://github.com/LouisBarranqueiro/hexo-algoliasearch","tags":["algoliasearch","algolia","search"]},{"name":"hexo-filter-file-link","description":"A plugin to make convenient to link local posted file in markdown style","link":"https://github.com/zhenyong/hexo-filter-file-link","tags":["filter","link","file"]},{"name":"hexo-prism-plugin","description":"A plugin for code highlight by Prism.js","link":"https://github.com/ele828/hexo-prism-plugin","tags":["code","highlight","prism.js"]},{"name":"hexo-generator-type","description":"clasify hexo site.pages and create pagination list","link":"https://github.com/callmelanmao/hexo-generator-type","tags":["generator","cliasify","types"]},{"name":"hexo-tag-embed","description":"Insert an embed tag in your hexo blog.","link":"https://github.com/brucelin/hexo-tag-embed","tags":["tag","embed","types"]},{"name":"hexo-hanzi","description":"Postrender your posts with hanzi (漢字標準格式).","link":"https://github.com/lujjjh/hexo-hanzi","tags":["filter","hanzi","han-css"]},{"name":"hexo-generator-taxonomy","description":"borrow taxonomy from hugo","link":"https://github.com/callmelanmao/hexo-generator-taxonomy","tags":["generator","taxonomy","awesome"]},{"name":"hexo-blog-encrypt","description":"Yet, another blog encrypt plugin for hexo.","link":"https://github.com/MikeCoder/hexo-blog-encrypt","tags":["encrypt","aes","security"]},{"name":"hexo-spoiler","description":"A tag plugin used to cover your text with shadow","link":"https://github.com/unnamed42/hexo-spoiler","tags":["spoiler","tag"]},{"name":"hexo-azuresearch","description":"Azure Search support for Hexo.","link":"https://github.com/artchen/hexo-azuresearch","tags":["azure","search"]},{"name":"hexo-tag-demo","description":"Create a demo area (html, css, javascript) in the post content.","link":"https://github.com/laomao800/hexo-tag-demo","tags":["tag","demo"]},{"name":"hexo-reading-time","description":"Plugin that displays reading time for the article.","link":"https://github.com/ierhyna/hexo-reading-time","tags":["reading-time","helper"]},{"name":"hexo-sliding-spoiler","description":"Hides content until the reveal area is pressed.","link":"https://github.com/fletchto99/hexo-sliding-spoiler","tags":["spoiler","sliding","hidden-content"]},{"name":"hexo-tag-apester","description":"Apester interactive tag plugin to include in Hexo page/post.","link":"https://github.com/iamchathu/hexo-tag-apester","tags":["apester","interactive","quiz"]},{"name":"hexo-include","description":"Include the raw contents of any file (html, text, etc) directly into post contents.","link":"https://github.com/pipirt/hexo-include","tags":["tag","include","insert"]},{"name":"hexo-render-pug","description":"Pug template renderer for hexo, use pug template language.","link":"https://github.com/maxknee/hexo-render-pug","tags":["jade","pug","template"]},{"name":"hexo-algolia","description":"Index posts and contents in [Algolia](https://www.algolia.com/) and offer a blazing fast search experience to your users.","link":"https://npmjs.com/hexo-algolia","tags":["search","algolia","index"]},{"name":"hexo-slack-notify","description":"A Hexo plugin to Slack nofify","link":"https://github.com/Plasma-Paris/hexo-slack-notify","tags":["notify","slack","social"]},{"name":"hexo-baidu-url-submit","description":"Hexo plugin to submit URLs of new posts to Baidu search engine","link":"https://github.com/huiwang/hexo-baidu-url-submit","tags":["baidu","seo"]},{"name":"hexo-helper-page-languages","description":"Hexo helper to get available languages on a page","link":"https://github.com/polo2ro/hexo-helper-page-languages","tags":["helper","i18n","languages"]},{"name":"hexo-tag-echarts3","description":"A simple plugin for inserting ECharts 3 by using tags in Hexo.","link":"https://github.com/quentin-chen/hexo-tag-echarts3","tags":["tag","echarts","chart"]},{"name":"hexo-reference","description":"A plugin to support markdown footnotes and Wiki-Style tooltip reference in your Hexo blog posts.","link":"https://github.com/quentin-chen/hexo-reference","tags":["footnote","footnotes","reference","tooltip"]},{"name":"hexo-cdnify","description":"Converts local URLs to CDN ones when hexo generator.","link":"https://github.com/zqjimlove/hexo-cdnify","tags":["cdn"]},{"name":"hexo-helper-qrcode","description":"QRcode for Hexo helper plugins.","link":"https://github.com/yscoder/hexo-helper-qrcode","tags":["qrcode","helper"]},{"name":"hexo-generator-restful","description":"Generate RESTful json data for Hexo plugins.","link":"https://github.com/yscoder/hexo-generator-restful","tags":["json","data","RESTful","generator"]},{"name":"hexo-deployer-upyun","description":"UPYUN deployer for Hexo.","link":"https://github.com/Menci/hexo-deployer-upyun","tags":["deployer","UPYUN"]},{"name":"hexo-sync-gdrive","description":"Retrieve posts and drafts from Google Drive","link":"https://github.com/hollanddd/hexo-sync-gdrive","tags":["google","console"]},{"name":"hexo-tag-tweetable-quote","description":"Click to Tweet / Tweetable quotes for Hexo","link":"https://github.com/iamchathu/hexo-tag-tweetable-quote","tags":["social","tweet","quote","interactive"]},{"name":"hexo-tag-imgurl","description":"A plugin to convert your image url use CDN host.","link":"https://github.com/geekrainy/hexo-tag-imgurl","tags":["tag","images","photos"]},{"name":"hexo-generator-podcast","description":"Generate itunes-friendly podcast rss feed for Hexo.","link":"https://github.com/owen8877/hexo-generator-podcast","tags":["rss","podcast"]},{"name":"hexo-deployer-shell","description":"Use your own shell command to deploy hexo.","link":"https://github.com/HakurouKen/hexo-deployer-shell","tags":["deployer","shell"]},{"name":"hexo-filter-github-emojis","description":"Github emojis with unicode fallback.","link":"https://github.com/crimx/hexo-filter-github-emojis","tags":["filter","emojis","github","emoticons","images","symbols"]},{"name":"hexo-renderer-ejs2","description":"EJS renderer for Hexo using EJS version 2.","link":"https://github.com/NoahDragon/hexo-renderer-ejs2","tags":["ejs","renderer"]},{"name":"hexo-helper-post-top","description":"Pin posts on the top of the post list.","link":"https://github.com/cubesky/hexo-helper-post-top","tags":["helper","pin","post","top"]},{"name":"hexo-tag-easy-charts","description":"The easy to use chart tags for Hexo.","link":"https://github.com/aspirewit/hexo-tag-easy-charts","tags":["barchart","linechart","piechart"]},{"name":"hexo-offline","description":"Out-of-the-box hexo offline experience.","link":"https://github.com/JLHwung/hexo-offline","tags":["offline","sw-precache"]}]},{"_id":"sidebar","data":{"docs":{"getting_started":{"overview":"index.html","setup":"setup.html","configuration":"configuration.html","commands":"commands.html","migration":"migration.html"},"basic_usage":{"writing":"writing.html","front_matter":"front-matter.html","tag_plugins":"tag-plugins.html","asset_folders":"asset-folders.html","data_files":"data-files.html","server":"server.html","generating":"generating.html","deployment":"deployment.html"},"customization":{"permalinks":"permalinks.html","themes":"themes.html","templates":"templates.html","variables":"variables.html","helpers":"helpers.html","internationalization":"internationalization.html","plugins":"plugins.html"},"miscellaneous":{"troubleshooting":"troubleshooting.html","contributing":"contributing.html"}},"api":{"core":{"overview":"index.html","events":"events.html","locals":"locals.html","router":"router.html","box":"box.html","rendering":"rendering.html","posts":"posts.html","scaffolds":"scaffolds.html","themes":"themes.html"},"extensions":{"console":"console.html","deployer":"deployer.html","filter":"filter.html","generator":"generator.html","helper":"helper.html","migrator":"migrator.html","processor":"processor.html","renderer":"renderer.html","tag":"tag.html"}}}},{"_id":"themes","data":[{"name":"landscape","description":"A brand new default theme for Hexo.","link":"https://github.com/hexojs/hexo-theme-landscape","preview":"http://hexo.io/hexo-theme-landscape","tags":["official","responsive","widget","two_column","one_column"]},{"name":"Ada","description":"Ada is an concise theme for Hexo.","link":"https://github.com/shuiRong/hexo-theme-Ada","preview":"https://shuirong.github.io/","tags":["concise","one_column","white","clean","simple"]},{"name":"phase","description":"Feel the flow of time with Phase.","link":"https://github.com/hexojs/hexo-theme-phase","preview":"http://hexo.io/hexo-theme-phase","tags":["official","one_column"]},{"name":"light","description":"Default theme for Hexo.","link":"https://github.com/hexojs/hexo-theme-light","preview":"http://hexo.io/hexo-theme-light","tags":["official","responsive","two_column"]},{"name":"NexT","description":"NexT is an elegant theme for Hexo.","link":"https://github.com/iissnan/hexo-theme-next","preview":"http://notes.iissnan.com/","tags":["responsive","one_column","clean","white"]},{"name":"Icarus","description":"The blog theme you may fall in love with, coming to Hexo.","link":"https://github.com/ppoffice/hexo-theme-icarus","preview":"https://ppoffice.github.io/hexo-theme-icarus","tags":["responsive","three_column","clean","flat","light"]},{"name":"Hueman","description":"A redesign of Alx's wordpress theme Hueman, ported to Hexo.","link":"https://github.com/ppoffice/hexo-theme-hueman","preview":"https://ppoffice.github.io/hexo-theme-hueman","tags":["responsive","two_column","wordpress","elegant","hueman"]},{"name":"Flexy","description":"Flexy is a modern theme for Hexo, written in Jade and Stylus using Flexbox.","link":"https://github.com/sjaakvandenberg/flexy","preview":"https://svdb.co/","tags":["responsive","flexbox","two_column","clean","css3","jade","stylus","translate3d"]},{"name":"carbon","description":"Carbon is a simple theme using pjax for elegant loading.","link":"https://github.com/icylogic/carbon","preview":"https://blog.icylogic.net","tags":["simple","white & black","pjax"]},{"name":"hexadillax","description":"XadillaX built this theme with love and an otaku heart.","link":"https://github.com/XadillaX/hexadillax","preview":"https://xcoder.in/","tags":["bootstrap","simple","otaku"]},{"name":"Jacman","description":"A fresh looking and responsive theme for Hexo.","link":"https://github.com/wuchong/jacman","preview":"http://wuchong.me/jacman","tags":["responsive","two_column","blue","elegant"]},{"name":"Wixo","description":"Turn your Hexo into a Wiki!","link":"https://github.com/wzpan/hexo-theme-wixo","preview":"http://wzpan.github.io/hexo-theme-wixo/","tags":["wiki","responsive","simple","tag_plugins","bootstrap","modal"]},{"name":"Freemind","description":"Fully taking advantages of Bootstrap.","link":"https://github.com/wzpan/hexo-theme-freemind","preview":"http://wzpan.github.io/hexo-theme-freemind/","tags":["two_column","responsive","elegant","tag_plugins","bootstrap","color_themes"]},{"name":"Simplest","description":"Very simple, written with swig & scss.","link":"https://github.com/dnxbf321/hexo-theme-simplest","preview":"https://dnxbf321.github.io","tags":["responsive","swig","scss","one_column"]},{"name":"hexoThemeKacper","description":"Suitable for products blog","link":"https://github.com/jaywcjlove/hexoThemeKacper","preview":"http://JSlite.io","tags":["bootstrap","tag_plugins","elegant"]},{"name":"Tranquilpeak","description":"A gorgeous responsive theme for Hexo blog framework","link":"https://github.com/LouisBarranqueiro/tranquilpeak-hexo-theme","preview":"http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak","tags":["responsive","gorgeous","sidebar","two_column","one_column","tag_plugins"]},{"name":"Minos","description":"A simple and retro styled Hexo theme, concentrated more on your ideas.","link":"https://github.com/ppoffice/hexo-theme-minos","preview":"http://ppoffice.github.io/hexo-theme-minos","tags":["responsive","one_column","simple","retro","white"]},{"name":"Foundation","description":"A theme based on the Zurb Foundation 5 theme.","link":"https://github.com/chrisjlee/hexo-theme-zurb-foundation","preview":"http://chrisjlee.github.io/hexo-theme-zurb-foundation","tags":["responsive","mobile_first","simple","white"]},{"name":"simpleblock","description":"A simple theme inspired by Twenty Twelve.","link":"https://github.com/jysperm/hexo-theme-simpleblock","preview":"https://jysperm.me","tags":["responsive","two_column","simple","light"]},{"name":"LightOne","description":"Remove the sidebar hexo default theme light.","link":"https://github.com/caisiduo/hexo-theme-lightone","preview":"https://caisiduo.xyz/","tags":["gary","simple","light","one_column","white"]},{"name":"yinwang","description":"Simplest View For Your Article Best.","link":"https://github.com/mickeyouyou/yinwang","preview":"http://www.fzb.me","tags":["responsive","simple","chinese"]},{"name":"zzoman2015","description":"Simplest Theme by ZZOMAN","link":"https://github.com/reumia/hexo-theme-zzoman2015","preview":"http://dev.zzoman.com","tags":["simple","responsive","one_column","korean"]},{"name":"Maupassant","description":"A simple Hexo template with great performance on different devices.","link":"https://github.com/tufu9441/maupassant-hexo","preview":"https://www.haomwei.com","tags":["simple","responsive","two_column","white","jade","scss"]},{"name":"ttstyle","description":"A three column theme for hexo.Responsive And SEO best.","link":"https://github.com/tangkunyin/hexo-theme-ttstyle","preview":"http://shuoit.net","tags":["responsive","simple","seo","chinese","three_column"]},{"name":"Jekyll","description":"A Hexo theme inspired by jekyllrb.com.","link":"https://github.com/pinggod/hexo-theme-jekyll","preview":"https://github.com/pinggod/hexo-theme-jekyll","tags":["中文","jekyll","dark"]},{"name":"Yelee","description":"Another simple and elegant Hexo theme by MOxFIVE","link":"https://github.com/MOxFIVE/hexo-theme-yelee","preview":"http://moxfive.xyz","tags":["responsive","two_column","toc","elegant","simple","background_image"]},{"name":"Apollo","description":"A Hexo theme inspired by http://cn.vuejs.org/.","link":"https://github.com/pinggod/hexo-theme-apollo","preview":"http://pinggod.com/","tags":["中文","apollo","light"]},{"name":"Freemind.386","description":"Freemind.386 is a retro-style theme of Hexo.","link":"https://github.com/blackshow/hexo-theme-freemind.386","preview":"http://blackshow.me/","tags":["bootstrap","pixel_style","responsive","two_column","tag_plugins","retro"]},{"name":"spfk","description":"A simple solemn theme for Hexo","link":"https://github.com/luuman/hexo-theme-spfk","preview":"http://luuman.github.io/","tags":["black","responsive","two_column","personality"]},{"name":"Bootstrap-Blog","description":"A simple Twitter Bootstrap blog theme for Hexo","link":"https://github.com/cgmartin/hexo-theme-bootstrap-blog","preview":"http://cgmartin.github.io/hexo-theme-bootstrap-blog/","tags":["bootstrap","simple","responsive","two_column"]},{"name":"Very-Simple","description":"A black/white theme for Hexo which tend to be simple and elegant","link":"https://github.com/lotabout/very-simple","preview":"http://lotabout.github.io/very-simple/","tags":["white & black","flexbox","simple","responsive"]},{"name":"Corporate","description":"A professional Hexo theme based on the Corporate Frontend framework.","link":"https://github.com/ptsteadman/hexo-theme-corporate","preview":"http://hexotest.computerlab.io","tags":["responsive","two_column","light","bootstrap","metronic"]},{"name":"Again","description":"Medium like, but more awesome","link":"https://github.com/DrakeLeung/hexo-theme-again","preview":"http://drakeleung.github.io/blog/","tags":["medium","material"]},{"name":"LandFarZ","description":"A blue-colored theme based on theme Light.","link":"https://github.com/wizardforcel/hexo-theme-landfarz","preview":"http://it-ebooks.flygon.net/","tags":["responsive","two_column","chinese","simple","dark"]},{"name":"jane","description":"A very simple theme for Hexo.","link":"https://github.com/Alex-fun/hexo-theme-jane","preview":"http://hejx.me","tags":["chinese","simple","concise"]},{"name":"Weightless","description":"A lightweight theme with minimal fuss","link":"https://jerry.im/essays/2016/02/hexo-theme-weightless/","preview":"https://jerry.im/essays/","tags":["responsive","light"]},{"name":"CyanStyle","description":"Inspired by Wordpress theme Twentytwelve.","link":"https://github.com/wizardforcel/hexo-theme-cyanstyle","preview":"http://www.flygon.net/","tags":["responsive","two_column","chinese","wordpress","light"]},{"name":"indigo","description":"Material Design theme for Hexo.","link":"https://github.com/yscoder/hexo-theme-indigo","preview":"http://www.imys.net/","tags":["responsive","chinese","material","less"]},{"name":"Simple","description":"Simple & Fresh, written with jade & less.","link":"https://github.com/chuguixin/Simple","preview":"http://jser.it","tags":["simple","fresh","responsive","jade","less","one_column"]},{"name":"Primer","description":"Github Style Theme for Hexo","link":"https://github.com/yumemor/hexo-theme-primer","preview":"http://yumemor.github.io/hexo-theme-primer","tags":["simple","github","responsive","two_column","one_column"]},{"name":"varaint","description":"The theme of a minimalist","link":"https://github.com/yumemor/hexo-theme-varaint","preview":"http://yumemor.github.io/hexo-theme-varaint","tags":["simple","github","responsive","one_column"]},{"name":"Chan","description":"A super simple and elegant theme for Hexo.","link":"https://github.com/denjones/hexo-theme-chan","preview":"http://denjones.github.io/hexo-theme-chan","tags":["simple","cc_4.0","photoswipe","responsive","two_column","中文"]},{"name":"Free2mind","description":"A new debonaire theme for Hexo.","link":"https://github.com/rudy-yuan/free2mind","preview":"http://www.rudy-yuan.net","tags":["simple","中文","bootstrap","debonaire","responsive"]},{"name":"Raytaylorism","description":"A Material Design theme of Hexo with powerful features.","link":"https://github.com/raytaylorlin/hexo-theme-raytaylorism","preview":"http://raytaylorlin.com/","tags":["material","responsive","simple","中文"]},{"name":"CleanBlog","description":"Fully featured, bootstrap blog for Hexo.","link":"https://github.com/klugjo/hexo-theme-clean-blog","preview":"http://www.codeblocq.com/assets/projects/hexo-theme-clean-blog/","tags":["simple","MIT","responsive","one_column","elegant","standard"]},{"name":"Hacker","description":"A simple theme inspired by Wordpress theme Hacker","link":"https://github.com/CodeDaraW/Hacker","preview":"http://blog.daraw.cn/","tags":["responsive","chinese","wordpress","simple"]},{"name":"Magnetic","description":"Full featured, visual blog for Hexo.","link":"https://github.com/klugjo/hexo-theme-magnetic","preview":"http://www.codeblocq.com/assets/projects/hexo-theme-magnetic/","tags":["portfolio","visual","responsive","three_column","elegant","standard"]},{"name":"Paperbox","description":"A responsive paper-like theme for hexo blog.","link":"https://github.com/sun11/hexo-theme-paperbox","preview":"http://sun11.me/","tags":["responsive","widget","two_column","one_column"]},{"name":"Phantom","description":"Full featured, visual blog for Hexo.","link":"https://github.com/klugjo/hexo-theme-phantom","preview":"http://www.codeblocq.com/assets/projects/hexo-theme-phantom/","tags":["portfolio","visual","responsive","three_column","elegant","standard"]},{"name":"MyFairLady","description":"Girls pink heart hexo theme","link":"https://github.com/yzzting/hexo-theme-MyFairLady","preview":"http://www.yzz1995.cn/","tags":["responsive","chinese","Grils pink","simple","less","ejs"]},{"name":"Even","description":"A simple theme for Hexo","link":"https://github.com/ahonn/hexo-theme-even","preview":"http://www.ahonn.me/","tags":["responsive","simple","light"]},{"name":"Pln","description":"A plain theme for Hexo.","link":"https://github.com/gaoryrt/hexo-theme-pln","preview":"http://gaoryrt.com/","tags":["responsive","elegant","white","simple","chinese","one_column"]},{"name":"Huxblog","description":"A lean and elegant Theme with optimized SEO (Ported)","link":"https://github.com/Kaijun/hexo-theme-huxblog","preview":"http://kaijun.rocks/hexo-theme-huxblog/","tags":["lean","responsive","featured_tags","elegant","standard","SEO"]},{"name":"gstyle","description":"a hexo theme with google style","link":"https://github.com/wayou/hexo-theme-gstyle","preview":"http://wayou.github.io/hexo-theme-gstyle/public/","tags":["google","responsive","widget","two_column","one_column","toc","material"]},{"name":"Random","description":"A hexo theme with random fullscreen background image.","link":"https://github.com/stiekel/hexo-theme-random","preview":"http://hexo-theme-random.herokuapp.com/","tags":["responsive","one_column","background_image","random","iconfont","modal"]},{"name":"Anisina","description":"A support qiniu image cdn , simple responsive theme for hexo","link":"https://github.com/haojen/hexo-theme-Anisina","preview":"http://haojen.github.io/","tags":["qiniu_cdn","wechat_title_img_custom","responsive","toc","SEO","fixed_nav","中文","anisina"]},{"name":"Typescript","description":"A mininal theme for Hexo.","link":"https://github.com/artchen/hexo-theme-typescript","preview":"https://otakism.com","tags":["responsive","one_column","search_support","中文","typescript"]},{"name":"Nova","description":"A theme using swig template aimed to build github project site conveniently.","link":"https://github.com/Jamling/hexo-theme-nova","preview":"http://ieclipse.cn","tags":["bootstrap","responsive","widget","two_column","three_column","project layout","multi-languages"]},{"name":"Noise","description":"Noise description that no one should read.","link":"https://github.com/lotabout/hexo-theme-noise","preview":"http://lotabout.me/hexo-theme-noise/","tags":["flexbox","responsive","white"]},{"name":"yujuan","description":"A simple solemn theme for Hexo","link":"https://github.com/smile-leaf-language/hexo-theme-yujuan","preview":"http://smile-leaf-language.github.io/","tags":["black","responsive","two_column","personality"]},{"name":"hollow","description":"A pure and elegant theme for Hexo.","link":"https://github.com/zchen9/hexo-theme-hollow","preview":"http://www.chen9.info/fragment/","tags":["responsive","chinese","elegant","one_column","white"]},{"name":"concise","description":"A beautiful and simple theme for hexo","link":"https://github.com/HmyBmny/hexo-theme-concise","preview":"https://hmybmny.github.io/hexo-theme-concise/","tags":["material","responsive","elegant","two_column","white"]},{"name":"wiki-i18n","description":"A hexo theme for i18n wiki site","link":"https://github.com/xcatliu/hexo-theme-wiki-i18n","preview":"http://js-index.com/","tags":["wiki","i18n"]},{"name":"beautiful-hexo","description":"A simple responsive beautiful theme.","link":"https://github.com/twoyao/beautiful-hexo","preview":"http://twoyao.cn/beautiful-hexo/","tags":["responsive","beautiful","simple","white"]},{"name":"AlphaDust","description":"A futuristic responsive theme.","link":"https://github.com/klugjo/hexo-theme-alpha-dust","preview":"http://www.codeblocq.com/assets/projects/hexo-theme-alpha-dust/","tags":["responsive","beautiful","simple","blue","futuristic"]},{"name":"Pixel","description":"A pixel level theme","link":"https://github.com/callmelanmao/hexo-theme-pixel","preview":"https://ideras.me","tags":["pixel","simple","widget","two_column"]},{"name":"Typing","description":"A pure and fresh Hexo theme.","link":"https://github.com/geekplux/hexo-theme-typing","preview":"http://geekplux.com","tags":["responsive","pure","simple","fresh","white"]},{"name":"Daily","description":"Minimalism, simplicity and refined details","link":"https://github.com/GallenHu/hexo-theme-Daily","preview":"http://blog.hinpc.com","tags":["simple","responsive","minimalism","daily"]},{"name":"MeiliDu","description":"A beautiful read.","link":"https://github.com/HoverBaum/meilidu-hexo","preview":"https://meilidu.github.io/","tags":["typography","responsive","writing","big_header","simple"]},{"name":"Aero-Dual","description":"Minimal and responsive. Easy/automatic switch of dark and light theme style by simple configuation. Theme color change is also easy.","link":"https://github.com/levblanc/hexo-theme-aero-dual","preview":"https://levblanc.github.io/","tags":["minimalism","responsive","easy_theme_style_switch","easy_theme_color_switch","中文"]},{"name":"Oishi","description":"A pure, simple, white, and responsive theme, it's integrated some Chinese local third services, such as Baidu statistics, duoshuo, etc.","link":"https://github.com/henryhuang/oishi","preview":"https://henryhuang.github.io/oishi/","tags":["simple","pure","responsive","one_column","white","multi-languages","中文","Chinese","Portuguese"]},{"name":"Overdose","description":"⚠ Caution: you could be overdosed with this theme.","link":"https://github.com/HyunSeob/hexo-theme-overdose","preview":"http://hyunseob.github.io/","tags":["simple","minimalism","beautiful","responsive","one_column","Korean","webfont","SEO","jade","sass"]},{"name":"Aloha","description":"a pure, simple, and responsive theme, it use Semantic-UI, and integrated Algolia search engine.","link":"https://github.com/henryhuang/hexo-theme-aloha","preview":"http://huangyijie.com","tags":["Semantic-UI","pure","responsive","one_column","multi-languages","中文","Algolia"]},{"name":"Nuna","description":"A pure, minimalism and elegant theme.","link":"https://github.com/xwartz/hexo-theme-nuna","preview":"https://xwartz.github.com/blog","tags":["minimalism","elegant","pure","simple","responsive","nuna"]},{"name":"Line","description":"A responsive, neat and simple theme for Hexo.","link":"https://github.com/zhaobao/hexo-theme-line","preview":"http://blog.zhishoumowen.com","tags":["responsive","neat","line","light"]},{"name":"Smackdown","description":"A simple and cool theme for Hexo.","link":"https://github.com/winnerweb/hexo-theme-smackdown","preview":"http://winnerweb.github.io/blog","tags":["responsive","mobile","seo","simple","coll"]},{"name":"strata","description":"A responsive full featured blog or portfolio theme.","link":"https://github.com/livingos/hexo-theme-strata","preview":"https://livingos.github.io/hexo-theme-strata/","tags":["responsive","gravatar","gallery","blog"]},{"name":"Hiker","description":"An attractive, exquisite theme for Hexo.","link":"https://github.com/iTimeTraveler/hexo-theme-hiker","preview":"https://itimetraveler.github.io/hexo-theme-hiker/","tags":["responsive","beautiful","blog","two_column"]},{"name":"casual","description":"A simple and cool hexo theme with Semantic UI in UI design","link":"https://github.com/littlewin-wang/hexo-theme-casual","preview":"http://littlewin.info/","tags":["responsive","comfortable","blog","fresh"]},{"name":"legend","description":"A hexo theme with background video and audio.","link":"https://github.com/iHongRen/legend","preview":"https://ihongren.github.io/","tags":["bg_video","bg_audio","simple"]},{"name":"Cactus Dark","description":"A responsive, dark and simple theme for a personal webpage.","link":"https://github.com/probberechts/cactus-dark","preview":"https://probberechts.github.io/cactus-dark/","tags":["responsive","dark","blog","simple"]},{"name":"Adoubi","description":"A simple theme without tags, categories, comments and other chaos.","link":"https://github.com/shinux/hexo-theme-adoubi","preview":"http://sinux.me","tags":["responsive","adoubi","simple","focus"]},{"name":"BlueLake","description":"A responsive , simple theme for Hexo.","link":"https://github.com/chaooo/hexo-theme-BlueLake","preview":"http://chaoo.oschina.io/","tags":["responsive","multi-languages","two_column","blog","simple","mobile","light","jade","stylus"]},{"name":"Hiero","description":"A free magazine and blog style Hexo theme.","link":"https://github.com/iTimeTraveler/hexo-theme-hiero","preview":"https://itimetraveler.github.io/hexo-theme-hiero/","tags":["responsive","black","magazine","blog"]},{"name":"Material","description":"An elegant & Material Design Theme for Hexo.","link":"https://github.com/viosey/hexo-theme-material","preview":"https://blog.viosey.com","tags":["responsive","simple","material_design","blog","multi_styles","minimalism","i18n","elegant","material","one_column"]},{"name":"mls","description":"A theme with a fullscreen background image and transparent elements.","link":"https://github.com/lazzzis/hexo-theme-mls","preview":"http://lazzzis.github.io/","tags":["background_image","blog","one_column","responsive","transparent"]},{"name":"Laughing","description":"A lightweight and focus on the theme of the reading experience","link":"https://github.com/BoizZ/hexo-theme-laughing","preview":"http://lalala.lol","tags":["responsive","simple","blog","one_column","clean","lightweight","efficient_reading","jade"]},{"name":"Cafe","description":"Pursuit of simplicity, simple operation, reading comfort.","link":"https://github.com/giscafer/hexo-theme-cafe","preview":"http://cafe.giscafer.com/","tags":["simple","responsive","widget","two_column","comfortable","中文","chinese","clean"]},{"name":"Hipaper","description":"A fashional newspaper theme for Hexo.","link":"https://github.com/iTimeTraveler/hexo-theme-hipaper","preview":"https://itimetraveler.github.io/hexo-theme-hipaper/","tags":["responsive","black","magazine","blog"]},{"name":"hexo-fabric","description":"A simple theme for hexo, support archive and tags cloud.","link":"https://github.com/wd/hexo-fabric","preview":"https://wdicc.com","tags":["simple","blog","one_column","clean","tagscloud"]},{"name":"pteris","description":"A materialize and clean theme in nunjucks","link":"https://github.com/jonashao/hexo-theme-pteris","preview":"https://junnanhao.com","tags":["materialize","simple","nunjucks","clean","responsive","one_column"]},{"name":"X'new","description":"X'new theme for Hexo. Referred from https://github.com/sjaakvandenberg/flexy.","link":"https://github.com/XadillaX/hexo-xnew","preview":"https://xcoder.in/","tags":["responsive","flexbox","two_column","css3","translate3d"]},{"name":"Anatole","description":"A white and simple hexo theme, originated from a Farbox theme.","link":"https://github.com/Ben02/hexo-theme-Anatole","preview":"http://anatole.munen.cc/","tags":["responsive","two_column","light","simple","comfortable","Chinese","clean"]},{"name":"QnA","description":"A FAQ theme for Hexo.","link":"https://github.com/cheng-kang/hexo-theme-qna","preview":"http://chengkang.me/hexo-theme-qna","tags":["QnA","FAQ","Hexo","Q&A","In-site Search"]}]}],"Page":[{"layout":"index","description":"Hexo is a fast, simple & powerful blog framework powered by Node.js.","subtitle":"A fast, simple & powerful blog framework","comments":0,"_content":"ul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Blazing Fast\n      p.intro-feature-desc Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Markdown Support\n      p.intro-feature-desc All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title One-Command Deployment\n      p.intro-feature-desc You only need one command to deploy your site to GitHub Pages, Heroku or other sites.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Various Plugins\n      p.intro-feature-desc Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.","source":"index.jade","raw":"layout: index\ndescription: Hexo is a fast, simple & powerful blog framework powered by Node.js.\nsubtitle: A fast, simple & powerful blog framework\ncomments: false\n---\nul#intro-feature-list\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-bolt\n      h3.intro-feature-title Blazing Fast\n      p.intro-feature-desc Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-pencil\n      h3.intro-feature-title Markdown Support\n      p.intro-feature-desc All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cloud-upload\n      h3.intro-feature-title One-Command Deployment\n      p.intro-feature-desc You only need one command to deploy your site to GitHub Pages, Heroku or other sites.\n  li.intro-feature-wrap\n    .intro-feature\n      .intro-feature-icon\n        i.fa.fa-cog\n      h3.intro-feature-title Various Plugins\n      p.intro-feature-desc Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"index.html","title":"","_id":"ciy3szh2g0000z7141eh76g69","content":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Blazing Fast</h3><p class=\"intro-feature-desc\">Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Markdown Support</h3><p class=\"intro-feature-desc\">All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">One-Command Deployment</h3><p class=\"intro-feature-desc\">You only need one command to deploy your site to GitHub Pages, Heroku or other sites.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Various Plugins</h3><p class=\"intro-feature-desc\">Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.</p></div></li></ul>","excerpt":"","more":"<ul id=\"intro-feature-list\"><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-bolt\"></i></div><h3 class=\"intro-feature-title\">Blazing Fast</h3><p class=\"intro-feature-desc\">Node.js brings you incredible generating speed. Hundreds of files take only seconds to build.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-pencil\"></i></div><h3 class=\"intro-feature-title\">Markdown Support</h3><p class=\"intro-feature-desc\">All features of GitHub Flavored Markdown are supported. You can even use most Octopress plugins in Hexo.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cloud-upload\"></i></div><h3 class=\"intro-feature-title\">One-Command Deployment</h3><p class=\"intro-feature-desc\">You only need one command to deploy your site to GitHub Pages, Heroku or other sites.</p></div></li><li class=\"intro-feature-wrap\"><div class=\"intro-feature\"><div class=\"intro-feature-icon\"><i class=\"fa fa-cog\"></i></div><h3 class=\"intro-feature-title\">Various Plugins</h3><p class=\"intro-feature-desc\">Hexo has a powerful plugin system. You can install more plugins for Jade, CoffeeScript plugins.</p></div></li></ul>"},{"title":"Box","_content":"Box is a container used for processing files in a specified folder. Hexo uses two different boxes: `hexo.source` and `hexo.theme`. The former is used to process the `source` folder and the latter to process the `theme` folder.\n\n## Load Files\n\nBox provides two methods for loading files: `process` and `watch`. `process` loads all files in the folder. `watch` does the same, but also starts watching for file changes.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n## Path Matching\n\nBox provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\nSee [util.Pattern] for more info.\n\n## Processors\n\nA processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the `addProcessor` method.\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nBox passes the content of matched files to processors. This information can then be read straight from the `file` argument in the callback:\n\nAttribute | Description\n--- | ---\n`source` | Full path of the file\n`path` | Relative path to the box of the file\n`type` | File type. The value can be `create`, `update`, `skip`, `delete`.\n`params` | The information from path matching.\n\nBox also provides some methods so you don't have to do file IO by yourself.\n\nMethod | Description\n--- | ---\n`read` | Read a file\n`readSync` | Read a file synchronously\n`stat` | Read the status of a file\n`statSync` | Read the status of a file synchronously\n`render` | Render a file\n`renderSync` | Render a file synchronously\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n","source":"api/box.md","raw":"title: Box\n---\nBox is a container used for processing files in a specified folder. Hexo uses two different boxes: `hexo.source` and `hexo.theme`. The former is used to process the `source` folder and the latter to process the `theme` folder.\n\n## Load Files\n\nBox provides two methods for loading files: `process` and `watch`. `process` loads all files in the folder. `watch` does the same, but also starts watching for file changes.\n\n``` js\nbox.process().then(function(){\n  // ...\n});\n\nbox.watch().then(function(){\n  // You can call box.unwatch() later to stop watching.\n});\n```\n\n## Path Matching\n\nBox provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:\n\n``` plain\nposts/:id => posts/89\nposts/*path => posts/2015/title\n```\n\nSee [util.Pattern] for more info.\n\n## Processors\n\nA processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the `addProcessor` method.\n\n``` js\nbox.addProcessor('posts/:id', function(file){\n  //\n});\n```\n\nBox passes the content of matched files to processors. This information can then be read straight from the `file` argument in the callback:\n\nAttribute | Description\n--- | ---\n`source` | Full path of the file\n`path` | Relative path to the box of the file\n`type` | File type. The value can be `create`, `update`, `skip`, `delete`.\n`params` | The information from path matching.\n\nBox also provides some methods so you don't have to do file IO by yourself.\n\nMethod | Description\n--- | ---\n`read` | Read a file\n`readSync` | Read a file synchronously\n`stat` | Read the status of a file\n`statSync` | Read the status of a file synchronously\n`render` | Render a file\n`renderSync` | Render a file synchronously\n\n[util.Pattern]: https://github.com/hexojs/hexo-util#patternrule\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/box.html","comments":1,"layout":"page","_id":"ciy3szh570002z714oode2ico","content":"<p>Box is a container used for processing files in a specified folder. Hexo uses two different boxes: <code>hexo.source</code> and <code>hexo.theme</code>. The former is used to process the <code>source</code> folder and the latter to process the <code>theme</code> folder.</p>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Box provides two methods for loading files: <code>process</code> and <code>watch</code>. <code>process</code> loads all files in the folder. <code>watch</code> does the same, but also starts watching for file changes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Path-Matching\"><a href=\"#Path-Matching\" class=\"headerlink\" title=\"Path Matching\"></a>Path Matching</h2><p>Box provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">posts/:id =&gt; posts/89</div><div class=\"line\">posts/*path =&gt; posts/2015/title</div></pre></td></tr></table></figure>\n<p>See <a href=\"https://github.com/hexojs/hexo-util#patternrule\" target=\"_blank\" rel=\"external\">util.Pattern</a> for more info.</p>\n<h2 id=\"Processors\"><a href=\"#Processors\" class=\"headerlink\" title=\"Processors\"></a>Processors</h2><p>A processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the <code>addProcessor</code> method.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Box passes the content of matched files to processors. This information can then be read straight from the <code>file</code> argument in the callback:</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of the file</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Relative path to the box of the file</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>File type. The value can be <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>The information from path matching.</td>\n</tr>\n</tbody>\n</table>\n<p>Box also provides some methods so you don’t have to do file IO by yourself.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Read a file</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Read a file synchronously</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Read the status of a file</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Read the status of a file synchronously</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Render a file</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Render a file synchronously</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<p>Box is a container used for processing files in a specified folder. Hexo uses two different boxes: <code>hexo.source</code> and <code>hexo.theme</code>. The former is used to process the <code>source</code> folder and the latter to process the <code>theme</code> folder.</p>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Box provides two methods for loading files: <code>process</code> and <code>watch</code>. <code>process</code> loads all files in the folder. <code>watch</code> does the same, but also starts watching for file changes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">box.process().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">box.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// You can call box.unwatch() later to stop watching.</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Path-Matching\"><a href=\"#Path-Matching\" class=\"headerlink\" title=\"Path Matching\"></a>Path Matching</h2><p>Box provides many ways for path matching. You can use a regular expression, a function or an Express-style pattern string. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">posts/:id =&gt; posts/89</div><div class=\"line\">posts/*path =&gt; posts/2015/title</div></pre></td></tr></table></figure>\n<p>See <a href=\"https://github.com/hexojs/hexo-util#patternrule\">util.Pattern</a> for more info.</p>\n<h2 id=\"Processors\"><a href=\"#Processors\" class=\"headerlink\" title=\"Processors\"></a>Processors</h2><p>A processor is an essential element of Box and is used to process files. You can use path matching as described above to restrict what exactly the processor should process. Register a new processor with the <code>addProcessor</code> method.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">box.addProcessor(<span class=\"string\">'posts/:id'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Box passes the content of matched files to processors. This information can then be read straight from the <code>file</code> argument in the callback:</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of the file</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Relative path to the box of the file</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>File type. The value can be <code>create</code>, <code>update</code>, <code>skip</code>, <code>delete</code>.</td>\n</tr>\n<tr>\n<td><code>params</code></td>\n<td>The information from path matching.</td>\n</tr>\n</tbody>\n</table>\n<p>Box also provides some methods so you don’t have to do file IO by yourself.</p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>read</code></td>\n<td>Read a file</td>\n</tr>\n<tr>\n<td><code>readSync</code></td>\n<td>Read a file synchronously</td>\n</tr>\n<tr>\n<td><code>stat</code></td>\n<td>Read the status of a file</td>\n</tr>\n<tr>\n<td><code>statSync</code></td>\n<td>Read the status of a file synchronously</td>\n</tr>\n<tr>\n<td><code>render</code></td>\n<td>Render a file</td>\n</tr>\n<tr>\n<td><code>renderSync</code></td>\n<td>Render a file synchronously</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Console","_content":"The console forms the bridge between Hexo and its users. It registers and describes the available console commands.\n\n## Synopsis\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nArgument | Description\n--- | ---\n`name` | Name\n`desc` | Description\n`options`| Options\n\nAn argument `args` will be passed into the function. This is the argument that users type into the terminal. It's parsed by [Minimist].\n\n## Options\n\n### usage\n\nThe usage of a console command. For example:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nThe description of each argument of a console command. For example:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nThe description of each option of a console command. For example:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nMore detailed information about a console command.\n\n## Example\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n","source":"api/console.md","raw":"title: Console\n---\nThe console forms the bridge between Hexo and its users. It registers and describes the available console commands.\n\n## Synopsis\n\n``` js\nhexo.extend.console.register(name, desc, options, function(args){\n  // ...\n});\n```\n\nArgument | Description\n--- | ---\n`name` | Name\n`desc` | Description\n`options`| Options\n\nAn argument `args` will be passed into the function. This is the argument that users type into the terminal. It's parsed by [Minimist].\n\n## Options\n\n### usage\n\nThe usage of a console command. For example:\n\n``` js\n{usage: '[layout] <title>'}\n// hexo new [layout] <title>\n```\n\n### arguments\n\nThe description of each argument of a console command. For example:\n\n``` js\n{\n  arguments: [\n    {name: 'layout', desc: 'Post layout'},\n    {name: 'title', desc: 'Post title'}\n  ]\n}\n```\n\n### options\n\nThe description of each option of a console command. For example:\n\n``` js\n{\n  options: [\n    {name: '-r, --replace', desc: 'Replace existing files'}\n  ]\n}\n```\n\n### desc\n\nMore detailed information about a console command.\n\n## Example\n\n``` js\nhexo.extend.console.register('config', 'Display configuration', function(args){\n  console.log(hexo.config);\n});\n```\n\n[Minimist]: https://github.com/substack/minimist\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/console.html","comments":1,"layout":"page","_id":"ciy3szh5c0004z71426catn14","content":"<p>The console forms the bridge between Hexo and its users. It registers and describes the available console commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Name</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Description</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<p>An argument <code>args</code> will be passed into the function. This is the argument that users type into the terminal. It’s parsed by <a href=\"https://github.com/substack/minimist\" target=\"_blank\" rel=\"external\">Minimist</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"usage\"><a href=\"#usage\" class=\"headerlink\" title=\"usage\"></a>usage</h3><p>The usage of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</div><div class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>The description of each argument of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">arguments</span>: [</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>The description of each option of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">options</span>: [</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>More detailed information about a console command.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>The console forms the bridge between Hexo and its users. It registers and describes the available console commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.console.register(name, desc, options, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Name</td>\n</tr>\n<tr>\n<td><code>desc</code></td>\n<td>Description</td>\n</tr>\n<tr>\n<td><code>options</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<p>An argument <code>args</code> will be passed into the function. This is the argument that users type into the terminal. It’s parsed by <a href=\"https://github.com/substack/minimist\">Minimist</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"usage\"><a href=\"#usage\" class=\"headerlink\" title=\"usage\"></a>usage</h3><p>The usage of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;<span class=\"attr\">usage</span>: <span class=\"string\">'[layout] &lt;title&gt;'</span>&#125;</div><div class=\"line\"><span class=\"comment\">// hexo new [layout] &lt;title&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"arguments\"><a href=\"#arguments\" class=\"headerlink\" title=\"arguments\"></a>arguments</h3><p>The description of each argument of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">arguments</span>: [</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'layout'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post layout'</span>&#125;,</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'title'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Post title'</span>&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"options\"><a href=\"#options\" class=\"headerlink\" title=\"options\"></a>options</h3><p>The description of each option of a console command. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">options</span>: [</div><div class=\"line\">    &#123;<span class=\"attr\">name</span>: <span class=\"string\">'-r, --replace'</span>, <span class=\"attr\">desc</span>: <span class=\"string\">'Replace existing files'</span>&#125;</div><div class=\"line\">  ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"desc\"><a href=\"#desc\" class=\"headerlink\" title=\"desc\"></a>desc</h3><p>More detailed information about a console command.</p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.console.register(<span class=\"string\">'config'</span>, <span class=\"string\">'Display configuration'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(hexo.config);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"Deployer","_content":"A deployer helps users quickly deploy their site to a remote server without complicated commands.\n\n## Synopsis\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. It contains the `deploy` value set in `_config.yml`, as well as the exact input users typed into their terminal.\n","source":"api/deployer.md","raw":"title: Deployer\n---\nA deployer helps users quickly deploy their site to a remote server without complicated commands.\n\n## Synopsis\n\n``` js\nhexo.extend.deployer.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. It contains the `deploy` value set in `_config.yml`, as well as the exact input users typed into their terminal.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/deployer.html","comments":1,"layout":"page","_id":"ciy3szh5h0006z714ywrldo4s","content":"<p>A deployer helps users quickly deploy their site to a remote server without complicated commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. It contains the <code>deploy</code> value set in <code>_config.yml</code>, as well as the exact input users typed into their terminal.</p>\n","excerpt":"","more":"<p>A deployer helps users quickly deploy their site to a remote server without complicated commands.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.deployer.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. It contains the <code>deploy</code> value set in <code>_config.yml</code>, as well as the exact input users typed into their terminal.</p>\n"},{"title":"Events","_content":"Hexo inherits from [EventEmitter]. Use the `on` method to listen for events emitted by Hexo, and use the `emit` method to emit events. For more information, refer to the Node.js API documentation.\n\n### deployBefore\n\nEmitted before deployment begins.\n\n### deployAfter\n\nEmitted after deployment finishes.\n\n### exit\n\nEmitted before Hexo exits.\n\n### generateBefore\n\nEmitted before generation begins.\n\n### generateAfter\n\nEmitted after generation finishes.\n\n### new\n\nEmitted after a new post has been created. This event returns the post data:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nData | Description\n--- | ---\n`post.path` | Full path of the post file\n`post.content` | Content of the post file\n\n### processBefore\n\nEmitted before processing begins. This event returns a path representing the root directory of the box.\n\n### processAfter\n\nEmitted after processing finishes. This event returns a path representing the root directory of the box.\n\n### ready\n\nEmitted after initialization finishes.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n","source":"api/events.md","raw":"title: Events\n---\nHexo inherits from [EventEmitter]. Use the `on` method to listen for events emitted by Hexo, and use the `emit` method to emit events. For more information, refer to the Node.js API documentation.\n\n### deployBefore\n\nEmitted before deployment begins.\n\n### deployAfter\n\nEmitted after deployment finishes.\n\n### exit\n\nEmitted before Hexo exits.\n\n### generateBefore\n\nEmitted before generation begins.\n\n### generateAfter\n\nEmitted after generation finishes.\n\n### new\n\nEmitted after a new post has been created. This event returns the post data:\n\n``` js\nhexo.on('new', function(post){\n  //\n});\n```\n\nData | Description\n--- | ---\n`post.path` | Full path of the post file\n`post.content` | Content of the post file\n\n### processBefore\n\nEmitted before processing begins. This event returns a path representing the root directory of the box.\n\n### processAfter\n\nEmitted after processing finishes. This event returns a path representing the root directory of the box.\n\n### ready\n\nEmitted after initialization finishes.\n\n[EventEmitter]: http://nodejs.org/api/events.html\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/events.html","comments":1,"layout":"page","_id":"ciy3szh5r0008z714r0wazp97","content":"<p>Hexo inherits from <a href=\"http://nodejs.org/api/events.html\" target=\"_blank\" rel=\"external\">EventEmitter</a>. Use the <code>on</code> method to listen for events emitted by Hexo, and use the <code>emit</code> method to emit events. For more information, refer to the Node.js API documentation.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Emitted before deployment begins.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Emitted after deployment finishes.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Emitted before Hexo exits.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>Emitted before generation begins.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>Emitted after generation finishes.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>Emitted after a new post has been created. This event returns the post data:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Full path of the post file</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Content of the post file</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>Emitted before processing begins. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>Emitted after processing finishes. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>Emitted after initialization finishes.</p>\n","excerpt":"","more":"<p>Hexo inherits from <a href=\"http://nodejs.org/api/events.html\">EventEmitter</a>. Use the <code>on</code> method to listen for events emitted by Hexo, and use the <code>emit</code> method to emit events. For more information, refer to the Node.js API documentation.</p>\n<h3 id=\"deployBefore\"><a href=\"#deployBefore\" class=\"headerlink\" title=\"deployBefore\"></a>deployBefore</h3><p>Emitted before deployment begins.</p>\n<h3 id=\"deployAfter\"><a href=\"#deployAfter\" class=\"headerlink\" title=\"deployAfter\"></a>deployAfter</h3><p>Emitted after deployment finishes.</p>\n<h3 id=\"exit\"><a href=\"#exit\" class=\"headerlink\" title=\"exit\"></a>exit</h3><p>Emitted before Hexo exits.</p>\n<h3 id=\"generateBefore\"><a href=\"#generateBefore\" class=\"headerlink\" title=\"generateBefore\"></a>generateBefore</h3><p>Emitted before generation begins.</p>\n<h3 id=\"generateAfter\"><a href=\"#generateAfter\" class=\"headerlink\" title=\"generateAfter\"></a>generateAfter</h3><p>Emitted after generation finishes.</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><p>Emitted after a new post has been created. This event returns the post data:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.on(<span class=\"string\">'new'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">//</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post.path</code></td>\n<td>Full path of the post file</td>\n</tr>\n<tr>\n<td><code>post.content</code></td>\n<td>Content of the post file</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"processBefore\"><a href=\"#processBefore\" class=\"headerlink\" title=\"processBefore\"></a>processBefore</h3><p>Emitted before processing begins. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"processAfter\"><a href=\"#processAfter\" class=\"headerlink\" title=\"processAfter\"></a>processAfter</h3><p>Emitted after processing finishes. This event returns a path representing the root directory of the box.</p>\n<h3 id=\"ready\"><a href=\"#ready\" class=\"headerlink\" title=\"ready\"></a>ready</h3><p>Emitted after initialization finishes.</p>\n"},{"title":"Filter","_content":"A filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from [WordPress](http://codex.wordpress.org/Plugin_API#Filters).\n\n## Synopsis\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nYou can define the `priority`. Lower `priority` means that it will be executed first. The default `priority` is 10.\n\n## Execute Filters\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nOption | Description\n--- | ---\n`context` | Context\n`args` | Arguments. This must be an array.\n\nThe first argument passed into each filter is `data`. The `data` passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use `args` to specify other arguments in filters. For example:\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nYou can also use the following methods to execute filters:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Unregister Filters\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Filter List\n\nHere is a list of filters used by Hexo.\n\n### before_post_render\n\nExecuted before a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to transform the title to lower case:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nExecuted after a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to replace `@username` with a link to a Twitter profile:\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nExecuted before Hexo is about to exit -- this will run right after `hexo.exit` is called.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nExecuted before generation begins.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nExecuted after generation finishes.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\nModify [local variables](../docs/variables.html) in templates.\n\nFor example, to add the current time to the local variables of templates:\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nExecuted after Hexo is initialized -- this will run right after `hexo.init` completes.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nExecuted when creating a post to determine the path of new posts.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nUsed to determine the permalink of posts.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\nExecuted after rendering finishes. You can see [rendering](rendering.html#after_render_Filters) for more info.\n\n### server_middleware\n\nAdd middleware to the server. `app` is a [Connect] instance.\n\nFor example, to add `X-Powered-By: Hexo` to the response header:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n","source":"api/filter.md","raw":"title: Filter\n---\nA filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from [WordPress](http://codex.wordpress.org/Plugin_API#Filters).\n\n## Synopsis\n\n``` js\nhexo.extend.filter.register(type, function(){\n  // ...\n}, priority);\n```\n\nYou can define the `priority`. Lower `priority` means that it will be executed first. The default `priority` is 10.\n\n## Execute Filters\n\n``` js\nhexo.extend.filter.exec(type, data, options);\nhexo.extend.filter.execSync(type, data, options);\n```\n\nOption | Description\n--- | ---\n`context` | Context\n`args` | Arguments. This must be an array.\n\nThe first argument passed into each filter is `data`. The `data` passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use `args` to specify other arguments in filters. For example:\n\n``` js\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'some data'\n  // arg1 === 'foo'\n  // arg2 === 'bar'\n\n  return 'something';\n});\n\nhexo.extend.filter.register('test', function(data, arg1, arg2){\n  // data === 'something'\n});\n\nhexo.extend.filter.exec('test', 'some data', {\n  args: ['foo', 'bar']\n});\n```\n\nYou can also use the following methods to execute filters:\n\n``` js\nhexo.execFilter(type, data, options);\nhexo.execFilterSync(type, data, options);\n```\n\n## Unregister Filters\n\n``` js\nhexo.extend.filter.unregister(type, filter);\n```\n\n## Filter List\n\nHere is a list of filters used by Hexo.\n\n### before_post_render\n\nExecuted before a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to transform the title to lower case:\n\n``` js\nhexo.extend.filter.register('before_post_render', function(data){\n  data.title = data.title.toLowerCase();\n  return data;\n});\n```\n\n### after_post_render\n\nExecuted after a post is rendered. Refer to [post rendering](posts.html#Render) to learn the execution steps.\n\nFor example, to replace `@username` with a link to a Twitter profile:\n\n``` js\nhexo.extend.filter.register('after_post_render', function(data){\n  data.content = data.content.replace(/@(\\d+)/, '<a href=\"http://twitter.com/$1\">#$1</a>');\n  return data;\n});\n```\n\n### before_exit\n\nExecuted before Hexo is about to exit -- this will run right after `hexo.exit` is called.\n\n``` js\nhexo.extend.filter.register('before_exit', function(){\n  // ...\n});\n```\n\n### before_generate\n\nExecuted before generation begins.\n\n``` js\nhexo.extend.filter.register('before_generate', function(){\n  // ...\n});\n```\n\n### after_generate\n\nExecuted after generation finishes.\n\n``` js\nhexo.extend.filter.register('after_generate', function(){\n  // ...\n});\n```\n\n### template_locals\n\nModify [local variables](../docs/variables.html) in templates.\n\nFor example, to add the current time to the local variables of templates:\n\n``` js\nhexo.extend.filter.register('template_locals', function(locals){\n  locals.now = Date.now();\n  return locals;\n});\n```\n\n### after_init\n\nExecuted after Hexo is initialized -- this will run right after `hexo.init` completes.\n\n``` js\nhexo.extend.filter.register('after_init', function(){\n  // ...\n});\n```\n\n### new_post_path\n\nExecuted when creating a post to determine the path of new posts.\n\n``` js\nhexo.extend.filter.register('new_post_path', function(data, replace){\n  // ...\n});\n```\n\n### post_permalink\n\nUsed to determine the permalink of posts.\n\n``` js\nhexo.extend.filter.register('post_permalink', function(data){\n  // ...\n});\n```\n\n### after_render\n\nExecuted after rendering finishes. You can see [rendering](rendering.html#after_render_Filters) for more info.\n\n### server_middleware\n\nAdd middleware to the server. `app` is a [Connect] instance.\n\nFor example, to add `X-Powered-By: Hexo` to the response header:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\n[Connect]: https://github.com/senchalabs/connect\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/filter.html","comments":1,"layout":"page","_id":"ciy3szh6h000az714psokz3b1","content":"<p>A filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from <a href=\"http://codex.wordpress.org/Plugin_API#Filters\" target=\"_blank\" rel=\"external\">WordPress</a>.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, priority);</div></pre></td></tr></table></figure>\n<p>You can define the <code>priority</code>. Lower <code>priority</code> means that it will be executed first. The default <code>priority</code> is 10.</p>\n<h2 id=\"Execute-Filters\"><a href=\"#Execute-Filters\" class=\"headerlink\" title=\"Execute Filters\"></a>Execute Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.exec(type, data, options);</div><div class=\"line\">hexo.extend.filter.execSync(type, data, options);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Arguments. This must be an array.</td>\n</tr>\n</tbody>\n</table>\n<p>The first argument passed into each filter is <code>data</code>. The <code>data</code> passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use <code>args</code> to specify other arguments in filters. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// data === 'some data'</span></div><div class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></div><div class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// data === 'something'</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</div><div class=\"line\">  <span class=\"attr\">args</span>: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can also use the following methods to execute filters:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.execFilter(type, data, options);</div><div class=\"line\">hexo.execFilterSync(type, data, options);</div></pre></td></tr></table></figure>\n<h2 id=\"Unregister-Filters\"><a href=\"#Unregister-Filters\" class=\"headerlink\" title=\"Unregister Filters\"></a>Unregister Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.unregister(type, filter);</div></pre></td></tr></table></figure>\n<h2 id=\"Filter-List\"><a href=\"#Filter-List\" class=\"headerlink\" title=\"Filter List\"></a>Filter List</h2><p>Here is a list of filters used by Hexo.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Executed before a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to transform the title to lower case:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  data.title = data.title.toLowerCase();</div><div class=\"line\">  <span class=\"keyword\">return</span> data;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Executed after a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to replace <code>@username</code> with a link to a Twitter profile:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> data;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Executed before Hexo is about to exit – this will run right after <code>hexo.exit</code> is called.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>Executed before generation begins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>Executed after generation finishes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>Modify <a href=\"../docs/variables.html\">local variables</a> in templates.</p>\n<p>For example, to add the current time to the local variables of templates:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</div><div class=\"line\">  <span class=\"keyword\">return</span> locals;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Executed after Hexo is initialized – this will run right after <code>hexo.init</code> completes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>Executed when creating a post to determine the path of new posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Used to determine the permalink of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>Executed after rendering finishes. You can see <a href=\"rendering.html#after_render_Filters\">rendering</a> for more info.</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>Add middleware to the server. <code>app</code> is a <a href=\"https://github.com/senchalabs/connect\" target=\"_blank\" rel=\"external\">Connect</a> instance.</p>\n<p>For example, to add <code>X-Powered-By: Hexo</code> to the response header:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</div><div class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</div><div class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>A filter is used to modify some specified data. Hexo passes data to filters in sequence and the filters then modify the data one after the other. This concept was borrowed from <a href=\"http://codex.wordpress.org/Plugin_API#Filters\">WordPress</a>.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(type, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, priority);</div></pre></td></tr></table></figure>\n<p>You can define the <code>priority</code>. Lower <code>priority</code> means that it will be executed first. The default <code>priority</code> is 10.</p>\n<h2 id=\"Execute-Filters\"><a href=\"#Execute-Filters\" class=\"headerlink\" title=\"Execute Filters\"></a>Execute Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.exec(type, data, options);</div><div class=\"line\">hexo.extend.filter.execSync(type, data, options);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>context</code></td>\n<td>Context</td>\n</tr>\n<tr>\n<td><code>args</code></td>\n<td>Arguments. This must be an array.</td>\n</tr>\n</tbody>\n</table>\n<p>The first argument passed into each filter is <code>data</code>. The <code>data</code> passed into the next filter can be modified by returning a new value. If nothing is returned, the data remains unmodified. You can even use <code>args</code> to specify other arguments in filters. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// data === 'some data'</span></div><div class=\"line\">  <span class=\"comment\">// arg1 === 'foo'</span></div><div class=\"line\">  <span class=\"comment\">// arg2 === 'bar'</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'something'</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, arg1, arg2</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// data === 'something'</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.exec(<span class=\"string\">'test'</span>, <span class=\"string\">'some data'</span>, &#123;</div><div class=\"line\">  <span class=\"attr\">args</span>: [<span class=\"string\">'foo'</span>, <span class=\"string\">'bar'</span>]</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can also use the following methods to execute filters:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.execFilter(type, data, options);</div><div class=\"line\">hexo.execFilterSync(type, data, options);</div></pre></td></tr></table></figure>\n<h2 id=\"Unregister-Filters\"><a href=\"#Unregister-Filters\" class=\"headerlink\" title=\"Unregister Filters\"></a>Unregister Filters</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.unregister(type, filter);</div></pre></td></tr></table></figure>\n<h2 id=\"Filter-List\"><a href=\"#Filter-List\" class=\"headerlink\" title=\"Filter List\"></a>Filter List</h2><p>Here is a list of filters used by Hexo.</p>\n<h3 id=\"before-post-render\"><a href=\"#before-post-render\" class=\"headerlink\" title=\"before_post_render\"></a>before_post_render</h3><p>Executed before a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to transform the title to lower case:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  data.title = data.title.toLowerCase();</div><div class=\"line\">  <span class=\"keyword\">return</span> data;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-post-render\"><a href=\"#after-post-render\" class=\"headerlink\" title=\"after_post_render\"></a>after_post_render</h3><p>Executed after a post is rendered. Refer to <a href=\"posts.html#Render\">post rendering</a> to learn the execution steps.</p>\n<p>For example, to replace <code>@username</code> with a link to a Twitter profile:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_post_render'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  data.content = data.content.replace(<span class=\"regexp\">/@(\\d+)/</span>, <span class=\"string\">'&lt;a href=\"http://twitter.com/$1\"&gt;#$1&lt;/a&gt;'</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> data;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"before-exit\"><a href=\"#before-exit\" class=\"headerlink\" title=\"before_exit\"></a>before_exit</h3><p>Executed before Hexo is about to exit – this will run right after <code>hexo.exit</code> is called.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_exit'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"before-generate\"><a href=\"#before-generate\" class=\"headerlink\" title=\"before_generate\"></a>before_generate</h3><p>Executed before generation begins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'before_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-generate\"><a href=\"#after-generate\" class=\"headerlink\" title=\"after_generate\"></a>after_generate</h3><p>Executed after generation finishes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_generate'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"template-locals\"><a href=\"#template-locals\" class=\"headerlink\" title=\"template_locals\"></a>template_locals</h3><p>Modify <a href=\"../docs/variables.html\">local variables</a> in templates.</p>\n<p>For example, to add the current time to the local variables of templates:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'template_locals'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  locals.now = <span class=\"built_in\">Date</span>.now();</div><div class=\"line\">  <span class=\"keyword\">return</span> locals;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-init\"><a href=\"#after-init\" class=\"headerlink\" title=\"after_init\"></a>after_init</h3><p>Executed after Hexo is initialized – this will run right after <code>hexo.init</code> completes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_init'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"new-post-path\"><a href=\"#new-post-path\" class=\"headerlink\" title=\"new_post_path\"></a>new_post_path</h3><p>Executed when creating a post to determine the path of new posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'new_post_path'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, replace</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"post-permalink\"><a href=\"#post-permalink\" class=\"headerlink\" title=\"post_permalink\"></a>post_permalink</h3><p>Used to determine the permalink of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'post_permalink'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"after-render\"><a href=\"#after-render\" class=\"headerlink\" title=\"after_render\"></a>after_render</h3><p>Executed after rendering finishes. You can see <a href=\"rendering.html#after_render_Filters\">rendering</a> for more info.</p>\n<h3 id=\"server-middleware\"><a href=\"#server-middleware\" class=\"headerlink\" title=\"server_middleware\"></a>server_middleware</h3><p>Add middleware to the server. <code>app</code> is a <a href=\"https://github.com/senchalabs/connect\">Connect</a> instance.</p>\n<p>For example, to add <code>X-Powered-By: Hexo</code> to the response header:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</div><div class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</div><div class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"Generator","_content":"A generator builds routes based on processed files.\n\n## Synopsis\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nA `locals` argument will get passed into the function, containing the [site variables](../docs/variables.html#Site-Variables). You should use this argument to get the website data, thereby avoiding having to access the database directly.\n\n## Update Routes\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nAttribute | Description\n--- | ---\n`path` | Path not including the prefixing `/`.\n`data` | Data\n`layout` | Layout. Specify the layouts for rendering. The value can be a string or an array. If it's ignored then the route will return `data` directly.\n\nWhen the source files are updated, Hexo will execute all generators and rebuild the routes. **Please return the data and do not access the router directly.**\n\n## Example\n\n### Archive Page\n\nCreate an archive page at `archives/index.html`. We pass all posts as data to the templates. This data is equivalent to the `page` variable in templates.\n\nNext, set the `layout` attribute to render with the theme templates. We're setting two layouts in this example: if the `archive` layout doesn't exist, the `index` layout will be used instead.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Archive Page with Pagination\n\nYou can use the convenient official tool [hexo-pagination] to easily build archive pages with pagination.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Generate All Posts\n\nIterate over all posts in `locals.posts` and create routes for all the posts.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Copy Files\n\nThis time we don't return the data explicitly but instead set `data` to a function so the route will build `fs.ReadStream` only when needed.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n","source":"api/generator.md","raw":"title: Generator\n---\nA generator builds routes based on processed files.\n\n## Synopsis\n\n``` js\nhexo.extend.generator.register(name, function(locals){\n  // ...\n});\n```\n\nA `locals` argument will get passed into the function, containing the [site variables](../docs/variables.html#Site-Variables). You should use this argument to get the website data, thereby avoiding having to access the database directly.\n\n## Update Routes\n\n``` js\nhexo.extend.generator.register('test', function(locals){\n  // Object\n  return {\n    path: 'foo',\n    data: 'foo'\n  };\n\n  // Array\n  return [\n    {path: 'foo', data: 'foo'},\n    {path: 'bar', data: 'bar'}\n  ];\n});\n```\n\nAttribute | Description\n--- | ---\n`path` | Path not including the prefixing `/`.\n`data` | Data\n`layout` | Layout. Specify the layouts for rendering. The value can be a string or an array. If it's ignored then the route will return `data` directly.\n\nWhen the source files are updated, Hexo will execute all generators and rebuild the routes. **Please return the data and do not access the router directly.**\n\n## Example\n\n### Archive Page\n\nCreate an archive page at `archives/index.html`. We pass all posts as data to the templates. This data is equivalent to the `page` variable in templates.\n\nNext, set the `layout` attribute to render with the theme templates. We're setting two layouts in this example: if the `archive` layout doesn't exist, the `index` layout will be used instead.\n\n``` js\nhexo.extend.generator.register('archive', function(locals){\n  return {\n    path: 'archives/index.html',\n    data: locals,\n    layout: ['archive', 'index']\n  }\n});\n```\n\n### Archive Page with Pagination\n\nYou can use the convenient official tool [hexo-pagination] to easily build archive pages with pagination.\n\n``` js\nvar pagination = require('hexo-pagination');\n\nhexo.extend.generator.register('archive', function(locals){\n  return pagination('archives/index.html', locals.posts, {\n    perPage: 10,\n    layout: ['archive', 'index'],\n    data: {}\n  });\n});\n```\n\n### Generate All Posts\n\nIterate over all posts in `locals.posts` and create routes for all the posts.\n\n``` js\nhexo.extend.generator.register('post', function(locals){\n  return locals.posts.map(function(post){\n    return {\n      path: post.path,\n      data: post,\n      layout: 'post'\n    };\n  });\n});\n```\n\n### Copy Files\n\nThis time we don't return the data explicitly but instead set `data` to a function so the route will build `fs.ReadStream` only when needed.\n\n``` js\nvar fs = require('hexo-fs');\n\nhexo.extend.generator.register('asset', function(locals){\n  return {\n    path: 'file.txt',\n    data: function(){\n      return fs.createReadStream('path/to/file.txt')\n    }\n  };\n});\n```\n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/generator.html","comments":1,"layout":"page","_id":"ciy3szh6k000bz7145lbao903","content":"<p>A generator builds routes based on processed files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>A <code>locals</code> argument will get passed into the function, containing the <a href=\"../docs/variables.html#Site-Variables\">site variables</a>. You should use this argument to get the website data, thereby avoiding having to access the database directly.</p>\n<h2 id=\"Update-Routes\"><a href=\"#Update-Routes\" class=\"headerlink\" title=\"Update Routes\"></a>Update Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// Object</span></div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span></div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Array</span></div><div class=\"line\">  <span class=\"keyword\">return</span> [</div><div class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</div><div class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</div><div class=\"line\">  ];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Path not including the prefixing <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Specify the layouts for rendering. The value can be a string or an array. If it’s ignored then the route will return <code>data</code> directly.</td>\n</tr>\n</tbody>\n</table>\n<p>When the source files are updated, Hexo will execute all generators and rebuild the routes. <strong>Please return the data and do not access the router directly.</strong></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Archive-Page\"><a href=\"#Archive-Page\" class=\"headerlink\" title=\"Archive Page\"></a>Archive Page</h3><p>Create an archive page at <code>archives/index.html</code>. We pass all posts as data to the templates. This data is equivalent to the <code>page</code> variable in templates.</p>\n<p>Next, set the <code>layout</code> attribute to render with the theme templates. We’re setting two layouts in this example: if the <code>archive</code> layout doesn’t exist, the <code>index</code> layout will be used instead.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'archives/index.html'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: locals,</div><div class=\"line\">    <span class=\"attr\">layout</span>: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Archive-Page-with-Pagination\"><a href=\"#Archive-Page-with-Pagination\" class=\"headerlink\" title=\"Archive Page with Pagination\"></a>Archive Page with Pagination</h3><p>You can use the convenient official tool <a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"external\">hexo-pagination</a> to easily build archive pages with pagination.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</div><div class=\"line\">    <span class=\"attr\">perPage</span>: <span class=\"number\">10</span>,</div><div class=\"line\">    <span class=\"attr\">layout</span>: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</div><div class=\"line\">    <span class=\"attr\">data</span>: &#123;&#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Generate-All-Posts\"><a href=\"#Generate-All-Posts\" class=\"headerlink\" title=\"Generate All Posts\"></a>Generate All Posts</h3><p>Iterate over all posts in <code>locals.posts</code> and create routes for all the posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">path</span>: post.path,</div><div class=\"line\">      <span class=\"attr\">data</span>: post,</div><div class=\"line\">      <span class=\"attr\">layout</span>: <span class=\"string\">'post'</span></div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Copy-Files\"><a href=\"#Copy-Files\" class=\"headerlink\" title=\"Copy Files\"></a>Copy Files</h3><p>This time we don’t return the data explicitly but instead set <code>data</code> to a function so the route will build <code>fs.ReadStream</code> only when needed.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'file.txt'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>A generator builds routes based on processed files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>A <code>locals</code> argument will get passed into the function, containing the <a href=\"../docs/variables.html#Site-Variables\">site variables</a>. You should use this argument to get the website data, thereby avoiding having to access the database directly.</p>\n<h2 id=\"Update-Routes\"><a href=\"#Update-Routes\" class=\"headerlink\" title=\"Update Routes\"></a>Update Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'test'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// Object</span></div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span></div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Array</span></div><div class=\"line\">  <span class=\"keyword\">return</span> [</div><div class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'foo'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'foo'</span>&#125;,</div><div class=\"line\">    &#123;<span class=\"attr\">path</span>: <span class=\"string\">'bar'</span>, <span class=\"attr\">data</span>: <span class=\"string\">'bar'</span>&#125;</div><div class=\"line\">  ];</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td>Path not including the prefixing <code>/</code>.</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Specify the layouts for rendering. The value can be a string or an array. If it’s ignored then the route will return <code>data</code> directly.</td>\n</tr>\n</tbody>\n</table>\n<p>When the source files are updated, Hexo will execute all generators and rebuild the routes. <strong>Please return the data and do not access the router directly.</strong></p>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Archive-Page\"><a href=\"#Archive-Page\" class=\"headerlink\" title=\"Archive Page\"></a>Archive Page</h3><p>Create an archive page at <code>archives/index.html</code>. We pass all posts as data to the templates. This data is equivalent to the <code>page</code> variable in templates.</p>\n<p>Next, set the <code>layout</code> attribute to render with the theme templates. We’re setting two layouts in this example: if the <code>archive</code> layout doesn’t exist, the <code>index</code> layout will be used instead.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'archives/index.html'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: locals,</div><div class=\"line\">    <span class=\"attr\">layout</span>: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>]</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Archive-Page-with-Pagination\"><a href=\"#Archive-Page-with-Pagination\" class=\"headerlink\" title=\"Archive Page with Pagination\"></a>Archive Page with Pagination</h3><p>You can use the convenient official tool <a href=\"https://github.com/hexojs/hexo-pagination\">hexo-pagination</a> to easily build archive pages with pagination.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'archive'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">'archives/index.html'</span>, locals.posts, &#123;</div><div class=\"line\">    <span class=\"attr\">perPage</span>: <span class=\"number\">10</span>,</div><div class=\"line\">    <span class=\"attr\">layout</span>: [<span class=\"string\">'archive'</span>, <span class=\"string\">'index'</span>],</div><div class=\"line\">    <span class=\"attr\">data</span>: &#123;&#125;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Generate-All-Posts\"><a href=\"#Generate-All-Posts\" class=\"headerlink\" title=\"Generate All Posts\"></a>Generate All Posts</h3><p>Iterate over all posts in <code>locals.posts</code> and create routes for all the posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'post'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> locals.posts.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">post</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      <span class=\"attr\">path</span>: post.path,</div><div class=\"line\">      <span class=\"attr\">data</span>: post,</div><div class=\"line\">      <span class=\"attr\">layout</span>: <span class=\"string\">'post'</span></div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Copy-Files\"><a href=\"#Copy-Files\" class=\"headerlink\" title=\"Copy Files\"></a>Copy Files</h3><p>This time we don’t return the data explicitly but instead set <code>data</code> to a function so the route will build <code>fs.ReadStream</code> only when needed.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.generator.register(<span class=\"string\">'asset'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">'file.txt'</span>,</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> fs.createReadStream(<span class=\"string\">'path/to/file.txt'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"Helper","_content":"A helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you're dealing with more complicated code.\n\nHelpers can not be accessed from `source` files.\n\n## Synopsis\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Example\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n","source":"api/helper.md","raw":"title: Helper\n---\nA helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you're dealing with more complicated code.\n\nHelpers can not be accessed from `source` files.\n\n## Synopsis\n\n``` js\nhexo.extend.helper.register(name, function(){\n  // ...\n});\n```\n\n## Example\n\n``` js\nhexo.extend.helper.register('js', function(path){\n  return '<script type=\"text/javascript\" src=\"' + path + '\"></script>';\n});\n```\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"script.js\"></script>\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/helper.html","comments":1,"layout":"page","_id":"ciy3szh6v000cz7141c2jptdw","content":"<p>A helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you’re dealing with more complicated code.</p>\n<p>Helpers can not be accessed from <code>source</code> files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>A helper makes it easy to quickly add snippets to your templates. We recommend using helpers instead of templates when you’re dealing with more complicated code.</p>\n<p>Helpers can not be accessed from <code>source</code> files.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.helper.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.helper.register(<span class=\"string\">'js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">path</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script type=\"text/javascript\" src=\"'</span> + path + <span class=\"string\">'\"&gt;&lt;/script&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"script.js\"&gt;&lt;/script&gt;</span></div></pre></td></tr></table></figure>\n"},{"title":"API","_content":"This documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the [docs](../docs) instead.\n\nPlease note that this documentation is only valid for Hexo 3 and above.\n\n## Initialize\n\nFirst, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, `base_dir`, and an object containing the initialization options. Next, we initialize this instance by calling the `init` method on it, which will then cause Hexo to load its configuration and plugins.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nOption | Description | Default\n--- | --- | ---\n`debug` | Enable debug mode. Display debug messages in the terminal and save `debug.log` in the root directory. | `false`\n`safe` | Enable safe mode. Don't load any plugins. | `false`\n`silent` | Enable silent mode. Don't display any messages in the terminal. | `false`\n`config` | Specify the path of the configuration file. | `_config.yml`\n\n## Load Files\n\nHexo provides two methods for loading files: `load` and `watch`. `load` is used for loading all files in the `source` folder as well as the theme data. `watch` does the same things `load` does, but will also start watching for file changes continuously.\n\nBoth methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## Execute Commands\n\nAny console command can be called explicitly using the `call` method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## Exit\n\nYou should call the `exit` method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n","source":"api/index.md","raw":"title: API\n---\nThis documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the [docs](../docs) instead.\n\nPlease note that this documentation is only valid for Hexo 3 and above.\n\n## Initialize\n\nFirst, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, `base_dir`, and an object containing the initialization options. Next, we initialize this instance by calling the `init` method on it, which will then cause Hexo to load its configuration and plugins.\n\n``` js\nvar Hexo = require('hexo');\nvar hexo = new Hexo(process.cwd(), {});\n\nhexo.init().then(function(){\n  // ...\n});\n```\n\nOption | Description | Default\n--- | --- | ---\n`debug` | Enable debug mode. Display debug messages in the terminal and save `debug.log` in the root directory. | `false`\n`safe` | Enable safe mode. Don't load any plugins. | `false`\n`silent` | Enable silent mode. Don't display any messages in the terminal. | `false`\n`config` | Specify the path of the configuration file. | `_config.yml`\n\n## Load Files\n\nHexo provides two methods for loading files: `load` and `watch`. `load` is used for loading all files in the `source` folder as well as the theme data. `watch` does the same things `load` does, but will also start watching for file changes continuously.\n\nBoth methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.\n\n``` js\nhexo.load().then(function(){\n  // ...\n});\n\nhexo.watch().then(function(){\n  // You can call hexo.unwatch() later to stop watching.\n});\n```\n\n## Execute Commands\n\nAny console command can be called explicitly using the `call` method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.\n\n``` js\nhexo.call('generate', {}).then(function(){\n  // ...\n});\n```\n\n## Exit\n\nYou should call the `exit` method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.\n\n``` js\nhexo.call('generate').then(function(){\n  return hexo.exit();\n}).catch(function(err){\n  return hexo.exit(err);\n});\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/index.html","comments":1,"layout":"page","_id":"ciy3szh6x000dz714mvc1dil1","content":"<p>This documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the <a href=\"../docs\">docs</a> instead.</p>\n<p>Please note that this documentation is only valid for Hexo 3 and above.</p>\n<h2 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h2><p>First, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, <code>base_dir</code>, and an object containing the initialization options. Next, we initialize this instance by calling the <code>init</code> method on it, which will then cause Hexo to load its configuration and plugins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Enable debug mode. Display debug messages in the terminal and save <code>debug.log</code> in the root directory.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Enable safe mode. Don’t load any plugins.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Enable silent mode. Don’t display any messages in the terminal.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Specify the path of the configuration file.</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Hexo provides two methods for loading files: <code>load</code> and <code>watch</code>. <code>load</code> is used for loading all files in the <code>source</code> folder as well as the theme data. <code>watch</code> does the same things <code>load</code> does, but will also start watching for file changes continuously.</p>\n<p>Both methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Execute-Commands\"><a href=\"#Execute-Commands\" class=\"headerlink\" title=\"Execute Commands\"></a>Execute Commands</h2><p>Any console command can be called explicitly using the <code>call</code> method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Exit\"><a href=\"#Exit\" class=\"headerlink\" title=\"Exit\"></a>Exit</h2><p>You should call the <code>exit</code> method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>This documentation provides more detailed information about the API and will be particularly helpful for people who want to modify the Hexo source code or write new plugins. If you are interested in more basic usage of Hexo, please refer to the <a href=\"../docs\">docs</a> instead.</p>\n<p>Please note that this documentation is only valid for Hexo 3 and above.</p>\n<h2 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h2><p>First, we have to create a Hexo instance. A new instance takes two arguments: the root directory of the website, <code>base_dir</code>, and an object containing the initialization options. Next, we initialize this instance by calling the <code>init</code> method on it, which will then cause Hexo to load its configuration and plugins.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> Hexo = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> hexo = <span class=\"keyword\">new</span> Hexo(process.cwd(), &#123;&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.init().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>debug</code></td>\n<td>Enable debug mode. Display debug messages in the terminal and save <code>debug.log</code> in the root directory.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>safe</code></td>\n<td>Enable safe mode. Don’t load any plugins.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>silent</code></td>\n<td>Enable silent mode. Don’t display any messages in the terminal.</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Specify the path of the configuration file.</td>\n<td><code>_config.yml</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Load-Files\"><a href=\"#Load-Files\" class=\"headerlink\" title=\"Load Files\"></a>Load Files</h2><p>Hexo provides two methods for loading files: <code>load</code> and <code>watch</code>. <code>load</code> is used for loading all files in the <code>source</code> folder as well as the theme data. <code>watch</code> does the same things <code>load</code> does, but will also start watching for file changes continuously.</p>\n<p>Both methods will load the list of files and pass them to the corresponding processors. After all files have been processed, they will call upon the generators to create the routes.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.load().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">hexo.watch().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// You can call hexo.unwatch() later to stop watching.</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Execute-Commands\"><a href=\"#Execute-Commands\" class=\"headerlink\" title=\"Execute Commands\"></a>Execute Commands</h2><p>Any console command can be called explicitly using the <code>call</code> method on the Hexo instance. Such a call takes two arguments: the name of the console command, and an options argument. Different options are available for the different console commands.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.call(<span class=\"string\">'generate'</span>, &#123;&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Exit\"><a href=\"#Exit\" class=\"headerlink\" title=\"Exit\"></a>Exit</h2><p>You should call the <code>exit</code> method upon successful or unsuccessful completion of a console command. This allows Hexo to exit gracefully and finish up important things such as saving the database.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.call(<span class=\"string\">'generate'</span>).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> hexo.exit();</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> hexo.exit(err);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"Local Variables","_content":"Local variables are used for template rendering, which is the `site` variable in templates.\n\n## Default Variables\n\nVariable | Description\n--- | ---\n`posts` | All posts\n`pages` | All pages\n`categories` | All categories\n`tags` | All tags\n\n## Get a Variable\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Set a Variable\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Remove a Variable\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Get All Variable\n\n``` js\nhexo.locals.toObject();\n```\n\n## Invalidate the cache\n\n``` js\nhexo.locals.invalidate();\n```","source":"api/locals.md","raw":"title: Local Variables\n---\nLocal variables are used for template rendering, which is the `site` variable in templates.\n\n## Default Variables\n\nVariable | Description\n--- | ---\n`posts` | All posts\n`pages` | All pages\n`categories` | All categories\n`tags` | All tags\n\n## Get a Variable\n\n``` js\nhexo.locals.get('posts')\n```\n\n## Set a Variable\n\n``` js\nhexo.locals.set('posts', function(){\n  return ...\n});\n```\n\n## Remove a Variable\n\n``` js\nhexo.locals.remove('posts');\n```\n\n## Get All Variable\n\n``` js\nhexo.locals.toObject();\n```\n\n## Invalidate the cache\n\n``` js\nhexo.locals.invalidate();\n```","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/locals.html","comments":1,"layout":"page","_id":"ciy3szh6z000ez714eiguo0lr","content":"<p>Local variables are used for template rendering, which is the <code>site</code> variable in templates.</p>\n<h2 id=\"Default-Variables\"><a href=\"#Default-Variables\" class=\"headerlink\" title=\"Default Variables\"></a>Default Variables</h2><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Get-a-Variable\"><a href=\"#Get-a-Variable\" class=\"headerlink\" title=\"Get a Variable\"></a>Get a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Variable\"><a href=\"#Set-a-Variable\" class=\"headerlink\" title=\"Set a Variable\"></a>Set a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ...</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Variable\"><a href=\"#Remove-a-Variable\" class=\"headerlink\" title=\"Remove a Variable\"></a>Remove a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Get-All-Variable\"><a href=\"#Get-All-Variable\" class=\"headerlink\" title=\"Get All Variable\"></a>Get All Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.toObject();</div></pre></td></tr></table></figure>\n<h2 id=\"Invalidate-the-cache\"><a href=\"#Invalidate-the-cache\" class=\"headerlink\" title=\"Invalidate the cache\"></a>Invalidate the cache</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.invalidate();</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>Local variables are used for template rendering, which is the <code>site</code> variable in templates.</p>\n<h2 id=\"Default-Variables\"><a href=\"#Default-Variables\" class=\"headerlink\" title=\"Default Variables\"></a>Default Variables</h2><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Get-a-Variable\"><a href=\"#Get-a-Variable\" class=\"headerlink\" title=\"Get a Variable\"></a>Get a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.get(<span class=\"string\">'posts'</span>)</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Variable\"><a href=\"#Set-a-Variable\" class=\"headerlink\" title=\"Set a Variable\"></a>Set a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.set(<span class=\"string\">'posts'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ...</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Variable\"><a href=\"#Remove-a-Variable\" class=\"headerlink\" title=\"Remove a Variable\"></a>Remove a Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.remove(<span class=\"string\">'posts'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Get-All-Variable\"><a href=\"#Get-All-Variable\" class=\"headerlink\" title=\"Get All Variable\"></a>Get All Variable</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.toObject();</div></pre></td></tr></table></figure>\n<h2 id=\"Invalidate-the-cache\"><a href=\"#Invalidate-the-cache\" class=\"headerlink\" title=\"Invalidate the cache\"></a>Invalidate the cache</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.locals.invalidate();</div></pre></td></tr></table></figure>"},{"title":"Migrator","_content":"A migrator helps users migrate from other systems to Hexo.\n\n## Synopsis\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. This argument will contain the user's input into the terminal.\n","source":"api/migrator.md","raw":"title: Migrator\n---\nA migrator helps users migrate from other systems to Hexo.\n\n## Synopsis\n\n``` js\nhexo.extend.migrator.register(name, function(args){\n  // ...\n});\n```\n\nAn argument `args` will be passed into the function. This argument will contain the user's input into the terminal.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/migrator.html","comments":1,"layout":"page","_id":"ciy3szh74000fz714gf3pee4i","content":"<p>A migrator helps users migrate from other systems to Hexo.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. This argument will contain the user’s input into the terminal.</p>\n","excerpt":"","more":"<p>A migrator helps users migrate from other systems to Hexo.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.migrator.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>An argument <code>args</code> will be passed into the function. This argument will contain the user’s input into the terminal.</p>\n"},{"title":"Posts","_content":"## Create a Post\n\n``` js\nhexo.post.create(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`title` | Title\n`slug` | URL\n`layout` | Layout. Defaults to the `default_layout` setting.\n`path` | Path. Hexo builds the post path based on the `new_post_path` setting by default.\n`date` | Date. Defaults to the current date.\n\n## Publish a Draft\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`slug` | File name (Required)\n`layout` | Layout. Defaults to the `default_layout` setting.\n\n## Render\n\n``` js\nhexo.post.render(source, data);\n```\n\nArgument | Description\n--- | ---\n`source` | Full path of a file (Optional)\n`data` | Data\n\nThe data must contain the `content` attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:\n\n- Execute `before_post_render` filters\n- Render with Markdown or other renderers (depending on the extension name)\n- Render with [Nunjucks]\n- Execute `after_post_render` filters\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n","source":"api/posts.md","raw":"title: Posts\n---\n## Create a Post\n\n``` js\nhexo.post.create(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`title` | Title\n`slug` | URL\n`layout` | Layout. Defaults to the `default_layout` setting.\n`path` | Path. Hexo builds the post path based on the `new_post_path` setting by default.\n`date` | Date. Defaults to the current date.\n\n## Publish a Draft\n\n``` js\nhexo.post.publish(data, replace);\n```\n\nArgument | Description\n--- | ---\n`data` | Data\n`replace` | Replace existing files\n\nThe attributes of a post can be defined in `data`. The table below is not exhaustive. Additional attributes may be appended to the front-matter.\n\nData | Description\n--- | ---\n`slug` | File name (Required)\n`layout` | Layout. Defaults to the `default_layout` setting.\n\n## Render\n\n``` js\nhexo.post.render(source, data);\n```\n\nArgument | Description\n--- | ---\n`source` | Full path of a file (Optional)\n`data` | Data\n\nThe data must contain the `content` attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:\n\n- Execute `before_post_render` filters\n- Render with Markdown or other renderers (depending on the extension name)\n- Render with [Nunjucks]\n- Execute `after_post_render` filters\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/posts.html","comments":1,"layout":"page","_id":"ciy3szh77000gz7145wafh9xq","content":"<h2 id=\"Create-a-Post\"><a href=\"#Create-a-Post\" class=\"headerlink\" title=\"Create a Post\"></a>Create a Post</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.create(data, replace);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path. Hexo builds the post path based on the <code>new_post_path</code> setting by default.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Date. Defaults to the current date.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Publish-a-Draft\"><a href=\"#Publish-a-Draft\" class=\"headerlink\" title=\"Publish a Draft\"></a>Publish a Draft</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.publish(data, replace);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>File name (Required)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Render\"><a href=\"#Render\" class=\"headerlink\" title=\"Render\"></a>Render</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.render(source, data);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of a file (Optional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n</tbody>\n</table>\n<p>The data must contain the <code>content</code> attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:</p>\n<ul>\n<li>Execute <code>before_post_render</code> filters</li>\n<li>Render with Markdown or other renderers (depending on the extension name)</li>\n<li>Render with <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"external\">Nunjucks</a></li>\n<li>Execute <code>after_post_render</code> filters</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"Create-a-Post\"><a href=\"#Create-a-Post\" class=\"headerlink\" title=\"Create a Post\"></a>Create a Post</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.create(data, replace);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>slug</code></td>\n<td>URL</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path. Hexo builds the post path based on the <code>new_post_path</code> setting by default.</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Date. Defaults to the current date.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Publish-a-Draft\"><a href=\"#Publish-a-Draft\" class=\"headerlink\" title=\"Publish a Draft\"></a>Publish a Draft</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.publish(data, replace);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n<tr>\n<td><code>replace</code></td>\n<td>Replace existing files</td>\n</tr>\n</tbody>\n</table>\n<p>The attributes of a post can be defined in <code>data</code>. The table below is not exhaustive. Additional attributes may be appended to the front-matter.</p>\n<table>\n<thead>\n<tr>\n<th>Data</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>slug</code></td>\n<td>File name (Required)</td>\n</tr>\n<tr>\n<td><code>layout</code></td>\n<td>Layout. Defaults to the <code>default_layout</code> setting.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Render\"><a href=\"#Render\" class=\"headerlink\" title=\"Render\"></a>Render</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.render(source, data);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source</code></td>\n<td>Full path of a file (Optional)</td>\n</tr>\n<tr>\n<td><code>data</code></td>\n<td>Data</td>\n</tr>\n</tbody>\n</table>\n<p>The data must contain the <code>content</code> attribute. If not, Hexo will try to read the original file. The execution steps of this function are as follows:</p>\n<ul>\n<li>Execute <code>before_post_render</code> filters</li>\n<li>Render with Markdown or other renderers (depending on the extension name)</li>\n<li>Render with <a href=\"http://mozilla.github.io/nunjucks/\">Nunjucks</a></li>\n<li>Execute <code>after_post_render</code> filters</li>\n</ul>\n"},{"title":"Processor","_content":"A processor is used to process source files in the `source` folder.\n\n## Synopsis\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nFor more info, see [box](box.html).\n","source":"api/processor.md","raw":"title: Processor\n---\nA processor is used to process source files in the `source` folder.\n\n## Synopsis\n\n``` js\nhexo.extend.processor.register(rule, function(file){\n // ...\n});\n```\n\nFor more info, see [box](box.html).\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/processor.html","comments":1,"layout":"page","_id":"ciy3szh78000hz714fx4d9n5g","content":"<p>A processor is used to process source files in the <code>source</code> folder.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</div><div class=\"line\"> <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>For more info, see <a href=\"box.html\">box</a>.</p>\n","excerpt":"","more":"<p>A processor is used to process source files in the <code>source</code> folder.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.processor.register(rule, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">file</span>)</span>&#123;</div><div class=\"line\"> <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>For more info, see <a href=\"box.html\">box</a>.</p>\n"},{"title":"Renderer","_content":"A renderer is used to render content.\n\n## Synopsis\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nArgument | Description\n--- | ---\n`name` | Input filename extension (lower case, without leading `.`)\n`output` | Output filename extension (lower case, without leading `.`)\n`sync` | Sync mode\n\nTwo arguments will be passed into the render function:\n\nArgument | Description\n--- | ---\n`data` | Include two attributes: file path `path` and file content `text`. `path` won't necessarily exist.\n`option` | Options\n\n## Example\n\n### Async Mode\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### Sync Mode\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n","source":"api/renderer.md","raw":"title: Renderer\n---\nA renderer is used to render content.\n\n## Synopsis\n\n``` js\nhexo.extend.renderer.register(name, output, function(data, options){\n  // ...\n}, sync);\n```\n\nArgument | Description\n--- | ---\n`name` | Input filename extension (lower case, without leading `.`)\n`output` | Output filename extension (lower case, without leading `.`)\n`sync` | Sync mode\n\nTwo arguments will be passed into the render function:\n\nArgument | Description\n--- | ---\n`data` | Include two attributes: file path `path` and file content `text`. `path` won't necessarily exist.\n`option` | Options\n\n## Example\n\n### Async Mode\n\n``` js\nvar stylus = require('stylus');\n\n// Callback\nhexo.extend.renderer.register('styl', 'css', function(data, options, callback){\n  stylus(data.text).set('filename', data.path).render(callback);\n});\n\n// Promise\nhexo.extend.renderer.register('styl', 'css', function(data, options){\n  return new Promise(function(resolve, reject){\n    resolve('test');\n  });\n});\n```\n\n### Sync Mode\n\n``` js\nvar ejs = require('ejs');\n\nhexo.extend.renderer.register('ejs', 'html', function(data, options){\n  options.filename = data.path;\n  return ejs.render(data.text, options);\n}, true);\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/renderer.html","comments":1,"layout":"page","_id":"ciy3szh7a000iz714i9iwek72","content":"<p>A renderer is used to render content.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, sync);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Input filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Output filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Sync mode</td>\n</tr>\n</tbody>\n</table>\n<p>Two arguments will be passed into the render function:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Include two attributes: file path <code>path</code> and file content <code>text</code>. <code>path</code> won’t necessarily exist.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Async-Mode\"><a href=\"#Async-Mode\" class=\"headerlink\" title=\"Async Mode\"></a>Async Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Callback</span></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</div><div class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Promise</span></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</div><div class=\"line\">    resolve(<span class=\"string\">'test'</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Sync-Mode\"><a href=\"#Sync-Mode\" class=\"headerlink\" title=\"Sync Mode\"></a>Sync Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  options.filename = data.path;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</div><div class=\"line\">&#125;, <span class=\"literal\">true</span>);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>A renderer is used to render content.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.renderer.register(name, output, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, sync);</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>name</code></td>\n<td>Input filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>output</code></td>\n<td>Output filename extension (lower case, without leading <code>.</code>)</td>\n</tr>\n<tr>\n<td><code>sync</code></td>\n<td>Sync mode</td>\n</tr>\n</tbody>\n</table>\n<p>Two arguments will be passed into the render function:</p>\n<table>\n<thead>\n<tr>\n<th>Argument</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data</code></td>\n<td>Include two attributes: file path <code>path</code> and file content <code>text</code>. <code>path</code> won’t necessarily exist.</td>\n</tr>\n<tr>\n<td><code>option</code></td>\n<td>Options</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h2><h3 id=\"Async-Mode\"><a href=\"#Async-Mode\" class=\"headerlink\" title=\"Async Mode\"></a>Async Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> stylus = <span class=\"built_in\">require</span>(<span class=\"string\">'stylus'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Callback</span></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options, callback</span>)</span>&#123;</div><div class=\"line\">  stylus(data.text).set(<span class=\"string\">'filename'</span>, data.path).render(callback);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Promise</span></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'styl'</span>, <span class=\"string\">'css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</div><div class=\"line\">    resolve(<span class=\"string\">'test'</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Sync-Mode\"><a href=\"#Sync-Mode\" class=\"headerlink\" title=\"Sync Mode\"></a>Sync Mode</h3><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.renderer.register(<span class=\"string\">'ejs'</span>, <span class=\"string\">'html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data, options</span>)</span>&#123;</div><div class=\"line\">  options.filename = data.path;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, options);</div><div class=\"line\">&#125;, <span class=\"literal\">true</span>);</div></pre></td></tr></table></figure>\n"},{"title":"Rendering","_content":"There are two methods for rendering files or strings in Hexo: the asynchronous `hexo.render.render` method and the synchronous `hexo.render.renderSync` method. Unsurprisingly, the two methods are very similar so only the asynchronous `hexo.render.render` will be further discussed in the below paragraphs.\n\n## Render a String\n\nWhen rendering a string, you must specify an `engine` to let Hexo know which rendering engine it should use.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render a File\n\nWhen rendering a file, it's not necessary to specify an `engine` because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the `engine`.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render Options\n\nYou can pass in an options object as the second argument.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render Filters\n\nWhen rendering is complete, Hexo will execute the corresponding `after_render` filters. For example, we can use this feature to implement a JavaScript minifier.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Check Whether a File is Renderable\n\nYou can use the `isRenderable` or `isRenderableSync` method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Get the Output Extension\n\nUse the `getOutput` method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n","source":"api/rendering.md","raw":"title: Rendering\n---\nThere are two methods for rendering files or strings in Hexo: the asynchronous `hexo.render.render` method and the synchronous `hexo.render.renderSync` method. Unsurprisingly, the two methods are very similar so only the asynchronous `hexo.render.render` will be further discussed in the below paragraphs.\n\n## Render a String\n\nWhen rendering a string, you must specify an `engine` to let Hexo know which rendering engine it should use.\n\n``` js\nhexo.render.render({text: 'example', engine: 'swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render a File\n\nWhen rendering a file, it's not necessary to specify an `engine` because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the `engine`.\n\n``` js\nhexo.render.render({path: 'path/to/file.swig'}).then(function(result){\n  // ...\n});\n```\n\n## Render Options\n\nYou can pass in an options object as the second argument.\n\n``` js\nhexo.render.render({text: ''}, {foo: 'foo'}).then(function(result){\n  // ...\n});\n```\n\n## after_render Filters\n\nWhen rendering is complete, Hexo will execute the corresponding `after_render` filters. For example, we can use this feature to implement a JavaScript minifier.\n\n``` js\nvar UglifyJS = require('uglify-js');\n\nhexo.extend.filter.register('after_render:js', function(str, data){\n  var result = UglifyJS.minify(str);\n  return result.code;\n});\n```\n\n## Check Whether a File is Renderable\n\nYou can use the `isRenderable` or `isRenderableSync` method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.\n\n``` js\nhexo.render.isRenderable('layout.swig') // true\nhexo.render.isRenderable('image.png') // false\n```\n\n## Get the Output Extension\n\nUse the `getOutput` method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.\n\n``` js\nhexo.render.getOutput('layout.swig') // html\nhexo.render.getOutput('image.png') // '''\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/rendering.html","comments":1,"layout":"page","_id":"ciy3szh7b000jz714mzidc783","content":"<p>There are two methods for rendering files or strings in Hexo: the asynchronous <code>hexo.render.render</code> method and the synchronous <code>hexo.render.renderSync</code> method. Unsurprisingly, the two methods are very similar so only the asynchronous <code>hexo.render.render</code> will be further discussed in the below paragraphs.</p>\n<h2 id=\"Render-a-String\"><a href=\"#Render-a-String\" class=\"headerlink\" title=\"Render a String\"></a>Render a String</h2><p>When rendering a string, you must specify an <code>engine</code> to let Hexo know which rendering engine it should use.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Render-a-File\"><a href=\"#Render-a-File\" class=\"headerlink\" title=\"Render a File\"></a>Render a File</h2><p>When rendering a file, it’s not necessary to specify an <code>engine</code> because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the <code>engine</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Render-Options\"><a href=\"#Render-Options\" class=\"headerlink\" title=\"Render Options\"></a>Render Options</h2><p>You can pass in an options object as the second argument.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"after-render-Filters\"><a href=\"#after-render-Filters\" class=\"headerlink\" title=\"after_render Filters\"></a>after_render Filters</h2><p>When rendering is complete, Hexo will execute the corresponding <code>after_render</code> filters. For example, we can use this feature to implement a JavaScript minifier.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</div><div class=\"line\">  <span class=\"keyword\">return</span> result.code;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Check-Whether-a-File-is-Renderable\"><a href=\"#Check-Whether-a-File-is-Renderable\" class=\"headerlink\" title=\"Check Whether a File is Renderable\"></a>Check Whether a File is Renderable</h2><p>You can use the <code>isRenderable</code> or <code>isRenderableSync</code> method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></div><div class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Get-the-Output-Extension\"><a href=\"#Get-the-Output-Extension\" class=\"headerlink\" title=\"Get the Output Extension\"></a>Get the Output Extension</h2><p>Use the <code>getOutput</code> method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></div><div class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>There are two methods for rendering files or strings in Hexo: the asynchronous <code>hexo.render.render</code> method and the synchronous <code>hexo.render.renderSync</code> method. Unsurprisingly, the two methods are very similar so only the asynchronous <code>hexo.render.render</code> will be further discussed in the below paragraphs.</p>\n<h2 id=\"Render-a-String\"><a href=\"#Render-a-String\" class=\"headerlink\" title=\"Render a String\"></a>Render a String</h2><p>When rendering a string, you must specify an <code>engine</code> to let Hexo know which rendering engine it should use.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">'example'</span>, <span class=\"attr\">engine</span>: <span class=\"string\">'swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Render-a-File\"><a href=\"#Render-a-File\" class=\"headerlink\" title=\"Render a File\"></a>Render a File</h2><p>When rendering a file, it’s not necessary to specify an <code>engine</code> because Hexo will detect the relevant rendering engine automatically based on the extension of the file. Of course, you are also allowed to explicitly define the <code>engine</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">path</span>: <span class=\"string\">'path/to/file.swig'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Render-Options\"><a href=\"#Render-Options\" class=\"headerlink\" title=\"Render Options\"></a>Render Options</h2><p>You can pass in an options object as the second argument.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.render(&#123;<span class=\"attr\">text</span>: <span class=\"string\">''</span>&#125;, &#123;<span class=\"attr\">foo</span>: <span class=\"string\">'foo'</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"after-render-Filters\"><a href=\"#after-render-Filters\" class=\"headerlink\" title=\"after_render Filters\"></a>after_render Filters</h2><p>When rendering is complete, Hexo will execute the corresponding <code>after_render</code> filters. For example, we can use this feature to implement a JavaScript minifier.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> UglifyJS = <span class=\"built_in\">require</span>(<span class=\"string\">'uglify-js'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'after_render:js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">str, data</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> result = UglifyJS.minify(str);</div><div class=\"line\">  <span class=\"keyword\">return</span> result.code;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Check-Whether-a-File-is-Renderable\"><a href=\"#Check-Whether-a-File-is-Renderable\" class=\"headerlink\" title=\"Check Whether a File is Renderable\"></a>Check Whether a File is Renderable</h2><p>You can use the <code>isRenderable</code> or <code>isRenderableSync</code> method to check whether a file path is renderable. Only when a corresponding renderer has been registered will this method return true.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.isRenderable(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// true</span></div><div class=\"line\">hexo.render.isRenderable(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Get-the-Output-Extension\"><a href=\"#Get-the-Output-Extension\" class=\"headerlink\" title=\"Get the Output Extension\"></a>Get the Output Extension</h2><p>Use the <code>getOutput</code> method to get the extension of the rendered output. If a file is not renderable, the method will return an empty string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.render.getOutput(<span class=\"string\">'layout.swig'</span>) <span class=\"comment\">// html</span></div><div class=\"line\">hexo.render.getOutput(<span class=\"string\">'image.png'</span>) <span class=\"comment\">// '''</span></div></pre></td></tr></table></figure>\n"},{"title":"Router","_content":"The router saves all paths used in the site.\n\n## Get a Path\n\nThe `get` method returns a [Stream]. For example, to save the path data to a specified destination:\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Set a Path\n\nThe `set` method takes a string, a [Buffer] or a function.\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nYou can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Remove a Path\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Get the List of Routes\n\n``` js\nhexo.route.list();\n```\n\n## Format a Path\n\nThe `format` method transforms a string to a valid path.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n","source":"api/router.md","raw":"title: Router\n---\nThe router saves all paths used in the site.\n\n## Get a Path\n\nThe `get` method returns a [Stream]. For example, to save the path data to a specified destination:\n\n``` js\nvar data = hexo.route.get('index.html');\nvar dest = fs.createWriteStream('somewhere');\n\ndata.pipe(dest);\n```\n\n## Set a Path\n\nThe `set` method takes a string, a [Buffer] or a function.\n\n``` js\n// String\nhexo.route.set('index.html', 'index')\n\n// Buffer\nhexo.route.set('index.html', new Buffer('index'));\n\n// Function (Promise)\nhexo.route.set('index.html', function(){\n  return new Promise(function(resolve, reject){\n    resolve('index');\n  });\n});\n\n// Function (Callback)\nhexo.route.set('index.html', function(callback){\n  callback(null, 'index');\n});\n```\n\nYou can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.\n\n``` js\nhexo.route.set('index.html', {\n    data: 'index',\n    modified: false\n});\n\n// hexo.route.isModified('index.html') => false\n```\n\n## Remove a Path\n\n``` js\nhexo.route.remove('index.html');\n```\n\n## Get the List of Routes\n\n``` js\nhexo.route.list();\n```\n\n## Format a Path\n\nThe `format` method transforms a string to a valid path.\n\n``` js\nhexo.route.format('archives/');\n// archives/index.html\n```\n\n[Stream]: http://nodejs.org/api/stream.html\n[Buffer]: http://nodejs.org/api/buffer.html\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/router.html","comments":1,"layout":"page","_id":"ciy3szh7e000kz714i1oi7b2g","content":"<p>The router saves all paths used in the site.</p>\n<h2 id=\"Get-a-Path\"><a href=\"#Get-a-Path\" class=\"headerlink\" title=\"Get a Path\"></a>Get a Path</h2><p>The <code>get</code> method returns a <a href=\"http://nodejs.org/api/stream.html\" target=\"_blank\" rel=\"external\">Stream</a>. For example, to save the path data to a specified destination:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</div><div class=\"line\"></div><div class=\"line\">data.pipe(dest);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Path\"><a href=\"#Set-a-Path\" class=\"headerlink\" title=\"Set a Path\"></a>Set a Path</h2><p>The <code>set</code> method takes a string, a <a href=\"http://nodejs.org/api/buffer.html\" target=\"_blank\" rel=\"external\">Buffer</a> or a function.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// String</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Buffer</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Function (Promise)</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</div><div class=\"line\">    resolve(<span class=\"string\">'index'</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Function (Callback)</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</div><div class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">'index'</span>,</div><div class=\"line\">    <span class=\"attr\">modified</span>: <span class=\"literal\">false</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Path\"><a href=\"#Remove-a-Path\" class=\"headerlink\" title=\"Remove a Path\"></a>Remove a Path</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Get-the-List-of-Routes\"><a href=\"#Get-the-List-of-Routes\" class=\"headerlink\" title=\"Get the List of Routes\"></a>Get the List of Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.list();</div></pre></td></tr></table></figure>\n<h2 id=\"Format-a-Path\"><a href=\"#Format-a-Path\" class=\"headerlink\" title=\"Format a Path\"></a>Format a Path</h2><p>The <code>format</code> method transforms a string to a valid path.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</div><div class=\"line\"><span class=\"comment\">// archives/index.html</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>The router saves all paths used in the site.</p>\n<h2 id=\"Get-a-Path\"><a href=\"#Get-a-Path\" class=\"headerlink\" title=\"Get a Path\"></a>Get a Path</h2><p>The <code>get</code> method returns a <a href=\"http://nodejs.org/api/stream.html\">Stream</a>. For example, to save the path data to a specified destination:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> data = hexo.route.get(<span class=\"string\">'index.html'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> dest = fs.createWriteStream(<span class=\"string\">'somewhere'</span>);</div><div class=\"line\"></div><div class=\"line\">data.pipe(dest);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Path\"><a href=\"#Set-a-Path\" class=\"headerlink\" title=\"Set a Path\"></a>Set a Path</h2><p>The <code>set</code> method takes a string, a <a href=\"http://nodejs.org/api/buffer.html\">Buffer</a> or a function.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// String</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"string\">'index'</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Buffer</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"keyword\">new</span> Buffer(<span class=\"string\">'index'</span>));</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Function (Promise)</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">resolve, reject</span>)</span>&#123;</div><div class=\"line\">    resolve(<span class=\"string\">'index'</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// Function (Callback)</span></div><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">callback</span>)</span>&#123;</div><div class=\"line\">  callback(<span class=\"literal\">null</span>, <span class=\"string\">'index'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can also set a boolean for whether a path has been modified or not. This can speed up file generation as it allows for ignoring the unmodified files.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.set(<span class=\"string\">'index.html'</span>, &#123;</div><div class=\"line\">    <span class=\"attr\">data</span>: <span class=\"string\">'index'</span>,</div><div class=\"line\">    <span class=\"attr\">modified</span>: <span class=\"literal\">false</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// hexo.route.isModified('index.html') =&gt; false</span></div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Path\"><a href=\"#Remove-a-Path\" class=\"headerlink\" title=\"Remove a Path\"></a>Remove a Path</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.remove(<span class=\"string\">'index.html'</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"Get-the-List-of-Routes\"><a href=\"#Get-the-List-of-Routes\" class=\"headerlink\" title=\"Get the List of Routes\"></a>Get the List of Routes</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.list();</div></pre></td></tr></table></figure>\n<h2 id=\"Format-a-Path\"><a href=\"#Format-a-Path\" class=\"headerlink\" title=\"Format a Path\"></a>Format a Path</h2><p>The <code>format</code> method transforms a string to a valid path.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.route.format(<span class=\"string\">'archives/'</span>);</div><div class=\"line\"><span class=\"comment\">// archives/index.html</span></div></pre></td></tr></table></figure>\n"},{"title":"Scaffolds","_content":"## Get a Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Set a Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remove a Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```","source":"api/scaffolds.md","raw":"title: Scaffolds\n---\n## Get a Scaffold\n\n``` js\nhexo.scaffold.get(name);\n```\n\n## Set a Scaffold\n\n``` js\nhexo.scaffold.set(name, content);\n```\n\n## Remove a Scaffold\n\n``` js\nhexo.scaffold.remove(name);\n```","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/scaffolds.html","comments":1,"layout":"page","_id":"ciy3szh7f000lz714qaqlyh37","content":"<h2 id=\"Get-a-Scaffold\"><a href=\"#Get-a-Scaffold\" class=\"headerlink\" title=\"Get a Scaffold\"></a>Get a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.get(name);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Scaffold\"><a href=\"#Set-a-Scaffold\" class=\"headerlink\" title=\"Set a Scaffold\"></a>Set a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.set(name, content);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Scaffold\"><a href=\"#Remove-a-Scaffold\" class=\"headerlink\" title=\"Remove a Scaffold\"></a>Remove a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.remove(name);</div></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"Get-a-Scaffold\"><a href=\"#Get-a-Scaffold\" class=\"headerlink\" title=\"Get a Scaffold\"></a>Get a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.get(name);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-Scaffold\"><a href=\"#Set-a-Scaffold\" class=\"headerlink\" title=\"Set a Scaffold\"></a>Set a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.set(name, content);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-Scaffold\"><a href=\"#Remove-a-Scaffold\" class=\"headerlink\" title=\"Remove a Scaffold\"></a>Remove a Scaffold</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.scaffold.remove(name);</div></pre></td></tr></table></figure>"},{"title":"Tag","_content":"A tag allows users to quickly and easily insert snippets into their posts.\n\n## Synopsis\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nTwo arguments will be passed into the tag function: `args` and `content`. `args` contains the arguments passed into the tag plugin and `content` is the wrapped content from the tag plugin.\n\nSince the introduction of asynchronous rendering in Hexo 3, we are using [Nunjucks] for rendering. The behavior may be somewhat different from that in [Swig].\n\n## Options\n\n### ends\n\nUse end tags. This option is `false` by default.\n\n### async\n\nEnable async mode. This option is `false` by default.\n\n## Examples\n\n### Without End Tags\n\nInsert a Youtube video.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### With End Tags\n\nInsert a pull quote.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Async Rendering\n\nInsert a file.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n","source":"api/tag.md","raw":"title: Tag\n---\nA tag allows users to quickly and easily insert snippets into their posts.\n\n## Synopsis\n\n``` js\nhexo.extend.tag.register(name, function(args, content){\n  // ...\n}, options);\n```\n\nTwo arguments will be passed into the tag function: `args` and `content`. `args` contains the arguments passed into the tag plugin and `content` is the wrapped content from the tag plugin.\n\nSince the introduction of asynchronous rendering in Hexo 3, we are using [Nunjucks] for rendering. The behavior may be somewhat different from that in [Swig].\n\n## Options\n\n### ends\n\nUse end tags. This option is `false` by default.\n\n### async\n\nEnable async mode. This option is `false` by default.\n\n## Examples\n\n### Without End Tags\n\nInsert a Youtube video.\n\n``` js\nhexo.extend.tag.register('youtube', function(args){\n  var id = args[0];\n  return '<div class=\"video-container\"><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/' + id + '\" frameborder=\"0\" allowfullscreen></iframe></div>';\n});\n```\n\n### With End Tags\n\nInsert a pull quote.\n\n``` js\nhexo.extend.tag.register('pullquote', function(args, content){\n  var className =  args.join(' ');\n  return '<blockquote class=\"pullquote' + className + '\">' + content + '</blockquote>';\n}, {ends: true});\n```\n\n### Async Rendering\n\nInsert a file.\n\n``` js\nvar fs = require('hexo-fs');\nvar pathFn = require('path');\n\nhexo.extend.tag.register('include_code', function(args){\n  var filename = args[0];\n  var path = pathFn.join(hexo.source_dir, filename);\n\n  return fs.readFile(path).then(function(content){\n    return '<pre><code>' + content + '</code></pre>';\n  });\n}, {async: true});\n```\n\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n[Swig]: http://paularmstrong.github.io/swig/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/tag.html","comments":1,"layout":"page","_id":"ciy3szh7i000mz7147cafwvk3","content":"<p>A tag allows users to quickly and easily insert snippets into their posts.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, options);</div></pre></td></tr></table></figure>\n<p>Two arguments will be passed into the tag function: <code>args</code> and <code>content</code>. <code>args</code> contains the arguments passed into the tag plugin and <code>content</code> is the wrapped content from the tag plugin.</p>\n<p>Since the introduction of asynchronous rendering in Hexo 3, we are using <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"external\">Nunjucks</a> for rendering. The behavior may be somewhat different from that in <a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"external\">Swig</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>Use end tags. This option is <code>false</code> by default.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>Enable async mode. This option is <code>false</code> by default.</p>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><h3 id=\"Without-End-Tags\"><a href=\"#Without-End-Tags\" class=\"headerlink\" title=\"Without End Tags\"></a>Without End Tags</h3><p>Insert a Youtube video.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"With-End-Tags\"><a href=\"#With-End-Tags\" class=\"headerlink\" title=\"With End Tags\"></a>With End Tags</h3><p>Insert a pull quote.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</div><div class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Async-Rendering\"><a href=\"#Async-Rendering\" class=\"headerlink\" title=\"Async Rendering\"></a>Async Rendering</h3><p>Insert a file.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</div><div class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>A tag allows users to quickly and easily insert snippets into their posts.</p>\n<h2 id=\"Synopsis\"><a href=\"#Synopsis\" class=\"headerlink\" title=\"Synopsis\"></a>Synopsis</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(name, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;, options);</div></pre></td></tr></table></figure>\n<p>Two arguments will be passed into the tag function: <code>args</code> and <code>content</code>. <code>args</code> contains the arguments passed into the tag plugin and <code>content</code> is the wrapped content from the tag plugin.</p>\n<p>Since the introduction of asynchronous rendering in Hexo 3, we are using <a href=\"http://mozilla.github.io/nunjucks/\">Nunjucks</a> for rendering. The behavior may be somewhat different from that in <a href=\"http://paularmstrong.github.io/swig/\">Swig</a>.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"ends\"><a href=\"#ends\" class=\"headerlink\" title=\"ends\"></a>ends</h3><p>Use end tags. This option is <code>false</code> by default.</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>Enable async mode. This option is <code>false</code> by default.</p>\n<h2 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h2><h3 id=\"Without-End-Tags\"><a href=\"#Without-End-Tags\" class=\"headerlink\" title=\"Without End Tags\"></a>Without End Tags</h3><p>Insert a Youtube video.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'youtube'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> id = args[<span class=\"number\">0</span>];</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;div class=\"video-container\"&gt;&lt;iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/'</span> + id + <span class=\"string\">'\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"With-End-Tags\"><a href=\"#With-End-Tags\" class=\"headerlink\" title=\"With End Tags\"></a>With End Tags</h3><p>Insert a pull quote.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'pullquote'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args, content</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> className =  args.join(<span class=\"string\">' '</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;blockquote class=\"pullquote'</span> + className + <span class=\"string\">'\"&gt;'</span> + content + <span class=\"string\">'&lt;/blockquote&gt;'</span>;</div><div class=\"line\">&#125;, &#123;<span class=\"attr\">ends</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n<h3 id=\"Async-Rendering\"><a href=\"#Async-Rendering\" class=\"headerlink\" title=\"Async Rendering\"></a>Async Rendering</h3><p>Insert a file.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-fs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> pathFn = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"></div><div class=\"line\">hexo.extend.tag.register(<span class=\"string\">'include_code'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">args</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> filename = args[<span class=\"number\">0</span>];</div><div class=\"line\">  <span class=\"keyword\">var</span> path = pathFn.join(hexo.source_dir, filename);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> fs.readFile(path).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">content</span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'&lt;pre&gt;&lt;code&gt;'</span> + content + <span class=\"string\">'&lt;/code&gt;&lt;/pre&gt;'</span>;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;, &#123;<span class=\"attr\">async</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n"},{"title":"Themes","_content":"`hexo.theme` inherits from [Box](box.html), and also saves templates.\n\n## Get a View\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Set a View\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Remove a View\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nViews have two methods: `render` and `renderSync`. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss `render` here.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nYou can pass options to the `render` method and it will try to process the template with the corresponding renderer and load the [helpers](helper.html). When rendering is complete, it will try to find whether a layout exists. If `layout` is `false` or if it doesn't exist, the result will be returned directly.\n","source":"api/themes.md","raw":"title: Themes\n---\n`hexo.theme` inherits from [Box](box.html), and also saves templates.\n\n## Get a View\n\n``` js\nhexo.theme.getView(path);\n```\n\n## Set a View\n\n``` js\nhexo.theme.setView(path, data);\n```\n\n## Remove a View\n\n``` js\nhexo.theme.removeView(path);\n```\n\n## View\n\nViews have two methods: `render` and `renderSync`. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss `render` here.\n\n``` js\nvar view = hexo.theme.getView('layout.swig');\n\nview.render({foo: 1, bar: 2}).then(function(result){\n  // ...\n});\n```\n\nYou can pass options to the `render` method and it will try to process the template with the corresponding renderer and load the [helpers](helper.html). When rendering is complete, it will try to find whether a layout exists. If `layout` is `false` or if it doesn't exist, the result will be returned directly.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"api/themes.html","comments":1,"layout":"page","_id":"ciy3szh7o000nz714qvqlbqqq","content":"<p><code>hexo.theme</code> inherits from <a href=\"box.html\">Box</a>, and also saves templates.</p>\n<h2 id=\"Get-a-View\"><a href=\"#Get-a-View\" class=\"headerlink\" title=\"Get a View\"></a>Get a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.getView(path);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-View\"><a href=\"#Set-a-View\" class=\"headerlink\" title=\"Set a View\"></a>Set a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.setView(path, data);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-View\"><a href=\"#Remove-a-View\" class=\"headerlink\" title=\"Remove a View\"></a>Remove a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.removeView(path);</div></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>Views have two methods: <code>render</code> and <code>renderSync</code>. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss <code>render</code> here.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</div><div class=\"line\"></div><div class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can pass options to the <code>render</code> method and it will try to process the template with the corresponding renderer and load the <a href=\"helper.html\">helpers</a>. When rendering is complete, it will try to find whether a layout exists. If <code>layout</code> is <code>false</code> or if it doesn’t exist, the result will be returned directly.</p>\n","excerpt":"","more":"<p><code>hexo.theme</code> inherits from <a href=\"box.html\">Box</a>, and also saves templates.</p>\n<h2 id=\"Get-a-View\"><a href=\"#Get-a-View\" class=\"headerlink\" title=\"Get a View\"></a>Get a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.getView(path);</div></pre></td></tr></table></figure>\n<h2 id=\"Set-a-View\"><a href=\"#Set-a-View\" class=\"headerlink\" title=\"Set a View\"></a>Set a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.setView(path, data);</div></pre></td></tr></table></figure>\n<h2 id=\"Remove-a-View\"><a href=\"#Remove-a-View\" class=\"headerlink\" title=\"Remove a View\"></a>Remove a View</h2><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.theme.removeView(path);</div></pre></td></tr></table></figure>\n<h2 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h2><p>Views have two methods: <code>render</code> and <code>renderSync</code>. These two methods are identical, but the former is asynchronous and the latter is synchronous. So for the sake of simplicity, we will only discuss <code>render</code> here.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> view = hexo.theme.getView(<span class=\"string\">'layout.swig'</span>);</div><div class=\"line\"></div><div class=\"line\">view.render(&#123;<span class=\"attr\">foo</span>: <span class=\"number\">1</span>, <span class=\"attr\">bar</span>: <span class=\"number\">2</span>&#125;).then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>You can pass options to the <code>render</code> method and it will try to process the template with the corresponding renderer and load the <a href=\"helper.html\">helpers</a>. When rendering is complete, it will try to find whether a layout exists. If <code>layout</code> is <code>false</code> or if it doesn’t exist, the result will be returned directly.</p>\n"},{"title":"Asset Folders","_content":"## Global Asset Folder\n\nAssets are non-post files in the `source` folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a `source/images` directory. Then, you can access them using something like `![](/images/image.jpg)`.\n\n## Post Asset Folder\n\nFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the `post_asset_folder` setting in `_config.yml` to true.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nWith asset folder management enabled, Hexo will create a folder every time you make a new post with the `hexo new [layout] <title>` command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.\n\n## Tag Plugins For Relative Path Referencing\n\nReferencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nFor example, with post asset folders enabled, if you place an image `example.jpg` into your asset folder, it will *not* appear on the index page if you reference it using a relative path with regular `![](/example.jpg)` markdown syntax (however, it will work as expected in the post itself).\n\nThe correct way to reference the image will thus be to use tag plugin syntax rather than markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\nThis way, the image will appear both inside the post and on index and archive pages.\n","source":"docs/asset-folders.md","raw":"title: Asset Folders\n---\n## Global Asset Folder\n\nAssets are non-post files in the `source` folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a `source/images` directory. Then, you can access them using something like `![](/images/image.jpg)`.\n\n## Post Asset Folder\n\nFor users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the `post_asset_folder` setting in `_config.yml` to true.\n\n``` yaml _config.yml\npost_asset_folder: true\n```\n\nWith asset folder management enabled, Hexo will create a folder every time you make a new post with the `hexo new [layout] <title>` command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.\n\n## Tag Plugins For Relative Path Referencing\n\nReferencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\nFor example, with post asset folders enabled, if you place an image `example.jpg` into your asset folder, it will *not* appear on the index page if you reference it using a relative path with regular `![](/example.jpg)` markdown syntax (however, it will work as expected in the post itself).\n\nThe correct way to reference the image will thus be to use tag plugin syntax rather than markdown:\n\n```\n{% asset_img example.jpg This is an example image %}\n{% asset_img \"spaced asset.jpg\" \"spaced title\" %}\n```\n\nThis way, the image will appear both inside the post and on index and archive pages.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/asset-folders.html","comments":1,"layout":"page","_id":"ciy3szh7q000oz714cxuwzvk8","content":"<h2 id=\"Global-Asset-Folder\"><a href=\"#Global-Asset-Folder\" class=\"headerlink\" title=\"Global Asset Folder\"></a>Global Asset Folder</h2><p>Assets are non-post files in the <code>source</code> folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a <code>source/images</code> directory. Then, you can access them using something like <code>![](/images/image.jpg)</code>.</p>\n<h2 id=\"Post-Asset-Folder\"><a href=\"#Post-Asset-Folder\" class=\"headerlink\" title=\"Post Asset Folder\"></a>Post Asset Folder</h2><p>For users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the <code>post_asset_folder</code> setting in <code>_config.yml</code> to true.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>With asset folder management enabled, Hexo will create a folder every time you make a new post with the <code>hexo new [layout] &lt;title&gt;</code> command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.</p>\n<h2 id=\"Tag-Plugins-For-Relative-Path-Referencing\"><a href=\"#Tag-Plugins-For-Relative-Path-Referencing\" class=\"headerlink\" title=\"Tag Plugins For Relative Path Referencing\"></a>Tag Plugins For Relative Path Referencing</h2><p>Referencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_path slug %&#125;</div><div class=\"line\">&#123;% asset_img slug [title] %&#125;</div><div class=\"line\">&#123;% asset_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<p>For example, with post asset folders enabled, if you place an image <code>example.jpg</code> into your asset folder, it will <em>not</em> appear on the index page if you reference it using a relative path with regular <code>![](/example.jpg)</code> markdown syntax (however, it will work as expected in the post itself).</p>\n<p>The correct way to reference the image will thus be to use tag plugin syntax rather than markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</div><div class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</div></pre></td></tr></table></figure>\n<p>This way, the image will appear both inside the post and on index and archive pages.</p>\n","excerpt":"","more":"<h2 id=\"Global-Asset-Folder\"><a href=\"#Global-Asset-Folder\" class=\"headerlink\" title=\"Global Asset Folder\"></a>Global Asset Folder</h2><p>Assets are non-post files in the <code>source</code> folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a <code>source/images</code> directory. Then, you can access them using something like <code>![](/images/image.jpg)</code>.</p>\n<h2 id=\"Post-Asset-Folder\"><a href=\"#Post-Asset-Folder\" class=\"headerlink\" title=\"Post Asset Folder\"></a>Post Asset Folder</h2><p>For users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the <code>post_asset_folder</code> setting in <code>_config.yml</code> to true.</p>\n<figure class=\"highlight yaml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">post_asset_folder:</span> <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>With asset folder management enabled, Hexo will create a folder every time you make a new post with the <code>hexo new [layout] &lt;title&gt;</code> command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.</p>\n<h2 id=\"Tag-Plugins-For-Relative-Path-Referencing\"><a href=\"#Tag-Plugins-For-Relative-Path-Referencing\" class=\"headerlink\" title=\"Tag Plugins For Relative Path Referencing\"></a>Tag Plugins For Relative Path Referencing</h2><p>Referencing images or other assets using normal markdown syntax and relative paths may cause them to display incorrectly on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new tag plugins were added to core. These enable you to reference your assets more easily in posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_path slug %&#125;</div><div class=\"line\">&#123;% asset_img slug [title] %&#125;</div><div class=\"line\">&#123;% asset_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<p>For example, with post asset folders enabled, if you place an image <code>example.jpg</code> into your asset folder, it will <em>not</em> appear on the index page if you reference it using a relative path with regular <code>![](/example.jpg)</code> markdown syntax (however, it will work as expected in the post itself).</p>\n<p>The correct way to reference the image will thus be to use tag plugin syntax rather than markdown:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_img example.jpg This is an example image %&#125;</div><div class=\"line\">&#123;% asset_img &quot;spaced asset.jpg&quot; &quot;spaced title&quot; %&#125;</div></pre></td></tr></table></figure>\n<p>This way, the image will appear both inside the post and on index and archive pages.</p>\n"},{"title":"Commands","_content":"## init\n\n``` bash\n$ hexo init [folder]\n```\n\nInitializes a website. If no `folder` is provided, Hexo will set up the website in the current directory.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nCreates a new article. If no `layout` is provided, Hexo will use the `default_layout` from [_config.yml](configuration.html). If the `title` contains spaces, surround it with quotation marks.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\nGenerates static files.\n\nOption | Description\n--- | ---\n`-d`, `--deploy` | Deploy after generation finishes\n`-w`, `--watch` | Watch file changes\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nPublishes a draft.\n\n## server\n\n``` bash\n$ hexo server\n```\n\nStarts a local server. By default, this is at `http://localhost:4000/`.\n\nOption | Description\n--- | ---\n`-p`, `--port` | Override default port\n`-s`, `--static` | Only serve static files\n`-l`, `--log` | Enable logger. Override logger format.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\nDeploys your website.\n\nOption | Description\n--- | ---\n`-g`, `--generate` | Generate before deployment\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nRenders files.\n\nOption | Description\n--- | ---\n`-o`, `--output` | Output destination\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Migrates](migration.html) content from other blog systems.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nCleans the cache file (`db.json`) and generated files (`public`).\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nLists all routes.\n\n## version\n\n``` bash\n$ hexo version\n```\n\nDisplays version information.\n\n## Options\n\n### Safe mode\n\n``` bash\n$ hexo --safe\n```\n\nDisables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.\n\n### Debug mode\n\n``` bash\n$ hexo --debug\n```\n\nLogs verbose messages to the terminal and to `debug.log`. Try this if you encounter any problems with Hexo. If you see errors, please [raise a GitHub issue](https://github.com/hexojs/hexo/issues/new).\n\n### Silent mode\n\n``` bash\n$ hexo --silent\n```\n\nSilences output to the terminal.\n\n### Customize config file path\n\n``` bash\n$ hexo --config custom.yml\n```\n\nUses a custom config file (instead of `_config.yml`). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single `_multiconfig.yml`.\n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### Display drafts\n\n``` bash\n$ hexo --draft\n```\n\nDisplays draft posts (stored in the `source/_drafts` folder).\n\n### Customize CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nCustomizes the path of current working directory.\n","source":"docs/commands.md","raw":"title: Commands\n---\n## init\n\n``` bash\n$ hexo init [folder]\n```\n\nInitializes a website. If no `folder` is provided, Hexo will set up the website in the current directory.\n\n## new\n\n``` bash\n$ hexo new [layout] <title>\n```\n\nCreates a new article. If no `layout` is provided, Hexo will use the `default_layout` from [_config.yml](configuration.html). If the `title` contains spaces, surround it with quotation marks.\n\n## generate\n\n``` bash\n$ hexo generate\n```\n\nGenerates static files.\n\nOption | Description\n--- | ---\n`-d`, `--deploy` | Deploy after generation finishes\n`-w`, `--watch` | Watch file changes\n\n## publish\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nPublishes a draft.\n\n## server\n\n``` bash\n$ hexo server\n```\n\nStarts a local server. By default, this is at `http://localhost:4000/`.\n\nOption | Description\n--- | ---\n`-p`, `--port` | Override default port\n`-s`, `--static` | Only serve static files\n`-l`, `--log` | Enable logger. Override logger format.\n\n## deploy\n\n``` bash\n$ hexo deploy\n```\n\nDeploys your website.\n\nOption | Description\n--- | ---\n`-g`, `--generate` | Generate before deployment\n\n## render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n\nRenders files.\n\nOption | Description\n--- | ---\n`-o`, `--output` | Output destination\n\n## migrate\n\n``` bash\n$ hexo migrate <type>\n```\n\n[Migrates](migration.html) content from other blog systems.\n\n## clean\n\n``` bash\n$ hexo clean\n```\n\nCleans the cache file (`db.json`) and generated files (`public`).\n\n## list\n\n``` bash\n$ hexo list <type>\n```\n\nLists all routes.\n\n## version\n\n``` bash\n$ hexo version\n```\n\nDisplays version information.\n\n## Options\n\n### Safe mode\n\n``` bash\n$ hexo --safe\n```\n\nDisables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.\n\n### Debug mode\n\n``` bash\n$ hexo --debug\n```\n\nLogs verbose messages to the terminal and to `debug.log`. Try this if you encounter any problems with Hexo. If you see errors, please [raise a GitHub issue](https://github.com/hexojs/hexo/issues/new).\n\n### Silent mode\n\n``` bash\n$ hexo --silent\n```\n\nSilences output to the terminal.\n\n### Customize config file path\n\n``` bash\n$ hexo --config custom.yml\n```\n\nUses a custom config file (instead of `_config.yml`). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single `_multiconfig.yml`.\n\n``` bash\n$ hexo --config custom.yml,custom2.json\n```\n\n### Display drafts\n\n``` bash\n$ hexo --draft\n```\n\nDisplays draft posts (stored in the `source/_drafts` folder).\n\n### Customize CWD\n\n``` bash\n$ hexo --cwd /path/to/cwd\n```\n\nCustomizes the path of current working directory.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/commands.html","comments":1,"layout":"page","_id":"ciy3szh7s000pz71474bubs84","content":"<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo init [folder]</div></pre></td></tr></table></figure>\n<p>Initializes a website. If no <code>folder</code> is provided, Hexo will set up the website in the current directory.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>Creates a new article. If no <code>layout</code> is provided, Hexo will use the <code>default_layout</code> from <a href=\"configuration.html\">_config.yml</a>. If the <code>title</code> contains spaces, surround it with quotation marks.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>Generates static files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Deploy after generation finishes</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Watch file changes</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<p>Publishes a draft.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>Starts a local server. By default, this is at <code>http://localhost:4000/</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Override default port</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Only serve static files</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Enable logger. Override logger format.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>Deploys your website.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Generate before deployment</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>Renders files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Output destination</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Migrates</a> content from other blog systems.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<p>Cleans the cache file (<code>db.json</code>) and generated files (<code>public</code>).</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</div></pre></td></tr></table></figure>\n<p>Lists all routes.</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo version</div></pre></td></tr></table></figure>\n<p>Displays version information.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"Safe-mode\"><a href=\"#Safe-mode\" class=\"headerlink\" title=\"Safe mode\"></a>Safe mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --safe</div></pre></td></tr></table></figure>\n<p>Disables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.</p>\n<h3 id=\"Debug-mode\"><a href=\"#Debug-mode\" class=\"headerlink\" title=\"Debug mode\"></a>Debug mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --debug</div></pre></td></tr></table></figure>\n<p>Logs verbose messages to the terminal and to <code>debug.log</code>. Try this if you encounter any problems with Hexo. If you see errors, please <a href=\"https://github.com/hexojs/hexo/issues/new\" target=\"_blank\" rel=\"external\">raise a GitHub issue</a>.</p>\n<h3 id=\"Silent-mode\"><a href=\"#Silent-mode\" class=\"headerlink\" title=\"Silent mode\"></a>Silent mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --silent</div></pre></td></tr></table></figure>\n<p>Silences output to the terminal.</p>\n<h3 id=\"Customize-config-file-path\"><a href=\"#Customize-config-file-path\" class=\"headerlink\" title=\"Customize config file path\"></a>Customize config file path</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --config custom.yml</div></pre></td></tr></table></figure>\n<p>Uses a custom config file (instead of <code>_config.yml</code>). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single <code>_multiconfig.yml</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --config custom.yml,custom2.json</div></pre></td></tr></table></figure>\n<h3 id=\"Display-drafts\"><a href=\"#Display-drafts\" class=\"headerlink\" title=\"Display drafts\"></a>Display drafts</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --draft</div></pre></td></tr></table></figure>\n<p>Displays draft posts (stored in the <code>source/_drafts</code> folder).</p>\n<h3 id=\"Customize-CWD\"><a href=\"#Customize-CWD\" class=\"headerlink\" title=\"Customize CWD\"></a>Customize CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --cwd /path/to/cwd</div></pre></td></tr></table></figure>\n<p>Customizes the path of current working directory.</p>\n","excerpt":"","more":"<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo init [folder]</div></pre></td></tr></table></figure>\n<p>Initializes a website. If no <code>folder</code> is provided, Hexo will set up the website in the current directory.</p>\n<h2 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>Creates a new article. If no <code>layout</code> is provided, Hexo will use the <code>default_layout</code> from <a href=\"configuration.html\">_config.yml</a>. If the <code>title</code> contains spaces, surround it with quotation marks.</p>\n<h2 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>Generates static files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-d</code>, <code>--deploy</code></td>\n<td>Deploy after generation finishes</td>\n</tr>\n<tr>\n<td><code>-w</code>, <code>--watch</code></td>\n<td>Watch file changes</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<p>Publishes a draft.</p>\n<h2 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>Starts a local server. By default, this is at <code>http://localhost:4000/</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-p</code>, <code>--port</code></td>\n<td>Override default port</td>\n</tr>\n<tr>\n<td><code>-s</code>, <code>--static</code></td>\n<td>Only serve static files</td>\n</tr>\n<tr>\n<td><code>-l</code>, <code>--log</code></td>\n<td>Enable logger. Override logger format.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>Deploys your website.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-g</code>, <code>--generate</code></td>\n<td>Generate before deployment</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</div></pre></td></tr></table></figure>\n<p>Renders files.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>-o</code>, <code>--output</code></td>\n<td>Output destination</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"migration.html\">Migrates</a> content from other blog systems.</p>\n<h2 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<p>Cleans the cache file (<code>db.json</code>) and generated files (<code>public</code>).</p>\n<h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo list &lt;<span class=\"built_in\">type</span>&gt;</div></pre></td></tr></table></figure>\n<p>Lists all routes.</p>\n<h2 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo version</div></pre></td></tr></table></figure>\n<p>Displays version information.</p>\n<h2 id=\"Options\"><a href=\"#Options\" class=\"headerlink\" title=\"Options\"></a>Options</h2><h3 id=\"Safe-mode\"><a href=\"#Safe-mode\" class=\"headerlink\" title=\"Safe mode\"></a>Safe mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --safe</div></pre></td></tr></table></figure>\n<p>Disables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.</p>\n<h3 id=\"Debug-mode\"><a href=\"#Debug-mode\" class=\"headerlink\" title=\"Debug mode\"></a>Debug mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --debug</div></pre></td></tr></table></figure>\n<p>Logs verbose messages to the terminal and to <code>debug.log</code>. Try this if you encounter any problems with Hexo. If you see errors, please <a href=\"https://github.com/hexojs/hexo/issues/new\">raise a GitHub issue</a>.</p>\n<h3 id=\"Silent-mode\"><a href=\"#Silent-mode\" class=\"headerlink\" title=\"Silent mode\"></a>Silent mode</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --silent</div></pre></td></tr></table></figure>\n<p>Silences output to the terminal.</p>\n<h3 id=\"Customize-config-file-path\"><a href=\"#Customize-config-file-path\" class=\"headerlink\" title=\"Customize config file path\"></a>Customize config file path</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --config custom.yml</div></pre></td></tr></table></figure>\n<p>Uses a custom config file (instead of <code>_config.yml</code>). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single <code>_multiconfig.yml</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --config custom.yml,custom2.json</div></pre></td></tr></table></figure>\n<h3 id=\"Display-drafts\"><a href=\"#Display-drafts\" class=\"headerlink\" title=\"Display drafts\"></a>Display drafts</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --draft</div></pre></td></tr></table></figure>\n<p>Displays draft posts (stored in the <code>source/_drafts</code> folder).</p>\n<h3 id=\"Customize-CWD\"><a href=\"#Customize-CWD\" class=\"headerlink\" title=\"Customize CWD\"></a>Customize CWD</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo --cwd /path/to/cwd</div></pre></td></tr></table></figure>\n<p>Customizes the path of current working directory.</p>\n"},{"title":"Configuration","_content":"You can modify site settings in `_config.yml` or in an [alternate config file](#Using-an-Alternate-Config).\n\n### Site\n\nSetting | Description\n--- | ---\n`title` | The title of your website\n`subtitle` | The subtitle of your website\n`description` | The description of your website\n`author` | Your name\n`language` | The language of your website. Use a [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Default is `en`.\n`timezone` | The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Some examples are `America/New_York`, `Japan`, and `UTC`.\n\n### URL\n\nSetting | Description | Default\n--- | --- | ---\n`url` | The URL of your website |\n`root` | The root directory of your website |\n`permalink` | The [permalink](permalinks.html) format of articles | `:year/:month/:day/:title/`\n`permalink_default` | Default values of each segment in permalink |\n\n{% note info Website in subdirectory %}\nIf your website is in a subdirectory (such as `http://example.org/blog`) set `url` to `http://example.org/blog` and set `root` to `/blog/`.\n{% endnote %}\n\n### Directory\n\nSetting | Description | Default\n--- | --- | ---\n`source_dir` | Source folder. Where your content is stored | `source`\n`public_dir` | Public folder. Where the static site will be generated | `public`\n`tag_dir` | Tag directory | `tags`\n`archive_dir` | Archive directory | `archives`\n`category_dir` | Category directory | `categories`\n`code_dir` | Include code directory | `downloads/code`\n`i18n_dir` | i18n directory | `:lang`\n`skip_render` | Paths not to be rendered. You can use [glob expressions](https://github.com/isaacs/minimatch) for path matching |\n\n### Writing\n\nSetting | Description | Default\n--- | --- | ---\n`new_post_name` | The filename format for new posts | `:title.md`\n`default_layout` | Default layout | `post`\n`titlecase` | Transform titles into title case? | `false`\n`external_link` | Open external links in new tab? | `true`\n`filename_case` | Transform filenames to `1` lower case; `2` upper case | `0`\n`render_drafts` | Display drafts? | `false`\n`post_asset_folder` | Enable the [Asset Folder](asset-folders.html)? | `false`\n`relative_link` | Make links relative to the root folder? | `false`\n`future` | Display future posts? | `true`\n`highlight` | Code block settings |\n\n### Category & Tag\n\nSetting | Description | Default\n--- | --- | ---\n`default_category` | Default category | `uncategorized`\n`category_map` | Category slugs |\n`tag_map` | Tag slugs |\n\n### Date / Time format\n\nHexo uses [Moment.js](http://momentjs.com/) to process dates.\n\nSetting | Description | Default\n--- | --- | ---\n`date_format` | Date format | `YYYY-MM-DD`\n`time_format` | Time format | `HH:mm:ss`\n\n### Pagination\n\nSetting | Description | Default\n--- | --- | ---\n`per_page` | The amount of the posts displayed on a single page. `0` disables pagination | `10`\n`pagination_dir` | Pagination directory | `page`\n\n### Extensions\n\nSetting | Description\n--- | ---\n`theme` | Theme name. `false` disables theming\n`deploy` | Deployment setting\n\n### Using an Alternate Config\n\nA custom config file path can be specified by adding the `--config` flag to your `hexo` commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.\n\n``` bash\n# use 'custom.yml' in place of '_config.yml'\n$ hexo server --config custom.yml\n\n# use 'custom.yml' & 'custom2.json', prioritizing 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\nUsing multiple files combines all the config files and saves the merged settings to `_multiconfig.yml`. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that **no spaces are allowed in the list**.\n\nFor instance, in the above example if `foo: bar` is in `custom.yml`, but `\"foo\": \"dinosaur\"` is in `custom2.json`, `_multiconfig.yml` will contain `foo: dinosaur`.\n","source":"docs/configuration.md","raw":"title: Configuration\n---\nYou can modify site settings in `_config.yml` or in an [alternate config file](#Using-an-Alternate-Config).\n\n### Site\n\nSetting | Description\n--- | ---\n`title` | The title of your website\n`subtitle` | The subtitle of your website\n`description` | The description of your website\n`author` | Your name\n`language` | The language of your website. Use a [2-lettter ISO-639-1 code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes). Default is `en`.\n`timezone` | The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). Some examples are `America/New_York`, `Japan`, and `UTC`.\n\n### URL\n\nSetting | Description | Default\n--- | --- | ---\n`url` | The URL of your website |\n`root` | The root directory of your website |\n`permalink` | The [permalink](permalinks.html) format of articles | `:year/:month/:day/:title/`\n`permalink_default` | Default values of each segment in permalink |\n\n{% note info Website in subdirectory %}\nIf your website is in a subdirectory (such as `http://example.org/blog`) set `url` to `http://example.org/blog` and set `root` to `/blog/`.\n{% endnote %}\n\n### Directory\n\nSetting | Description | Default\n--- | --- | ---\n`source_dir` | Source folder. Where your content is stored | `source`\n`public_dir` | Public folder. Where the static site will be generated | `public`\n`tag_dir` | Tag directory | `tags`\n`archive_dir` | Archive directory | `archives`\n`category_dir` | Category directory | `categories`\n`code_dir` | Include code directory | `downloads/code`\n`i18n_dir` | i18n directory | `:lang`\n`skip_render` | Paths not to be rendered. You can use [glob expressions](https://github.com/isaacs/minimatch) for path matching |\n\n### Writing\n\nSetting | Description | Default\n--- | --- | ---\n`new_post_name` | The filename format for new posts | `:title.md`\n`default_layout` | Default layout | `post`\n`titlecase` | Transform titles into title case? | `false`\n`external_link` | Open external links in new tab? | `true`\n`filename_case` | Transform filenames to `1` lower case; `2` upper case | `0`\n`render_drafts` | Display drafts? | `false`\n`post_asset_folder` | Enable the [Asset Folder](asset-folders.html)? | `false`\n`relative_link` | Make links relative to the root folder? | `false`\n`future` | Display future posts? | `true`\n`highlight` | Code block settings |\n\n### Category & Tag\n\nSetting | Description | Default\n--- | --- | ---\n`default_category` | Default category | `uncategorized`\n`category_map` | Category slugs |\n`tag_map` | Tag slugs |\n\n### Date / Time format\n\nHexo uses [Moment.js](http://momentjs.com/) to process dates.\n\nSetting | Description | Default\n--- | --- | ---\n`date_format` | Date format | `YYYY-MM-DD`\n`time_format` | Time format | `HH:mm:ss`\n\n### Pagination\n\nSetting | Description | Default\n--- | --- | ---\n`per_page` | The amount of the posts displayed on a single page. `0` disables pagination | `10`\n`pagination_dir` | Pagination directory | `page`\n\n### Extensions\n\nSetting | Description\n--- | ---\n`theme` | Theme name. `false` disables theming\n`deploy` | Deployment setting\n\n### Using an Alternate Config\n\nA custom config file path can be specified by adding the `--config` flag to your `hexo` commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.\n\n``` bash\n# use 'custom.yml' in place of '_config.yml'\n$ hexo server --config custom.yml\n\n# use 'custom.yml' & 'custom2.json', prioritizing 'custom2.json'\n$ hexo server --config custom.yml,custom2.json\n```\n\nUsing multiple files combines all the config files and saves the merged settings to `_multiconfig.yml`. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that **no spaces are allowed in the list**.\n\nFor instance, in the above example if `foo: bar` is in `custom.yml`, but `\"foo\": \"dinosaur\"` is in `custom2.json`, `_multiconfig.yml` will contain `foo: dinosaur`.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/configuration.html","comments":1,"layout":"page","_id":"ciy3szh7t000qz714ubemqndo","content":"<p>You can modify site settings in <code>_config.yml</code> or in an <a href=\"#Using-an-Alternate-Config\">alternate config file</a>.</p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>The title of your website</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>The subtitle of your website</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>The description of your website</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Your name</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>The language of your website. Use a <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"_blank\" rel=\"external\">2-lettter ISO-639-1 code</a>. Default is <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" target=\"_blank\" rel=\"external\">here</a>. Some examples are <code>America/New_York</code>, <code>Japan</code>, and <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>The URL of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>The root directory of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>The <a href=\"permalinks.html\">permalink</a> format of articles</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_default</code></td>\n<td>Default values of each segment in permalink</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Website in subdirectory</strong><p>If your website is in a subdirectory (such as <code>http://example.org/blog</code>) set <code>url</code> to <code>http://example.org/blog</code> and set <code>root</code> to <code>/blog/</code>.</p>\n</blockquote>\n<h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Source folder. Where your content is stored</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Public folder. Where the static site will be generated</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Tag directory</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Archive directory</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Category directory</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code directory</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>i18n directory</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Paths not to be rendered. You can use <a href=\"https://github.com/isaacs/minimatch\" target=\"_blank\" rel=\"external\">glob expressions</a> for path matching</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Writing\"><a href=\"#Writing\" class=\"headerlink\" title=\"Writing\"></a>Writing</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>The filename format for new posts</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Default layout</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Transform titles into title case?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Open external links in new tab?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Transform filenames to <code>1</code> lower case; <code>2</code> upper case</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Display drafts?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Enable the <a href=\"asset-folders.html\">Asset Folder</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Make links relative to the root folder?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Display future posts?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Code block settings</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Category-amp-Tag\"><a href=\"#Category-amp-Tag\" class=\"headerlink\" title=\"Category &amp; Tag\"></a>Category &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Default category</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Category slugs</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Tag slugs</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Date-Time-format\"><a href=\"#Date-Time-format\" class=\"headerlink\" title=\"Date / Time format\"></a>Date / Time format</h3><p>Hexo uses <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> to process dates.</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Date format</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Time format</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>The amount of the posts displayed on a single page. <code>0</code> disables pagination</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Pagination directory</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Theme name. <code>false</code> disables theming</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Deployment setting</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Using-an-Alternate-Config\"><a href=\"#Using-an-Alternate-Config\" class=\"headerlink\" title=\"Using an Alternate Config\"></a>Using an Alternate Config</h3><p>A custom config file path can be specified by adding the <code>--config</code> flag to your <code>hexo</code> commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># use 'custom.yml' in place of '_config.yml'</span></div><div class=\"line\">$ hexo server --config custom.yml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom2.json'</span></div><div class=\"line\">$ hexo server --config custom.yml,custom2.json</div></pre></td></tr></table></figure>\n<p>Using multiple files combines all the config files and saves the merged settings to <code>_multiconfig.yml</code>. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that <strong>no spaces are allowed in the list</strong>.</p>\n<p>For instance, in the above example if <code>foo: bar</code> is in <code>custom.yml</code>, but <code>&quot;foo&quot;: &quot;dinosaur&quot;</code> is in <code>custom2.json</code>, <code>_multiconfig.yml</code> will contain <code>foo: dinosaur</code>.</p>\n","excerpt":"","more":"<p>You can modify site settings in <code>_config.yml</code> or in an <a href=\"#Using-an-Alternate-Config\">alternate config file</a>.</p>\n<h3 id=\"Site\"><a href=\"#Site\" class=\"headerlink\" title=\"Site\"></a>Site</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>The title of your website</td>\n</tr>\n<tr>\n<td><code>subtitle</code></td>\n<td>The subtitle of your website</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>The description of your website</td>\n</tr>\n<tr>\n<td><code>author</code></td>\n<td>Your name</td>\n</tr>\n<tr>\n<td><code>language</code></td>\n<td>The language of your website. Use a <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">2-lettter ISO-639-1 code</a>. Default is <code>en</code>.</td>\n</tr>\n<tr>\n<td><code>timezone</code></td>\n<td>The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">here</a>. Some examples are <code>America/New_York</code>, <code>Japan</code>, and <code>UTC</code>.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>url</code></td>\n<td>The URL of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>The root directory of your website</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>The <a href=\"permalinks.html\">permalink</a> format of articles</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td><code>permalink_default</code></td>\n<td>Default values of each segment in permalink</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note info\"><strong class=\"note-title\">Website in subdirectory</strong><p>If your website is in a subdirectory (such as <code>http://example.org/blog</code>) set <code>url</code> to <code>http://example.org/blog</code> and set <code>root</code> to <code>/blog/</code>.</p>\n</blockquote>\n<h3 id=\"Directory\"><a href=\"#Directory\" class=\"headerlink\" title=\"Directory\"></a>Directory</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>source_dir</code></td>\n<td>Source folder. Where your content is stored</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>public_dir</code></td>\n<td>Public folder. Where the static site will be generated</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td><code>tag_dir</code></td>\n<td>Tag directory</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td><code>archive_dir</code></td>\n<td>Archive directory</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td><code>category_dir</code></td>\n<td>Category directory</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td><code>code_dir</code></td>\n<td>Include code directory</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td><code>i18n_dir</code></td>\n<td>i18n directory</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td><code>skip_render</code></td>\n<td>Paths not to be rendered. You can use <a href=\"https://github.com/isaacs/minimatch\">glob expressions</a> for path matching</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Writing\"><a href=\"#Writing\" class=\"headerlink\" title=\"Writing\"></a>Writing</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>new_post_name</code></td>\n<td>The filename format for new posts</td>\n<td><code>:title.md</code></td>\n</tr>\n<tr>\n<td><code>default_layout</code></td>\n<td>Default layout</td>\n<td><code>post</code></td>\n</tr>\n<tr>\n<td><code>titlecase</code></td>\n<td>Transform titles into title case?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>external_link</code></td>\n<td>Open external links in new tab?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>filename_case</code></td>\n<td>Transform filenames to <code>1</code> lower case; <code>2</code> upper case</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td><code>render_drafts</code></td>\n<td>Display drafts?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>post_asset_folder</code></td>\n<td>Enable the <a href=\"asset-folders.html\">Asset Folder</a>?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>relative_link</code></td>\n<td>Make links relative to the root folder?</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>future</code></td>\n<td>Display future posts?</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>highlight</code></td>\n<td>Code block settings</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Category-amp-Tag\"><a href=\"#Category-amp-Tag\" class=\"headerlink\" title=\"Category &amp; Tag\"></a>Category &amp; Tag</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default_category</code></td>\n<td>Default category</td>\n<td><code>uncategorized</code></td>\n</tr>\n<tr>\n<td><code>category_map</code></td>\n<td>Category slugs</td>\n<td></td>\n</tr>\n<tr>\n<td><code>tag_map</code></td>\n<td>Tag slugs</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Date-Time-format\"><a href=\"#Date-Time-format\" class=\"headerlink\" title=\"Date / Time format\"></a>Date / Time format</h3><p>Hexo uses <a href=\"http://momentjs.com/\">Moment.js</a> to process dates.</p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>date_format</code></td>\n<td>Date format</td>\n<td><code>YYYY-MM-DD</code></td>\n</tr>\n<tr>\n<td><code>time_format</code></td>\n<td>Time format</td>\n<td><code>HH:mm:ss</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Pagination\"><a href=\"#Pagination\" class=\"headerlink\" title=\"Pagination\"></a>Pagination</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>per_page</code></td>\n<td>The amount of the posts displayed on a single page. <code>0</code> disables pagination</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>pagination_dir</code></td>\n<td>Pagination directory</td>\n<td><code>page</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Extensions\"><a href=\"#Extensions\" class=\"headerlink\" title=\"Extensions\"></a>Extensions</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>theme</code></td>\n<td>Theme name. <code>false</code> disables theming</td>\n</tr>\n<tr>\n<td><code>deploy</code></td>\n<td>Deployment setting</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Using-an-Alternate-Config\"><a href=\"#Using-an-Alternate-Config\" class=\"headerlink\" title=\"Using an Alternate Config\"></a>Using an Alternate Config</h3><p>A custom config file path can be specified by adding the <code>--config</code> flag to your <code>hexo</code> commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># use 'custom.yml' in place of '_config.yml'</span></div><div class=\"line\">$ hexo server --config custom.yml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom2.json'</span></div><div class=\"line\">$ hexo server --config custom.yml,custom2.json</div></pre></td></tr></table></figure>\n<p>Using multiple files combines all the config files and saves the merged settings to <code>_multiconfig.yml</code>. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that <strong>no spaces are allowed in the list</strong>.</p>\n<p>For instance, in the above example if <code>foo: bar</code> is in <code>custom.yml</code>, but <code>&quot;foo&quot;: &quot;dinosaur&quot;</code> is in <code>custom2.json</code>, <code>_multiconfig.yml</code> will contain <code>foo: dinosaur</code>.</p>\n"},{"title":"Contributing","_content":"## Development\n\nWe welcome you to join the development of Hexo. This document will help you through the process.\n\n### Before You Start\n\nPlease follow the coding style:\n\n- Follow [Google JavaScript Style Guide](https://google.github.io/styleguide/javascriptguide.xml).\n- Use soft-tabs with a two space indent.\n- Don't put commas first.\n\n### Workflow\n\n1. Fork [hexojs/hexo].\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. Create a feature branch.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. Start hacking.\n5. Push the branch:\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. Create a pull request and describe the change.\n\n### Notice\n\n- Don't modify version number in `package.json`.\n- Your pull request will only get merged when tests passed. Don't forget to run tests before submission.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## Updating Documentation\n\nThe Hexo documentation is open source and you can find the source code on [hexojs/site].\n\n### Workflow\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Start editing the documentation. You can start the server for live previewing.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n### Translating\n\n1. Add a new language folder in `source` folder. (All lower case)\n2. Copy Markdown and template files in `source` folder to the new language folder.\n3. Add the new language to `source/_data/language.yml`.\n4. Copy `en.yml` in `themes/navy/languages` and rename to the language name (all lower case).\n\n## Reporting Issues\n\nWhen you encounter some problems when using Hexo, you can find the solutions in [Troubleshooting](troubleshooting.html) or ask me on [GitHub](https://github.com/hexojs/hexo/issues) or [Google Group](https://groups.google.com/group/hexo). If you can't find the answer, please report it on GitHub.\n\n1. Represent the problem in [debug mode](commands.html#Debug_mode).\n2. Run `hexo version` and check the version info.    \n3. Post both debug message and version info on GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n","source":"docs/contributing.md","raw":"title: Contributing\n---\n## Development\n\nWe welcome you to join the development of Hexo. This document will help you through the process.\n\n### Before You Start\n\nPlease follow the coding style:\n\n- Follow [Google JavaScript Style Guide](https://google.github.io/styleguide/javascriptguide.xml).\n- Use soft-tabs with a two space indent.\n- Don't put commas first.\n\n### Workflow\n\n1. Fork [hexojs/hexo].\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/hexo.git\n    $ cd hexo\n    $ npm install\n    $ git submodule update --init\n    {% endcode %}\n\n3. Create a feature branch.\n\n    {% code %}\n    $ git checkout -b new_feature\n    {% endcode %}\n\n4. Start hacking.\n5. Push the branch:\n\n    {% code %}\n    $ git push origin new_feature\n    {% endcode %}\n\n6. Create a pull request and describe the change.\n\n### Notice\n\n- Don't modify version number in `package.json`.\n- Your pull request will only get merged when tests passed. Don't forget to run tests before submission.\n\n    {% code %}\n    $ npm test\n    {% endcode %}\n\n## Updating Documentation\n\nThe Hexo documentation is open source and you can find the source code on [hexojs/site].\n\n### Workflow\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Start editing the documentation. You can start the server for live previewing.\n\n    {% code %}\n    $ hexo server\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n### Translating\n\n1. Add a new language folder in `source` folder. (All lower case)\n2. Copy Markdown and template files in `source` folder to the new language folder.\n3. Add the new language to `source/_data/language.yml`.\n4. Copy `en.yml` in `themes/navy/languages` and rename to the language name (all lower case).\n\n## Reporting Issues\n\nWhen you encounter some problems when using Hexo, you can find the solutions in [Troubleshooting](troubleshooting.html) or ask me on [GitHub](https://github.com/hexojs/hexo/issues) or [Google Group](https://groups.google.com/group/hexo). If you can't find the answer, please report it on GitHub.\n\n1. Represent the problem in [debug mode](commands.html#Debug_mode).\n2. Run `hexo version` and check the version info.    \n3. Post both debug message and version info on GitHub.\n\n[hexojs/hexo]: https://github.com/hexojs/hexo\n[hexojs/site]: https://github.com/hexojs/site\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/contributing.html","comments":1,"layout":"page","_id":"ciy3szh7w000rz714xkmjgs6w","content":"<h2 id=\"Development\"><a href=\"#Development\" class=\"headerlink\" title=\"Development\"></a>Development</h2><p>We welcome you to join the development of Hexo. This document will help you through the process.</p>\n<h3 id=\"Before-You-Start\"><a href=\"#Before-You-Start\" class=\"headerlink\" title=\"Before You Start\"></a>Before You Start</h3><p>Please follow the coding style:</p>\n<ul>\n<li>Follow <a href=\"https://google.github.io/styleguide/javascriptguide.xml\" target=\"_blank\" rel=\"external\">Google JavaScript Style Guide</a>.</li>\n<li>Use soft-tabs with a two space indent.</li>\n<li>Don’t put commas first.</li>\n</ul>\n<h3 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"external\">hexojs/hexo</a>.</li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</div><div class=\"line\">$ cd hexo</div><div class=\"line\">$ npm install</div><div class=\"line\">$ git submodule update --init</div></pre></td></tr></table></figure>\n</li>\n<li><p>Create a feature branch.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git checkout -b new_feature</div></pre></td></tr></table></figure>\n</li>\n<li><p>Start hacking.</p>\n</li>\n<li><p>Push the branch:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git push origin new_feature</div></pre></td></tr></table></figure>\n</li>\n<li><p>Create a pull request and describe the change.</p>\n</li>\n</ol>\n<h3 id=\"Notice\"><a href=\"#Notice\" class=\"headerlink\" title=\"Notice\"></a>Notice</h3><ul>\n<li>Don’t modify version number in <code>package.json</code>.</li>\n<li><p>Your pull request will only get merged when tests passed. Don’t forget to run tests before submission.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm test</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Updating-Documentation\"><a href=\"#Updating-Documentation\" class=\"headerlink\" title=\"Updating Documentation\"></a>Updating Documentation</h2><p>The Hexo documentation is open source and you can find the source code on <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"external\">hexojs/site</a>.</p>\n<h3 id=\"Workflow-1\"><a href=\"#Workflow-1\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"external\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Start editing the documentation. You can start the server for live previewing.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n<h3 id=\"Translating\"><a href=\"#Translating\" class=\"headerlink\" title=\"Translating\"></a>Translating</h3><ol>\n<li>Add a new language folder in <code>source</code> folder. (All lower case)</li>\n<li>Copy Markdown and template files in <code>source</code> folder to the new language folder.</li>\n<li>Add the new language to <code>source/_data/language.yml</code>.</li>\n<li>Copy <code>en.yml</code> in <code>themes/navy/languages</code> and rename to the language name (all lower case).</li>\n</ol>\n<h2 id=\"Reporting-Issues\"><a href=\"#Reporting-Issues\" class=\"headerlink\" title=\"Reporting Issues\"></a>Reporting Issues</h2><p>When you encounter some problems when using Hexo, you can find the solutions in <a href=\"troubleshooting.html\">Troubleshooting</a> or ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a> or <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"external\">Google Group</a>. If you can’t find the answer, please report it on GitHub.</p>\n<ol>\n<li>Represent the problem in <a href=\"commands.html#Debug_mode\">debug mode</a>.</li>\n<li>Run <code>hexo version</code> and check the version info.    </li>\n<li>Post both debug message and version info on GitHub.</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"Development\"><a href=\"#Development\" class=\"headerlink\" title=\"Development\"></a>Development</h2><p>We welcome you to join the development of Hexo. This document will help you through the process.</p>\n<h3 id=\"Before-You-Start\"><a href=\"#Before-You-Start\" class=\"headerlink\" title=\"Before You Start\"></a>Before You Start</h3><p>Please follow the coding style:</p>\n<ul>\n<li>Follow <a href=\"https://google.github.io/styleguide/javascriptguide.xml\">Google JavaScript Style Guide</a>.</li>\n<li>Use soft-tabs with a two space indent.</li>\n<li>Don’t put commas first.</li>\n</ul>\n<h3 id=\"Workflow\"><a href=\"#Workflow\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/hexo\">hexojs/hexo</a>.</li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/hexo.git</div><div class=\"line\">$ cd hexo</div><div class=\"line\">$ npm install</div><div class=\"line\">$ git submodule update --init</div></pre></td></tr></table></figure>\n</li>\n<li><p>Create a feature branch.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git checkout -b new_feature</div></pre></td></tr></table></figure>\n</li>\n<li><p>Start hacking.</p>\n</li>\n<li><p>Push the branch:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git push origin new_feature</div></pre></td></tr></table></figure>\n</li>\n<li><p>Create a pull request and describe the change.</p>\n</li>\n</ol>\n<h3 id=\"Notice\"><a href=\"#Notice\" class=\"headerlink\" title=\"Notice\"></a>Notice</h3><ul>\n<li>Don’t modify version number in <code>package.json</code>.</li>\n<li><p>Your pull request will only get merged when tests passed. Don’t forget to run tests before submission.</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm test</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Updating-Documentation\"><a href=\"#Updating-Documentation\" class=\"headerlink\" title=\"Updating Documentation\"></a>Updating Documentation</h2><p>The Hexo documentation is open source and you can find the source code on <a href=\"https://github.com/hexojs/site\">hexojs/site</a>.</p>\n<h3 id=\"Workflow-1\"><a href=\"#Workflow-1\" class=\"headerlink\" title=\"Workflow\"></a>Workflow</h3><ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Start editing the documentation. You can start the server for live previewing.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n<h3 id=\"Translating\"><a href=\"#Translating\" class=\"headerlink\" title=\"Translating\"></a>Translating</h3><ol>\n<li>Add a new language folder in <code>source</code> folder. (All lower case)</li>\n<li>Copy Markdown and template files in <code>source</code> folder to the new language folder.</li>\n<li>Add the new language to <code>source/_data/language.yml</code>.</li>\n<li>Copy <code>en.yml</code> in <code>themes/navy/languages</code> and rename to the language name (all lower case).</li>\n</ol>\n<h2 id=\"Reporting-Issues\"><a href=\"#Reporting-Issues\" class=\"headerlink\" title=\"Reporting Issues\"></a>Reporting Issues</h2><p>When you encounter some problems when using Hexo, you can find the solutions in <a href=\"troubleshooting.html\">Troubleshooting</a> or ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> or <a href=\"https://groups.google.com/group/hexo\">Google Group</a>. If you can’t find the answer, please report it on GitHub.</p>\n<ol>\n<li>Represent the problem in <a href=\"commands.html#Debug_mode\">debug mode</a>.</li>\n<li>Run <code>hexo version</code> and check the version info.    </li>\n<li>Post both debug message and version info on GitHub.</li>\n</ol>\n"},{"title":"Data Files","_content":"Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new **Data files**. This feature loads YAML or JSON files in `source/_data` folder so you can use them in your site.\n\nFor example, add `menu.yml` in `source/_data` folder.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nAnd you can use them in templates:\n\n```\n{% for link in site.data.menu %}\n  <a href=\"{{ link }}\">{{ loop.key }}</a>\n{% endfor %}\n```\n","source":"docs/data-files.md","raw":"title: Data Files\n---\nSometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new **Data files**. This feature loads YAML or JSON files in `source/_data` folder so you can use them in your site.\n\nFor example, add `menu.yml` in `source/_data` folder.\n\n``` yaml\nHome: /\nGallery: /gallery/\nArchives: /archives/\n```\n\nAnd you can use them in templates:\n\n```\n{% for link in site.data.menu %}\n  <a href=\"{{ link }}\">{{ loop.key }}</a>\n{% endfor %}\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/data-files.html","comments":1,"layout":"page","_id":"ciy3szh7y000sz714ll28j9fm","content":"<p>Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new <strong>Data files</strong>. This feature loads YAML or JSON files in <code>source/_data</code> folder so you can use them in your site.</p>\n<p>For example, add <code>menu.yml</code> in <code>source/_data</code> folder.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">Home:</span> /</div><div class=\"line\"><span class=\"attr\">Gallery:</span> /gallery/</div><div class=\"line\"><span class=\"attr\">Archives:</span> /archives/</div></pre></td></tr></table></figure>\n<p>And you can use them in templates:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% for link in site.data.menu %&#125;</div><div class=\"line\">  &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot;&gt;&#123;&#123; loop.key &#125;&#125;&lt;/a&gt;</div><div class=\"line\">&#123;% endfor %&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new <strong>Data files</strong>. This feature loads YAML or JSON files in <code>source/_data</code> folder so you can use them in your site.</p>\n<p>For example, add <code>menu.yml</code> in <code>source/_data</code> folder.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">Home:</span> /</div><div class=\"line\"><span class=\"attr\">Gallery:</span> /gallery/</div><div class=\"line\"><span class=\"attr\">Archives:</span> /archives/</div></pre></td></tr></table></figure>\n<p>And you can use them in templates:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% for link in site.data.menu %&#125;</div><div class=\"line\">  &lt;a href=&quot;&#123;&#123; link &#125;&#125;&quot;&gt;&#123;&#123; loop.key &#125;&#125;&lt;/a&gt;</div><div class=\"line\">&#123;% endfor %&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Deployment","_content":"Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.\n\n``` bash\n$ hexo deploy\n```\n\nBefore your first deployment, you will have to modify some settings in `_config.yml`. A valid deployment setting must have a `type` field. For example:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nYou can use multiple deployers. Hexo will execute each deployer in order.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\nInstall [hexo-deployer-git].\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | GitHub/Bitbucket/Coding/GitLab repository URL\n`branch` | Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n\n## Heroku\n\nInstall [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo`, `repository` | Heroku repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\nInstall [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`root` | Root directory of remote host |\n`port` | Port | 22\n`delete` | Delete old files on remote host | true\n`verbose` | Display verbose messages | true\n`ignore_errors` | Ignore errors | false\n\n## OpenShift\n\nInstall [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | OpenShift repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nInstall [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remote` | Root directory of remote host | `/`\n`port` | Port | 21\n`ignore` | Ignore the files on either host or remote |\n`connections` | Connections number | 1\n`verbose` | Display verbose messages | false\n\n## Other Methods\n\nAll generated files are saved in the `public` folder. You can copy them to wherever you like.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n","source":"docs/deployment.md","raw":"title: Deployment\n---\nHexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.\n\n``` bash\n$ hexo deploy\n```\n\nBefore your first deployment, you will have to modify some settings in `_config.yml`. A valid deployment setting must have a `type` field. For example:\n\n``` yaml\ndeploy:\n  type: git\n```\n\nYou can use multiple deployers. Hexo will execute each deployer in order.\n\n``` yaml\ndeploy:\n- type: git\n  repo:\n- type: heroku\n  repo:\n```\n\n## Git\n\nInstall [hexo-deployer-git].\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | GitHub/Bitbucket/Coding/GitLab repository URL\n`branch` | Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n\n## Heroku\n\nInstall [hexo-deployer-heroku].\n\n``` bash\n$ npm install hexo-deployer-heroku --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: heroku\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo`, `repository` | Heroku repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## Rsync\n\nInstall [hexo-deployer-rsync].\n\n``` bash\n$ npm install hexo-deployer-rsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: rsync\n  host: <host>\n  user: <user>\n  root: <root>\n  port: [port]\n  delete: [true|false]\n  verbose: [true|false]\n  ignore_errors: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`root` | Root directory of remote host |\n`port` | Port | 22\n`delete` | Delete old files on remote host | true\n`verbose` | Display verbose messages | true\n`ignore_errors` | Ignore errors | false\n\n## OpenShift\n\nInstall [hexo-deployer-openshift].\n\n``` bash\n$ npm install hexo-deployer-openshift --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: openshift\n  repo: <repository url>\n  message: [message]\n```\n\nOption | Description\n--- | ---\n`repo` | OpenShift repository URL\n`message` | Customize commit message (Default to `Site updated: {% raw %}{{ now('YYYY-MM-DD HH:mm:ss') }}{% endraw %}`)\n\n## FTPSync\n\nInstall [hexo-deployer-ftpsync].\n\n``` bash\n$ npm install hexo-deployer-ftpsync --save\n```\n\nEdit settings.\n\n``` yaml\ndeploy:\n  type: ftpsync\n  host: <host>\n  user: <user>\n  pass: <password>\n  remote: [remote]\n  port: [port]\n  ignore: [ignore]\n  connections: [connections]\n  verbose: [true|false]\n```\n\nOption | Description | Default\n--- | --- | ---\n`host` | Address of remote host |\n`user` | Username |\n`pass` | Password |\n`remote` | Root directory of remote host | `/`\n`port` | Port | 21\n`ignore` | Ignore the files on either host or remote |\n`connections` | Connections number | 1\n`verbose` | Display verbose messages | false\n\n## Other Methods\n\nAll generated files are saved in the `public` folder. You can copy them to wherever you like.\n\n[hexo-deployer-git]: https://github.com/hexojs/hexo-deployer-git\n[hexo-deployer-heroku]: https://github.com/hexojs/hexo-deployer-heroku\n[hexo-deployer-rsync]: https://github.com/hexojs/hexo-deployer-rsync\n[hexo-deployer-openshift]: https://github.com/hexojs/hexo-deployer-openshift\n[hexo-deployer-ftpsync]: https://github.com/hexojs/hexo-deployer-ftpsync\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/deployment.html","comments":1,"layout":"page","_id":"ciy3szh80000tz7143tt55l7y","content":"<p>Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>Before your first deployment, you will have to modify some settings in <code>_config.yml</code>. A valid deployment setting must have a <code>type</code> field. For example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> git</div></pre></td></tr></table></figure>\n<p>You can use multiple deployers. Hexo will execute each deployer in order.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> heroku</div><div class=\"line\"><span class=\"attr\">  repo:</span></div></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-git\" target=\"_blank\" rel=\"external\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  branch:</span> [branch]</div><div class=\"line\"><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>GitHub/Bitbucket/Coding/GitLab repository URL</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-heroku\" target=\"_blank\" rel=\"external\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-heroku --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> heroku</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Heroku repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-rsync\" target=\"_blank\" rel=\"external\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-rsync --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> rsync</div><div class=\"line\"><span class=\"attr\">  host:</span> &lt;host<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  user:</span> &lt;user<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  root:</span> &lt;root<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  port:</span> [port]</div><div class=\"line\"><span class=\"attr\">  delete:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div><div class=\"line\"><span class=\"attr\">  verbose:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div><div class=\"line\"><span class=\"attr\">  ignore_errors:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Root directory of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Delete old files on remote host</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Ignore errors</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-openshift\" target=\"_blank\" rel=\"external\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-openshift --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> openshift</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\" target=\"_blank\" rel=\"external\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-ftpsync --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> ftpsync</div><div class=\"line\"><span class=\"attr\">  host:</span> &lt;host<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  user:</span> &lt;user<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  pass:</span> &lt;password<span class=\"string\">&gt;</span></div><div class=\"line\"><span class=\"attr\">  remote:</span> [remote]</div><div class=\"line\"><span class=\"attr\">  port:</span> [port]</div><div class=\"line\"><span class=\"attr\">  ignore:</span> [ignore]</div><div class=\"line\"><span class=\"attr\">  connections:</span> [connections]</div><div class=\"line\"><span class=\"attr\">  verbose:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Ignore the files on either host or remote</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Connections number</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Other-Methods\"><a href=\"#Other-Methods\" class=\"headerlink\" title=\"Other Methods\"></a>Other Methods</h2><p>All generated files are saved in the <code>public</code> folder. You can copy them to wherever you like.</p>\n","excerpt":"","more":"<p>Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your servers.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>Before your first deployment, you will have to modify some settings in <code>_config.yml</code>. A valid deployment setting must have a <code>type</code> field. For example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> git</div></pre></td></tr></table></figure>\n<p>You can use multiple deployers. Hexo will execute each deployer in order.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span></div><div class=\"line\"><span class=\"attr\">- type:</span> heroku</div><div class=\"line\"><span class=\"attr\">  repo:</span></div></pre></td></tr></table></figure>\n<h2 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> git</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  branch:</span> [branch]</div><div class=\"line\"><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>GitHub/Bitbucket/Coding/GitLab repository URL</td>\n</tr>\n<tr>\n<td><code>branch</code></td>\n<td>Branch name. The deployer will detect the branch automatically if you are using GitHub or GitCafe.</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Heroku\"><a href=\"#Heroku\" class=\"headerlink\" title=\"Heroku\"></a>Heroku</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-heroku\">hexo-deployer-heroku</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-heroku --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> heroku</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code>, <code>repository</code></td>\n<td>Heroku repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Rsync\"><a href=\"#Rsync\" class=\"headerlink\" title=\"Rsync\"></a>Rsync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-rsync\">hexo-deployer-rsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-rsync --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> rsync</div><div class=\"line\"><span class=\"attr\">  host:</span> &lt;host<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  user:</span> &lt;user<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  root:</span> &lt;root<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  port:</span> [port]</div><div class=\"line\"><span class=\"attr\">  delete:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div><div class=\"line\"><span class=\"attr\">  verbose:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div><div class=\"line\"><span class=\"attr\">  ignore_errors:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>root</code></td>\n<td>Root directory of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>22</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>Delete old files on remote host</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>ignore_errors</code></td>\n<td>Ignore errors</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"OpenShift\"><a href=\"#OpenShift\" class=\"headerlink\" title=\"OpenShift\"></a>OpenShift</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-openshift\">hexo-deployer-openshift</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-openshift --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> openshift</div><div class=\"line\"><span class=\"attr\">  repo:</span> &lt;repository url<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  message:</span> [message]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>repo</code></td>\n<td>OpenShift repository URL</td>\n</tr>\n<tr>\n<td><code>message</code></td>\n<td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"FTPSync\"><a href=\"#FTPSync\" class=\"headerlink\" title=\"FTPSync\"></a>FTPSync</h2><p>Install <a href=\"https://github.com/hexojs/hexo-deployer-ftpsync\">hexo-deployer-ftpsync</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-ftpsync --save</div></pre></td></tr></table></figure>\n<p>Edit settings.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">deploy:</span></div><div class=\"line\"><span class=\"attr\">  type:</span> ftpsync</div><div class=\"line\"><span class=\"attr\">  host:</span> &lt;host<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  user:</span> &lt;user<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  pass:</span> &lt;password<span class=\"string\">&gt;</div><div class=\"line\"></span><span class=\"attr\">  remote:</span> [remote]</div><div class=\"line\"><span class=\"attr\">  port:</span> [port]</div><div class=\"line\"><span class=\"attr\">  ignore:</span> [ignore]</div><div class=\"line\"><span class=\"attr\">  connections:</span> [connections]</div><div class=\"line\"><span class=\"attr\">  verbose:</span> [<span class=\"literal\">true</span>|<span class=\"literal\">false</span>]</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>host</code></td>\n<td>Address of remote host</td>\n<td></td>\n</tr>\n<tr>\n<td><code>user</code></td>\n<td>Username</td>\n<td></td>\n</tr>\n<tr>\n<td><code>pass</code></td>\n<td>Password</td>\n<td></td>\n</tr>\n<tr>\n<td><code>remote</code></td>\n<td>Root directory of remote host</td>\n<td><code>/</code></td>\n</tr>\n<tr>\n<td><code>port</code></td>\n<td>Port</td>\n<td>21</td>\n</tr>\n<tr>\n<td><code>ignore</code></td>\n<td>Ignore the files on either host or remote</td>\n<td></td>\n</tr>\n<tr>\n<td><code>connections</code></td>\n<td>Connections number</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>verbose</code></td>\n<td>Display verbose messages</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Other-Methods\"><a href=\"#Other-Methods\" class=\"headerlink\" title=\"Other Methods\"></a>Other Methods</h2><p>All generated files are saved in the <code>public</code> folder. You can copy them to wherever you like.</p>\n"},{"title":"Front-matter","_content":"Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Settings & Their Default Values\n\nSetting | Description | Default\n--- | --- | ---\n`layout` | Layout |\n`title` | Title |\n`date` | Published date | File created date\n`updated` | Updated date | File updated date\n`comments` | Enables comment feature for the post | true\n`tags` | Tags (Not available for pages) |\n`categories` | Categories (Not available for pages) |\n`permalink` | Overrides the default permalink of the post |\n\n#### Categories & Tags\n\nOnly posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.\n\n**Example**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n","source":"docs/front-matter.md","raw":"title: Front-matter\n---\nFront-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.\n\n**YAML**\n``` yaml\ntitle: Hello World\ndate: 2013/7/13 20:46:25\n---\n```\n\n**JSON**\n``` json\n\"title\": \"Hello World\",\n\"date\": \"2013/7/13 20:46:25\"\n;;;\n```\n\n### Settings & Their Default Values\n\nSetting | Description | Default\n--- | --- | ---\n`layout` | Layout |\n`title` | Title |\n`date` | Published date | File created date\n`updated` | Updated date | File updated date\n`comments` | Enables comment feature for the post | true\n`tags` | Tags (Not available for pages) |\n`categories` | Categories (Not available for pages) |\n`permalink` | Overrides the default permalink of the post |\n\n#### Categories & Tags\n\nOnly posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.\n\n**Example**\n\n``` yaml\ncategories:\n- Sports\n- Baseball\ntags:\n- Injury\n- Fight\n- Shocking\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/front-matter.html","comments":1,"layout":"page","_id":"ciy3szh82000uz714c154wofl","content":"<p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> Hello World</div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span>/<span class=\"number\">7</span>/<span class=\"number\">13</span> <span class=\"number\">20</span>:<span class=\"number\">46</span>:<span class=\"number\">25</span></div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">\"title\": \"Hello World\",</div><div class=\"line\">\"date\": \"2013/7/13 20:46:25\"</div><div class=\"line\">;;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Settings-amp-Their-Default-Values\"><a href=\"#Settings-amp-Their-Default-Values\" class=\"headerlink\" title=\"Settings &amp; Their Default Values\"></a>Settings &amp; Their Default Values</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Published date</td>\n<td>File created date</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Updated date</td>\n<td>File updated date</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Enables comment feature for the post</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Tags (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Categories (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Overrides the default permalink of the post</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Categories-amp-Tags\"><a href=\"#Categories-amp-Tags\" class=\"headerlink\" title=\"Categories &amp; Tags\"></a>Categories &amp; Tags</h4><p>Only posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">categories:</span></div><div class=\"line\"><span class=\"bullet\">-</span> Sports</div><div class=\"line\"><span class=\"bullet\">-</span> Baseball</div><div class=\"line\"><span class=\"attr\">tags:</span></div><div class=\"line\"><span class=\"bullet\">-</span> Injury</div><div class=\"line\"><span class=\"bullet\">-</span> Fight</div><div class=\"line\"><span class=\"bullet\">-</span> Shocking</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.</p>\n<p><strong>YAML</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> Hello World</div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span>/<span class=\"number\">7</span>/<span class=\"number\">13</span> <span class=\"number\">20</span>:<span class=\"number\">46</span>:<span class=\"number\">25</span></div><div class=\"line\"><span class=\"meta\">---</span></div></pre></td></tr></table></figure></p>\n<p><strong>JSON</strong><br><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">\"title\": \"Hello World\",</div><div class=\"line\">\"date\": \"2013/7/13 20:46:25\"</div><div class=\"line\">;;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Settings-amp-Their-Default-Values\"><a href=\"#Settings-amp-Their-Default-Values\" class=\"headerlink\" title=\"Settings &amp; Their Default Values\"></a>Settings &amp; Their Default Values</h3><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n<td></td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>Published date</td>\n<td>File created date</td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td>Updated date</td>\n<td>File updated date</td>\n</tr>\n<tr>\n<td><code>comments</code></td>\n<td>Enables comment feature for the post</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td>Tags (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>categories</code></td>\n<td>Categories (Not available for pages)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>permalink</code></td>\n<td>Overrides the default permalink of the post</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Categories-amp-Tags\"><a href=\"#Categories-amp-Tags\" class=\"headerlink\" title=\"Categories &amp; Tags\"></a>Categories &amp; Tags</h4><p>Only posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.</p>\n<p><strong>Example</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">categories:</span></div><div class=\"line\"><span class=\"bullet\">-</span> Sports</div><div class=\"line\"><span class=\"bullet\">-</span> Baseball</div><div class=\"line\"><span class=\"attr\">tags:</span></div><div class=\"line\"><span class=\"bullet\">-</span> Injury</div><div class=\"line\"><span class=\"bullet\">-</span> Fight</div><div class=\"line\"><span class=\"bullet\">-</span> Shocking</div></pre></td></tr></table></figure>\n"},{"title":"Generating","_content":"Generating static files with Hexo is quite easy and fast.\n\n``` bash\n$ hexo generate\n```\n\n### Watch for File Changes\n\nHexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nTo deploy after generating, you can run one of the following commands. There is no difference between the two.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n","source":"docs/generating.md","raw":"title: Generating\n---\nGenerating static files with Hexo is quite easy and fast.\n\n``` bash\n$ hexo generate\n```\n\n### Watch for File Changes\n\nHexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.\n\n``` bash\n$ hexo generate --watch\n```\n\n### Deploy After Generating\n\nTo deploy after generating, you can run one of the following commands. There is no difference between the two.\n\n``` bash\n$ hexo generate --deploy\n$ hexo deploy --generate\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/generating.html","comments":1,"layout":"page","_id":"ciy3szh85000vz714grjeii1r","content":"<p>Generating static files with Hexo is quite easy and fast.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"Watch-for-File-Changes\"><a href=\"#Watch-for-File-Changes\" class=\"headerlink\" title=\"Watch for File Changes\"></a>Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h3 id=\"Deploy-After-Generating\"><a href=\"#Deploy-After-Generating\" class=\"headerlink\" title=\"Deploy After Generating\"></a>Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. There is no difference between the two.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate --deploy</div><div class=\"line\">$ hexo deploy --generate</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Generating static files with Hexo is quite easy and fast.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<h3 id=\"Watch-for-File-Changes\"><a href=\"#Watch-for-File-Changes\" class=\"headerlink\" title=\"Watch for File Changes\"></a>Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate --watch</div></pre></td></tr></table></figure>\n<h3 id=\"Deploy-After-Generating\"><a href=\"#Deploy-After-Generating\" class=\"headerlink\" title=\"Deploy After Generating\"></a>Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. There is no difference between the two.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate --deploy</div><div class=\"line\">$ hexo deploy --generate</div></pre></td></tr></table></figure>\n"},{"title":"Helpers","_content":"Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.\n\n## URL\n\n### url_for\n\nReturns a url with the root path prefixed. You should use this helper instead of `config.root + path` since Hexo 2.7.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nReturns the relative URL from `from` to `to`.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nInserts a Gravatar image.\nIf you don't specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**Examples:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nLoads CSS files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.css` extension after `path`, it will be added automatically.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nLoads JavaScript files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.js` extension after `path`, it will be added automatically.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nInserts a link.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`external` | Opens the link in a new tab | false\n`class` | Class name |\n`id` | ID |\n\n**Examples:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nInserts a mail link.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nOption | Description\n--- | ---\n`class` | Class name\n`id` | ID\n`subject` | Mail subject\n`cc` | CC\n`bcc` | BCC\n`body` | Mail content\n\n**Examples:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nInserts an image.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nOption | Description\n--- | ---\n`alt` | Alternative text of the image\n`class` | Class name\n`id` | ID\n`width` | Image width\n`height` | Image height\n\n### favicon_tag\n\nInserts a favicon.\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nInserts a feed link.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Feed title |\n`type` | Feed type | atom\n\n## Conditional Tags\n\n### is_current\n\nCheck whether `path` matches the URL of the current page. Use `strict` options to enable strict matching.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nCheck whether the current page is home page.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nCheck whether the current page is a post.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nCheck whether the current page is an archive page.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nCheck whether the current page is a yearly archive page.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nCheck whether the current page is a monthly archive page.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nCheck whether the current page is a category page.\nIf a string is given as parameter, check whether the current page match the given category.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nCheck whether the current page is a tag page.\nIf a string is given as parameter, check whether the current page match the given tag.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## String Manipulation\n\n### trim\n\nRemoves prefixing and trailing spaces of a string.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nSanitizes all HTML tags in a string.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nTransforms a string into proper title caps.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nRenders a string with Markdown.\n\n``` js\n<%- markdown(str) %>\n```\n\n**Examples:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nRenders a string.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nWraps text into lines no longer than `length`. `length` is 80 by default.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**Examples:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nTruncates text after certain `length`. Default is 30 characters.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**Examples:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Templates\n\n### partial\n\nLoads other template files. You can define local variables in `locals`.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`cache` | Cache contents (Use fragment cache) | `false`\n`only` | Strict local variables. Only use variables set in `locals` in templates. | `false`\n\n### fragment_cache\n\nCaches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**Examples:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Date & Time\n\n### date\n\nInserts formatted date. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format` setting by default.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nInserts date in XML format. `date` can be unix time, ISO string, date object, or [Moment.js] object.\n\n``` js\n<%- date_xml(date) %>\n```\n\n**Examples:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nInserts formatted time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `time_format` setting by default.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nInserts formatted date and time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format + time_format` setting by default.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] library.\n\n## List\n\n### list_categories\n\nInserts a list of all categories.\n\n``` js\n<%- list_categories([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each category | true\n`style` | Style to display the category list. `list` displays categories in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`depth` | Levels of categories to be displayed. `0` displays all categories and child categories; `-1` is similar to `0` but displayed in flat; `1` displays only top level categories. | 0\n`class` | Class name of category list. | category\n`transform` | The function that changes the display of category name. |\n`suffix` | Add a suffix to link. | None\n\n### list_tags\n\nInserts a list of all tags.\n\n``` js\n<%- list_tags([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each tag | true\n`style` | Style to display the tag list. `list` displays tags in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`class` | Class name of tag list. | tag\n`transform` | The function that changes the display of category name. |\n`amount` | The number of tags to display (0 = unlimited) | 0\n`suffix` | Add a suffix to link. | None\n\n### list_archives\n\nInserts a list of archives.\n\n``` js\n<%- list_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list.  | list\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n\n### list_posts\n\nInserts a list of posts.\n\n``` js\n<%- list_posts([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of posts | date\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`style` | Style to display the post list. `list` displays posts in an unordered list.  | list\n`separator` | Separator between posts. (Only works if `style` is not `list`) | ,\n`class` | Class name of post list. | post\n`amount` | The number of posts to display (0 = unlimited) | 6\n`transform` | The function that changes the display of post name. |\n\n### tagcloud\n\nInserts a tag cloud.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`min_font` | Minimal font size | 10\n`max_font` | Maximum font size | 20\n`unit` | Unit of font size | px\n`amount` | Total amount of tags | 40\n`orderby` | Order of tags | name\n`order` | Sort order. `1`, `sac` as ascending; `-1`, `desc` as descending | 1\n`color` | Colorizes the tag cloud | false\n`start_color` | Start color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n`end_color` | End color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n\n## Miscellaneous\n\n### paginator\n\nInserts a paginator.\n\n``` js\n<%- paginator(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`base` | Base URL | /\n`format` | URL format | page/%d/\n`total` | The number of pages | 1\n`current` | Current page number | 0\n`prev_text` | The link text of previous page. Works only if `prev_next` is set to true. | Prev\n`next_text` | The link text of next page. Works only if `prev_next` is set to true. | Next\n`space` | The space text | &hellp;\n`prev_next` | Display previous and next links | true\n`end_size` | The number of pages displayed on the start and the end side | 1\n`mid_size` | The number of pages displayed between current page, but not including current page | 2\n`show_all` | Display all pages. If this is set true, `end_size` and `mid_size` will not works. | false\n\n### search_form\n\nInserts a Google search form.\n\n``` js\n<%- search_form(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | The class name of form | search-form\n`text` | Search hint word | Search\n`button` | Display search button. The value can be a boolean or a string. When the value is a string, it'll be the text of the button. | false\n\n### number_format\n\nFormats a number.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`precision` | The precision of number. The value can be `false` or a nonnegative integer. | false\n`delimiter` | The thousands delimiter | ,\n`separator` | The separator between the fractional and integer digits. | .\n\n**Examples:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nInserts [Open Graph] data.\n\n``` js\n<%- open_graph([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Page title (`og:title`) | `page.title`\n`type` | Page type (`og:type`) | blog\n`url` | Page URL (`og:url`) | `url`\n`image` | Page cover (`og:image`) | First image in the content\n`site_name` | Site name (`og:site_name`) | `config.title`\n`description` | Page description (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Twitter card type (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter Site (`twitter:site`) |\n`google_plus` | Google+ profile link |\n`fb_admins` | Facebook admin ID |\n`fb_app_id` | Facebook App ID |\n\n### toc\n\nParses all heading tags (h1~h6) in the content and inserts a table of contents.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | Class name | toc\n`list_number` | Displays list number | true\n\n**Examples:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n","source":"docs/helpers.md","raw":"title: Helpers\n---\nHelpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.\n\n## URL\n\n### url_for\n\nReturns a url with the root path prefixed. You should use this helper instead of `config.root + path` since Hexo 2.7.\n\n``` js\n<%- url_for(path) %>\n```\n\n### relative_url\n\nReturns the relative URL from `from` to `to`.\n\n``` js\n<%- relative_url(from, to) %>\n```\n\n### gravatar\n\nInserts a Gravatar image.\nIf you don't specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.\n\n``` js\n<%- gravatar(email, [options]);\n```\n\n**Examples:**\n\n``` js\n<%- gravatar('a@abc.com') %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787\n\n<%- gravatar('a@abc.com', 40) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40\n\n<%- gravatar('a@abc.com' {s: 40, d: 'http://example.com/image.png'}) %>\n// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&d=http%3A%2F%2Fexample.com%2Fimage.png\n```\n\n## HTML Tags\n\n### css\n\nLoads CSS files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.css` extension after `path`, it will be added automatically.\n\n``` js\n<%- css(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- css('style.css') %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n\n<%- css(['style.css', 'screen.css']) %>\n// <link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\">\n// <link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\">\n```\n\n### js\n\nLoads JavaScript files. `path` can be an array or a string. If `path` isn't prefixed with `/` or any protocol, it'll get prefixed with the root URL. If you didn't add the `.js` extension after `path`, it will be added automatically.\n\n``` js\n<%- js(path, ...) %>\n```\n\n**Examples:**\n\n``` js\n<%- js('script.js') %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n\n<%- js(['script.js', 'gallery.js']) %>\n// <script type=\"text/javascript\" src=\"/script.js\"></script>\n// <script type=\"text/javascript\" src=\"/gallery.js\"></script>\n```\n\n### link_to\n\nInserts a link.\n\n``` js\n<%- link_to(path, [text], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`external` | Opens the link in a new tab | false\n`class` | Class name |\n`id` | ID |\n\n**Examples:**\n\n``` js\n<%- link_to('http://www.google.com') %>\n// <a href=\"http://www.google.com\" title=\"http://www.google.com\">http://www.google.com</a>\n\n<%- link_to('http://www.google.com', 'Google') %>\n// <a href=\"http://www.google.com\" title=\"Google\">Google</a>\n\n<%- link_to('http://www.google.com', 'Google', {external: true}) %>\n// <a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\">Google</a>\n```\n\n### mail_to\n\nInserts a mail link.\n\n``` js\n<%- mail_to(path, [text], [options]) %>\n```\n\nOption | Description\n--- | ---\n`class` | Class name\n`id` | ID\n`subject` | Mail subject\n`cc` | CC\n`bcc` | BCC\n`body` | Mail content\n\n**Examples:**\n\n``` js\n<%- mail_to('a@abc.com') %>\n// <a href=\"mailto:a@abc.com\" title=\"a@abc.com\">a@abc.com</a>\n\n<%- mail_to('a@abc.com', 'Email') %>\n// <a href=\"mailto:a@abc.com\" title=\"Email\">Email</a>\n```\n\n### image_tag\n\nInserts an image.\n\n``` js\n<%- image_tag(path, [options]) %>\n```\n\nOption | Description\n--- | ---\n`alt` | Alternative text of the image\n`class` | Class name\n`id` | ID\n`width` | Image width\n`height` | Image height\n\n### favicon_tag\n\nInserts a favicon.\n\n``` js\n<%- favicon_tag(path) %>\n```\n\n### feed_tag\n\nInserts a feed link.\n\n``` js\n<%- feed_tag(path, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Feed title |\n`type` | Feed type | atom\n\n## Conditional Tags\n\n### is_current\n\nCheck whether `path` matches the URL of the current page. Use `strict` options to enable strict matching.\n\n``` js\n<%- is_current(path, [strict]) %>\n```\n\n### is_home\n\nCheck whether the current page is home page.\n\n``` js\n<%- is_home() %>\n```\n\n### is_post\n\nCheck whether the current page is a post.\n\n``` js\n<%- is_post() %>\n```\n\n### is_archive\n\nCheck whether the current page is an archive page.\n\n``` js\n<%- is_archive() %>\n```\n\n### is_year\n\nCheck whether the current page is a yearly archive page.\n\n``` js\n<%- is_year() %>\n```\n\n### is_month\n\nCheck whether the current page is a monthly archive page.\n\n``` js\n<%- is_month() %>\n```\n\n### is_category\n\nCheck whether the current page is a category page.\nIf a string is given as parameter, check whether the current page match the given category.\n\n``` js\n<%- is_category() %>\n<%- is_category('hobby') %>\n```\n\n### is_tag\n\nCheck whether the current page is a tag page.\nIf a string is given as parameter, check whether the current page match the given tag.\n\n``` js\n<%- is_tag() %>\n<%- is_tag('hobby') %>\n```\n\n## String Manipulation\n\n### trim\n\nRemoves prefixing and trailing spaces of a string.\n\n``` js\n<%- trim(string) %>\n```\n\n### strip_html\n\nSanitizes all HTML tags in a string.\n\n``` js\n<%- strip_html(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- strip_html('It's not <b>important</b> anymore!') %>\n// It's not important anymore!\n```\n\n### titlecase\n\nTransforms a string into proper title caps.\n\n``` js\n<%- titlecase(string) %>\n```\n\n**Examples:**\n\n``` js\n<%- titlecase('this is an apple') %>\n# This is an Apple\n```\n\n### markdown\n\nRenders a string with Markdown.\n\n``` js\n<%- markdown(str) %>\n```\n\n**Examples:**\n\n``` js\n<%- markdown('make me **strong**') %>\n// make me <strong>strong</strong>\n```\n\n### render\n\nRenders a string.\n\n``` js\n<%- render(str, engine, [options]) %>\n```\n\n### word_wrap\n\nWraps text into lines no longer than `length`. `length` is 80 by default.\n\n``` js\n<%- word_wrap(str, [length]) %>\n```\n\n**Examples:**\n\n``` js\n<%- word_wrap('Once upon a time', 8) %>\n// Once upon\\n a time\n```\n\n### truncate\n\nTruncates text after certain `length`. Default is 30 characters.\n\n``` js\n<%- truncate(text, [options]) %>\n```\n\n**Examples:**\n\n``` js\n<%- truncate('Once upon a time in a world far far away', {length: 17}) %>\n// Once upon a ti...\n\n<%- truncate('Once upon a time in a world far far away', {length: 17, separator: ' '}) %>\n// Once upon a...\n\n<%- truncate('And they found that many people were sleeping better.', {length: 25, omission: '... (continued)'}) %>\n// And they f... (continued)\n```\n\n## Templates\n\n### partial\n\nLoads other template files. You can define local variables in `locals`.\n\n``` js\n<%- partial(layout, [locals], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`cache` | Cache contents (Use fragment cache) | `false`\n`only` | Strict local variables. Only use variables set in `locals` in templates. | `false`\n\n### fragment_cache\n\nCaches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.\n\n``` js\n<%- fragment_cache(id, fn);\n```\n\n**Examples:**\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}) %>\n```\n\n## Date & Time\n\n### date\n\nInserts formatted date. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format` setting by default.\n\n``` js\n<%- date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- date(Date.now()) %>\n// 2013-01-01\n\n<%- date(Date.now(), 'YYYY/M/D') %>\n// Jan 1 2013\n```\n\n### date_xml\n\nInserts date in XML format. `date` can be unix time, ISO string, date object, or [Moment.js] object.\n\n``` js\n<%- date_xml(date) %>\n```\n\n**Examples:**\n\n``` js\n<%- date_xml(Date.now()) %>\n// 2013-01-01T00:00:00.000Z\n```\n\n### time\n\nInserts formatted time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `time_format` setting by default.\n\n``` js\n<%- time(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- time(Date.now()) %>\n// 13:05:12\n\n<%- time(Date.now(), 'h:mm:ss a') %>\n// 1:05:12 pm\n```\n\n### full_date\n\nInserts formatted date and time. `date` can be unix time, ISO string, date object, or [Moment.js] object. `format` is `date_format + time_format` setting by default.\n\n``` js\n<%- full_date(date, [format]) %>\n```\n\n**Examples:**\n\n``` js\n<%- full_date(new Date()) %>\n// Jan 1, 2013 0:00:00\n\n<%- full_date(new Date(), 'dddd, MMMM Do YYYY, h:mm:ss a') %>\n// Tuesday, January 1st 2013, 12:00:00 am\n```\n\n### moment\n\n[Moment.js] library.\n\n## List\n\n### list_categories\n\nInserts a list of all categories.\n\n``` js\n<%- list_categories([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each category | true\n`style` | Style to display the category list. `list` displays categories in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`depth` | Levels of categories to be displayed. `0` displays all categories and child categories; `-1` is similar to `0` but displayed in flat; `1` displays only top level categories. | 0\n`class` | Class name of category list. | category\n`transform` | The function that changes the display of category name. |\n`suffix` | Add a suffix to link. | None\n\n### list_tags\n\nInserts a list of all tags.\n\n``` js\n<%- list_tags([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of categories | name\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each tag | true\n`style` | Style to display the tag list. `list` displays tags in an unordered list.  | list\n`separator` | Separator between categories. (Only works if `style` is not `list`) | ,\n`class` | Class name of tag list. | tag\n`transform` | The function that changes the display of category name. |\n`amount` | The number of tags to display (0 = unlimited) | 0\n`suffix` | Add a suffix to link. | None\n\n### list_archives\n\nInserts a list of archives.\n\n``` js\n<%- list_archives([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`type` | Type. This value can be `yearly` or `monthly`. | monthly\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`show_count` | Display the number of posts for each archive | true\n`format` | Date format | MMMM YYYY\n`style` | Style to display the archive list. `list` displays archives in an unordered list.  | list\n`separator` | Separator between archives. (Only works if `style` is not `list`) | ,\n`class` | Class name of archive list. | archive\n`transform` | The function that changes the display of archive name. |\n\n### list_posts\n\nInserts a list of posts.\n\n``` js\n<%- list_posts([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`orderby` | Order of posts | date\n`order` | Sort of order. `1`, `asc` for ascending; `-1`, `desc` for descending | 1\n`style` | Style to display the post list. `list` displays posts in an unordered list.  | list\n`separator` | Separator between posts. (Only works if `style` is not `list`) | ,\n`class` | Class name of post list. | post\n`amount` | The number of posts to display (0 = unlimited) | 6\n`transform` | The function that changes the display of post name. |\n\n### tagcloud\n\nInserts a tag cloud.\n\n``` js\n<%- tagcloud([tags], [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`min_font` | Minimal font size | 10\n`max_font` | Maximum font size | 20\n`unit` | Unit of font size | px\n`amount` | Total amount of tags | 40\n`orderby` | Order of tags | name\n`order` | Sort order. `1`, `sac` as ascending; `-1`, `desc` as descending | 1\n`color` | Colorizes the tag cloud | false\n`start_color` | Start color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n`end_color` | End color. You can use hex (`#b700ff`), rgba (`rgba(183, 0, 255, 1)`), hsla (`hsla(283, 100%, 50%, 1)`) or [color keywords]. This option only works when `color` is true. |\n\n## Miscellaneous\n\n### paginator\n\nInserts a paginator.\n\n``` js\n<%- paginator(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`base` | Base URL | /\n`format` | URL format | page/%d/\n`total` | The number of pages | 1\n`current` | Current page number | 0\n`prev_text` | The link text of previous page. Works only if `prev_next` is set to true. | Prev\n`next_text` | The link text of next page. Works only if `prev_next` is set to true. | Next\n`space` | The space text | &hellp;\n`prev_next` | Display previous and next links | true\n`end_size` | The number of pages displayed on the start and the end side | 1\n`mid_size` | The number of pages displayed between current page, but not including current page | 2\n`show_all` | Display all pages. If this is set true, `end_size` and `mid_size` will not works. | false\n\n### search_form\n\nInserts a Google search form.\n\n``` js\n<%- search_form(options) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | The class name of form | search-form\n`text` | Search hint word | Search\n`button` | Display search button. The value can be a boolean or a string. When the value is a string, it'll be the text of the button. | false\n\n### number_format\n\nFormats a number.\n\n``` js\n<%- number_format(number, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`precision` | The precision of number. The value can be `false` or a nonnegative integer. | false\n`delimiter` | The thousands delimiter | ,\n`separator` | The separator between the fractional and integer digits. | .\n\n**Examples:**\n\n``` js\n<%- number_format(12345.67, {precision: 1}) %>\n// 12,345.68\n\n<%- number_format(12345.67, {precision: 4}) %>\n// 12,345.6700\n\n<%- number_format(12345.67, {precision: 0}) %>\n// 12,345\n\n<%- number_format(12345.67, {delimiter: ''}) %>\n// 12345.67\n\n<%- number_format(12345.67, {separator: '/'}) %>\n// 12,345/67\n```\n\n### open_graph\n\nInserts [Open Graph] data.\n\n``` js\n<%- open_graph([options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`title` | Page title (`og:title`) | `page.title`\n`type` | Page type (`og:type`) | blog\n`url` | Page URL (`og:url`) | `url`\n`image` | Page cover (`og:image`) | First image in the content\n`site_name` | Site name (`og:site_name`) | `config.title`\n`description` | Page description (`og:desription`) | Page excerpt or first 200 characters of the content\n`twitter_card` | Twitter card type (`twitter:card`) | summary\n`twitter_id` | Twitter ID (`twitter:creator`) |\n`twitter_site` | Twitter Site (`twitter:site`) |\n`google_plus` | Google+ profile link |\n`fb_admins` | Facebook admin ID |\n`fb_app_id` | Facebook App ID |\n\n### toc\n\nParses all heading tags (h1~h6) in the content and inserts a table of contents.\n\n``` js\n<%- toc(str, [options]) %>\n```\n\nOption | Description | Default\n--- | --- | ---\n`class` | Class name | toc\n`list_number` | Displays list number | true\n\n**Examples:**\n\n``` js\n<%- toc(page.content) %>\n```\n\n[color keywords]: http://www.w3.org/TR/css3-color/#svg-color\n[Moment.js]: http://momentjs.com/\n[Open Graph]: http://ogp.me/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/helpers.html","comments":1,"layout":"page","_id":"ciy3szh88000wz71417x3wcwc","content":"<p>Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>Returns a url with the root path prefixed. You should use this helper instead of <code>config.root + path</code> since Hexo 2.7.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- url_for(path) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>Returns the relative URL from <code>from</code> to <code>to</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Inserts a Gravatar image.<br>If you don’t specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- gravatar(email, [options]);</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></div></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>Loads CSS files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.css</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- css(path, ...) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>Loads JavaScript files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.js</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(path, ...) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>Inserts a link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Opens the link in a new tab</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>Inserts a mail link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Mail subject</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>CC</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>BCC</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Mail content</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>Inserts an image.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Alternative text of the image</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Image width</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Image height</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>Inserts a favicon.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- favicon_tag(path) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Inserts a feed link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed type</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Conditional-Tags\"><a href=\"#Conditional-Tags\" class=\"headerlink\" title=\"Conditional Tags\"></a>Conditional Tags</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>Check whether <code>path</code> matches the URL of the current page. Use <code>strict</code> options to enable strict matching.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>Check whether the current page is home page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_home() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>Check whether the current page is a post.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_post() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>Check whether the current page is an archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_archive() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>Check whether the current page is a yearly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_year() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>Check whether the current page is a monthly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_month() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>Check whether the current page is a category page.<br>If a string is given as parameter, check whether the current page match the given category.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_category() %&gt;</div><div class=\"line\">&lt;%- is_category('hobby') %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>Check whether the current page is a tag page.<br>If a string is given as parameter, check whether the current page match the given tag.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_tag() %&gt;</div><div class=\"line\">&lt;%- is_tag('hobby') %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"String-Manipulation\"><a href=\"#String-Manipulation\" class=\"headerlink\" title=\"String Manipulation\"></a>String Manipulation</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>Removes prefixing and trailing spaces of a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- trim(string) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>Sanitizes all HTML tags in a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- strip_html(string) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- strip_html('It's not &lt;b&gt;important&lt;/b&gt; anymore!') %&gt;</div><div class=\"line\">// It's not important anymore!</div></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>Transforms a string into proper title caps.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- titlecase(string) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- titlecase('this is an apple') %&gt;</div><div class=\"line\"># This is an Apple</div></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Renders a string with Markdown.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- markdown(str) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Renders a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>Wraps text into lines no longer than <code>length</code>. <code>length</code> is 80 by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></div></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>Truncates text after certain <code>length</code>. Default is 30 characters.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- truncate(text, [options]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon a ti...</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon a...</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// And they f... (continued)</span></div></pre></td></tr></table></figure>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>Loads other template files. You can define local variables in <code>locals</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Cache contents (Use fragment cache)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Caches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(id, fn);</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Date-amp-Time\"><a href=\"#Date-amp-Time\" class=\"headerlink\" title=\"Date &amp; Time\"></a>Date &amp; Time</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>Inserts formatted date. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object. <code>format</code> is <code>date_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 2013-01-01</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Jan 1 2013</span></div></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>Inserts date in XML format. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date_xml(date) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></div></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>Inserts formatted time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object. <code>format</code> is <code>time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- time(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 13:05:12</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></div></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>Inserts formatted date and time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object. <code>format</code> is <code>date_format + time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- full_date(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</div><div class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></div></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> library.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>Inserts a list of all categories.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_categories([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each category</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of category list.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>Inserts a list of all tags.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_tags([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each tag</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of tag list.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of tags to display (0 = unlimited)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>Inserts a list of archives.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_archives([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each archive</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Date format</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of archive list.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of archive name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>Inserts a list of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_posts([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of posts</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of post list.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of posts to display (0 = unlimited)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of post name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>Inserts a tag cloud.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Minimal font size</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Maximum font size</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Unit of font size</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Total amount of tags</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort order. <code>1</code>, <code>sac</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Colorizes the tag cloud</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"external\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\" target=\"_blank\" rel=\"external\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscellaneous\"><a href=\"#Miscellaneous\" class=\"headerlink\" title=\"Miscellaneous\"></a>Miscellaneous</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Inserts a paginator.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- paginator(options) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>Base URL</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>URL format</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>The number of pages</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Current page number</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>The space text</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Display previous and next links</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>The number of pages displayed on the start and the end side</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>The number of pages displayed between current page, but not including current page</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Display all pages. If this is set true, <code>end_size</code> and <code>mid_size</code> will not works.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Inserts a Google search form.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- search_form(options) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>The class name of form</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Search hint word</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Display search button. The value can be a boolean or a string. When the value is a string, it’ll be the text of the button.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>Formats a number.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- number_format(number, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>The thousands delimiter</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>The separator between the fractional and integer digits.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345.68</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345.6700</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12345.67</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345/67</span></div></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>Inserts <a href=\"http://ogp.me/\" target=\"_blank\" rel=\"external\">Open Graph</a> data.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- open_graph([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Page title (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Page type (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Page URL (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Page cover (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Site name (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Page description (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter card type (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter Site (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ profile link</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook admin ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook App ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>Parses all heading tags (h1~h6) in the content and inserts a table of contents.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- toc(str, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Displays list number</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- toc(page.content) %&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><h3 id=\"url-for\"><a href=\"#url-for\" class=\"headerlink\" title=\"url_for\"></a>url_for</h3><p>Returns a url with the root path prefixed. You should use this helper instead of <code>config.root + path</code> since Hexo 2.7.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- url_for(path) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"relative-url\"><a href=\"#relative-url\" class=\"headerlink\" title=\"relative_url\"></a>relative_url</h3><p>Returns the relative URL from <code>from</code> to <code>to</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- relative_url(<span class=\"keyword\">from</span>, to) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"gravatar\"><a href=\"#gravatar\" class=\"headerlink\" title=\"gravatar\"></a>gravatar</h3><p>Inserts a Gravatar image.<br>If you don’t specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- gravatar(email, [options]);</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span>, <span class=\"number\">40</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- gravatar(<span class=\"string\">'a@abc.com'</span> &#123;<span class=\"attr\">s</span>: <span class=\"number\">40</span>, <span class=\"attr\">d</span>: <span class=\"string\">'http://example.com/image.png'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// http://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=http%3A%2F%2Fexample.com%2Fimage.png</span></div></pre></td></tr></table></figure>\n<h2 id=\"HTML-Tags\"><a href=\"#HTML-Tags\" class=\"headerlink\" title=\"HTML Tags\"></a>HTML Tags</h2><h3 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h3><p>Loads CSS files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.css</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- css(path, ...) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- css(<span class=\"string\">'style.css'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- css([<span class=\"string\">'style.css'</span>, <span class=\"string\">'screen.css'</span>]) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"&gt;</span></div><div class=\"line\"><span class=\"comment\">// &lt;link rel=\"stylesheet\" href=\"/screen.css\" type=\"text/css\"&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"js\"><a href=\"#js\" class=\"headerlink\" title=\"js\"></a>js</h3><p>Loads JavaScript files. <code>path</code> can be an array or a string. If <code>path</code> isn’t prefixed with <code>/</code> or any protocol, it’ll get prefixed with the root URL. If you didn’t add the <code>.js</code> extension after <code>path</code>, it will be added automatically.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(path, ...) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- js(<span class=\"string\">'script.js'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- js([<span class=\"string\">'script.js'</span>, <span class=\"string\">'gallery.js'</span>]) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/script.js\"&gt;&lt;/script&gt;</span></div><div class=\"line\"><span class=\"comment\">// &lt;script type=\"text/javascript\" src=\"/gallery.js\"&gt;&lt;/script&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"link-to\"><a href=\"#link-to\" class=\"headerlink\" title=\"link_to\"></a>link_to</h3><p>Inserts a link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- link_to(path, [text], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>external</code></td>\n<td>Opens the link in a new tab</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td></td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"http://www.google.com\"&gt;http://www.google.com&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\"&gt;Google&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- link_to(<span class=\"string\">'http://www.google.com'</span>, <span class=\"string\">'Google'</span>, &#123;<span class=\"attr\">external</span>: <span class=\"literal\">true</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"http://www.google.com\" title=\"Google\" target=\"_blank\" rel=\"external\"&gt;Google&lt;/a&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"mail-to\"><a href=\"#mail-to\" class=\"headerlink\" title=\"mail_to\"></a>mail_to</h3><p>Inserts a mail link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- mail_to(path, [text], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>subject</code></td>\n<td>Mail subject</td>\n</tr>\n<tr>\n<td><code>cc</code></td>\n<td>CC</td>\n</tr>\n<tr>\n<td><code>bcc</code></td>\n<td>BCC</td>\n</tr>\n<tr>\n<td><code>body</code></td>\n<td>Mail content</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"a@abc.com\"&gt;a@abc.com&lt;/a&gt;</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- mail_to(<span class=\"string\">'a@abc.com'</span>, <span class=\"string\">'Email'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// &lt;a href=\"mailto:a@abc.com\" title=\"Email\"&gt;Email&lt;/a&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"image-tag\"><a href=\"#image-tag\" class=\"headerlink\" title=\"image_tag\"></a>image_tag</h3><p>Inserts an image.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- image_tag(path, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>alt</code></td>\n<td>Alternative text of the image</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n</tr>\n<tr>\n<td><code>id</code></td>\n<td>ID</td>\n</tr>\n<tr>\n<td><code>width</code></td>\n<td>Image width</td>\n</tr>\n<tr>\n<td><code>height</code></td>\n<td>Image height</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"favicon-tag\"><a href=\"#favicon-tag\" class=\"headerlink\" title=\"favicon_tag\"></a>favicon_tag</h3><p>Inserts a favicon.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- favicon_tag(path) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"feed-tag\"><a href=\"#feed-tag\" class=\"headerlink\" title=\"feed_tag\"></a>feed_tag</h3><p>Inserts a feed link.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- feed_tag(path, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Feed title</td>\n<td></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Feed type</td>\n<td>atom</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Conditional-Tags\"><a href=\"#Conditional-Tags\" class=\"headerlink\" title=\"Conditional Tags\"></a>Conditional Tags</h2><h3 id=\"is-current\"><a href=\"#is-current\" class=\"headerlink\" title=\"is_current\"></a>is_current</h3><p>Check whether <code>path</code> matches the URL of the current page. Use <code>strict</code> options to enable strict matching.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_current(path, [strict]) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-home\"><a href=\"#is-home\" class=\"headerlink\" title=\"is_home\"></a>is_home</h3><p>Check whether the current page is home page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_home() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-post\"><a href=\"#is-post\" class=\"headerlink\" title=\"is_post\"></a>is_post</h3><p>Check whether the current page is a post.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_post() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-archive\"><a href=\"#is-archive\" class=\"headerlink\" title=\"is_archive\"></a>is_archive</h3><p>Check whether the current page is an archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_archive() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-year\"><a href=\"#is-year\" class=\"headerlink\" title=\"is_year\"></a>is_year</h3><p>Check whether the current page is a yearly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_year() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-month\"><a href=\"#is-month\" class=\"headerlink\" title=\"is_month\"></a>is_month</h3><p>Check whether the current page is a monthly archive page.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_month() %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-category\"><a href=\"#is-category\" class=\"headerlink\" title=\"is_category\"></a>is_category</h3><p>Check whether the current page is a category page.<br>If a string is given as parameter, check whether the current page match the given category.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_category() %&gt;</div><div class=\"line\">&lt;%- is_category('hobby') %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"is-tag\"><a href=\"#is-tag\" class=\"headerlink\" title=\"is_tag\"></a>is_tag</h3><p>Check whether the current page is a tag page.<br>If a string is given as parameter, check whether the current page match the given tag.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- is_tag() %&gt;</div><div class=\"line\">&lt;%- is_tag('hobby') %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"String-Manipulation\"><a href=\"#String-Manipulation\" class=\"headerlink\" title=\"String Manipulation\"></a>String Manipulation</h2><h3 id=\"trim\"><a href=\"#trim\" class=\"headerlink\" title=\"trim\"></a>trim</h3><p>Removes prefixing and trailing spaces of a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- trim(string) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"strip-html\"><a href=\"#strip-html\" class=\"headerlink\" title=\"strip_html\"></a>strip_html</h3><p>Sanitizes all HTML tags in a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- strip_html(string) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- strip_html('It's not &lt;b&gt;important&lt;/b&gt; anymore!') %&gt;</div><div class=\"line\">// It's not important anymore!</div></pre></td></tr></table></figure>\n<h3 id=\"titlecase\"><a href=\"#titlecase\" class=\"headerlink\" title=\"titlecase\"></a>titlecase</h3><p>Transforms a string into proper title caps.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- titlecase(string) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- titlecase('this is an apple') %&gt;</div><div class=\"line\"># This is an Apple</div></pre></td></tr></table></figure>\n<h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><p>Renders a string with Markdown.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- markdown(str) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- markdown(<span class=\"string\">'make me **strong**'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p>Renders a string.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- render(str, engine, [options]) %&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"word-wrap\"><a href=\"#word-wrap\" class=\"headerlink\" title=\"word_wrap\"></a>word_wrap</h3><p>Wraps text into lines no longer than <code>length</code>. <code>length</code> is 80 by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- word_wrap(str, [length]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- word_wrap(<span class=\"string\">'Once upon a time'</span>, <span class=\"number\">8</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon\\n a time</span></div></pre></td></tr></table></figure>\n<h3 id=\"truncate\"><a href=\"#truncate\" class=\"headerlink\" title=\"truncate\"></a>truncate</h3><p>Truncates text after certain <code>length</code>. Default is 30 characters.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- truncate(text, [options]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon a ti...</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- truncate(<span class=\"string\">'Once upon a time in a world far far away'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">17</span>, <span class=\"attr\">separator</span>: <span class=\"string\">' '</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// Once upon a...</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- truncate(<span class=\"string\">'And they found that many people were sleeping better.'</span>, &#123;<span class=\"attr\">length</span>: <span class=\"number\">25</span>, <span class=\"attr\">omission</span>: <span class=\"string\">'... (continued)'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// And they f... (continued)</span></div></pre></td></tr></table></figure>\n<h2 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h2><h3 id=\"partial\"><a href=\"#partial\" class=\"headerlink\" title=\"partial\"></a>partial</h3><p>Loads other template files. You can define local variables in <code>locals</code>.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(layout, [locals], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>cache</code></td>\n<td>Cache contents (Use fragment cache)</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>only</code></td>\n<td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fragment-cache\"><a href=\"#fragment-cache\" class=\"headerlink\" title=\"fragment_cache\"></a>fragment_cache</h3><p>Caches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(id, fn);</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;) %&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Date-amp-Time\"><a href=\"#Date-amp-Time\" class=\"headerlink\" title=\"Date &amp; Time\"></a>Date &amp; Time</h2><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>Inserts formatted date. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\">Moment.js</a> object. <code>format</code> is <code>date_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 2013-01-01</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- date(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'YYYY/M/D'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Jan 1 2013</span></div></pre></td></tr></table></figure>\n<h3 id=\"date-xml\"><a href=\"#date-xml\" class=\"headerlink\" title=\"date_xml\"></a>date_xml</h3><p>Inserts date in XML format. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\">Moment.js</a> object.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date_xml(date) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- date_xml(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 2013-01-01T00:00:00.000Z</span></div></pre></td></tr></table></figure>\n<h3 id=\"time\"><a href=\"#time\" class=\"headerlink\" title=\"time\"></a>time</h3><p>Inserts formatted time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\">Moment.js</a> object. <code>format</code> is <code>time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- time(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now()) %&gt;</div><div class=\"line\"><span class=\"comment\">// 13:05:12</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- time(<span class=\"built_in\">Date</span>.now(), <span class=\"string\">'h:mm:ss a'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// 1:05:12 pm</span></div></pre></td></tr></table></figure>\n<h3 id=\"full-date\"><a href=\"#full-date\" class=\"headerlink\" title=\"full_date\"></a>full_date</h3><p>Inserts formatted date and time. <code>date</code> can be unix time, ISO string, date object, or <a href=\"http://momentjs.com/\">Moment.js</a> object. <code>format</code> is <code>date_format + time_format</code> setting by default.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- full_date(date, [format]) %&gt;</div></pre></td></tr></table></figure>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) %&gt;</div><div class=\"line\"><span class=\"comment\">// Jan 1, 2013 0:00:00</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- full_date(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(), <span class=\"string\">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Tuesday, January 1st 2013, 12:00:00 am</span></div></pre></td></tr></table></figure>\n<h3 id=\"moment\"><a href=\"#moment\" class=\"headerlink\" title=\"moment\"></a>moment</h3><p><a href=\"http://momentjs.com/\">Moment.js</a> library.</p>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"list-categories\"><a href=\"#list-categories\" class=\"headerlink\" title=\"list_categories\"></a>list_categories</h3><p>Inserts a list of all categories.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_categories([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each category</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>depth</code></td>\n<td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of category list.</td>\n<td>category</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-tags\"><a href=\"#list-tags\" class=\"headerlink\" title=\"list_tags\"></a>list_tags</h3><p>Inserts a list of all tags.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_tags([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of categories</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each tag</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of tag list.</td>\n<td>tag</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of category name.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of tags to display (0 = unlimited)</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>Add a suffix to link.</td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-archives\"><a href=\"#list-archives\" class=\"headerlink\" title=\"list_archives\"></a>list_archives</h3><p>Inserts a list of archives.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_archives([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td>\n<td>monthly</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>show_count</code></td>\n<td>Display the number of posts for each archive</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>Date format</td>\n<td>MMMM YYYY</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of archive list.</td>\n<td>archive</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of archive name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"list-posts\"><a href=\"#list-posts\" class=\"headerlink\" title=\"list_posts\"></a>list_posts</h3><p>Inserts a list of posts.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- list_posts([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of posts</td>\n<td>date</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>style</code></td>\n<td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td>\n<td>list</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>class</code></td>\n<td>Class name of post list.</td>\n<td>post</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>The number of posts to display (0 = unlimited)</td>\n<td>6</td>\n</tr>\n<tr>\n<td><code>transform</code></td>\n<td>The function that changes the display of post name.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"tagcloud\"><a href=\"#tagcloud\" class=\"headerlink\" title=\"tagcloud\"></a>tagcloud</h3><p>Inserts a tag cloud.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- tagcloud([tags], [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>min_font</code></td>\n<td>Minimal font size</td>\n<td>10</td>\n</tr>\n<tr>\n<td><code>max_font</code></td>\n<td>Maximum font size</td>\n<td>20</td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td>Unit of font size</td>\n<td>px</td>\n</tr>\n<tr>\n<td><code>amount</code></td>\n<td>Total amount of tags</td>\n<td>40</td>\n</tr>\n<tr>\n<td><code>orderby</code></td>\n<td>Order of tags</td>\n<td>name</td>\n</tr>\n<tr>\n<td><code>order</code></td>\n<td>Sort order. <code>1</code>, <code>sac</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>color</code></td>\n<td>Colorizes the tag cloud</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>start_color</code></td>\n<td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>end_color</code></td>\n<td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href=\"http://www.w3.org/TR/css3-color/#svg-color\">color keywords</a>. This option only works when <code>color</code> is true.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Miscellaneous\"><a href=\"#Miscellaneous\" class=\"headerlink\" title=\"Miscellaneous\"></a>Miscellaneous</h2><h3 id=\"paginator\"><a href=\"#paginator\" class=\"headerlink\" title=\"paginator\"></a>paginator</h3><p>Inserts a paginator.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- paginator(options) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>base</code></td>\n<td>Base URL</td>\n<td>/</td>\n</tr>\n<tr>\n<td><code>format</code></td>\n<td>URL format</td>\n<td>page/%d/</td>\n</tr>\n<tr>\n<td><code>total</code></td>\n<td>The number of pages</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>current</code></td>\n<td>Current page number</td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>prev_text</code></td>\n<td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Prev</td>\n</tr>\n<tr>\n<td><code>next_text</code></td>\n<td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td>\n<td>Next</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td>The space text</td>\n<td>&hellp;</td>\n</tr>\n<tr>\n<td><code>prev_next</code></td>\n<td>Display previous and next links</td>\n<td>true</td>\n</tr>\n<tr>\n<td><code>end_size</code></td>\n<td>The number of pages displayed on the start and the end side</td>\n<td>1</td>\n</tr>\n<tr>\n<td><code>mid_size</code></td>\n<td>The number of pages displayed between current page, but not including current page</td>\n<td>2</td>\n</tr>\n<tr>\n<td><code>show_all</code></td>\n<td>Display all pages. If this is set true, <code>end_size</code> and <code>mid_size</code> will not works.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"search-form\"><a href=\"#search-form\" class=\"headerlink\" title=\"search_form\"></a>search_form</h3><p>Inserts a Google search form.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- search_form(options) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>The class name of form</td>\n<td>search-form</td>\n</tr>\n<tr>\n<td><code>text</code></td>\n<td>Search hint word</td>\n<td>Search</td>\n</tr>\n<tr>\n<td><code>button</code></td>\n<td>Display search button. The value can be a boolean or a string. When the value is a string, it’ll be the text of the button.</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"number-format\"><a href=\"#number-format\" class=\"headerlink\" title=\"number_format\"></a>number_format</h3><p>Formats a number.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- number_format(number, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>precision</code></td>\n<td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td>\n<td>false</td>\n</tr>\n<tr>\n<td><code>delimiter</code></td>\n<td>The thousands delimiter</td>\n<td>,</td>\n</tr>\n<tr>\n<td><code>separator</code></td>\n<td>The separator between the fractional and integer digits.</td>\n<td>.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">1</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345.68</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">4</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345.6700</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">precision</span>: <span class=\"number\">0</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">delimiter</span>: <span class=\"string\">''</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12345.67</span></div><div class=\"line\"></div><div class=\"line\">&lt;%- number_format(<span class=\"number\">12345.67</span>, &#123;<span class=\"attr\">separator</span>: <span class=\"string\">'/'</span>&#125;) %&gt;</div><div class=\"line\"><span class=\"comment\">// 12,345/67</span></div></pre></td></tr></table></figure>\n<h3 id=\"open-graph\"><a href=\"#open-graph\" class=\"headerlink\" title=\"open_graph\"></a>open_graph</h3><p>Inserts <a href=\"http://ogp.me/\">Open Graph</a> data.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- open_graph([options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>title</code></td>\n<td>Page title (<code>og:title</code>)</td>\n<td><code>page.title</code></td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td>Page type (<code>og:type</code>)</td>\n<td>blog</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Page URL (<code>og:url</code>)</td>\n<td><code>url</code></td>\n</tr>\n<tr>\n<td><code>image</code></td>\n<td>Page cover (<code>og:image</code>)</td>\n<td>First image in the content</td>\n</tr>\n<tr>\n<td><code>site_name</code></td>\n<td>Site name (<code>og:site_name</code>)</td>\n<td><code>config.title</code></td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td>Page description (<code>og:desription</code>)</td>\n<td>Page excerpt or first 200 characters of the content</td>\n</tr>\n<tr>\n<td><code>twitter_card</code></td>\n<td>Twitter card type (<code>twitter:card</code>)</td>\n<td>summary</td>\n</tr>\n<tr>\n<td><code>twitter_id</code></td>\n<td>Twitter ID (<code>twitter:creator</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>twitter_site</code></td>\n<td>Twitter Site (<code>twitter:site</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td><code>google_plus</code></td>\n<td>Google+ profile link</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_admins</code></td>\n<td>Facebook admin ID</td>\n<td></td>\n</tr>\n<tr>\n<td><code>fb_app_id</code></td>\n<td>Facebook App ID</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"toc\"><a href=\"#toc\" class=\"headerlink\" title=\"toc\"></a>toc</h3><p>Parses all heading tags (h1~h6) in the content and inserts a table of contents.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- toc(str, [options]) %&gt;</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>class</code></td>\n<td>Class name</td>\n<td>toc</td>\n</tr>\n<tr>\n<td><code>list_number</code></td>\n<td>Displays list number</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Examples:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- toc(page.content) %&gt;</div></pre></td></tr></table></figure>\n"},{"title":"Documentation","_content":"Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  [troubleshooting guide](troubleshooting.html), raise an issue on [GitHub](https://github.com/hexojs/hexo/issues) or start a topic on the [Google Group](https://groups.google.com/group/hexo).\n\n## What is Hexo?\n\nHexo is a fast, simple and powerful blog framework. You write posts in [Markdown](http://daringfireball.net/projects/markdown/) (or other languages) and Hexo generates static files with a beautiful theme in seconds.\n\n## Installation\n\nIt only takes a few minutes to set up Hexo. If you encounter a problem and can't find the solution here, please [submit a GitHub issue](https://github.com/hexojs/hexo/issues) and I'll try to solve it.\n\n### Requirements\n\nInstalling Hexo is quite easy. However, you do need to have a couple of other things installed first:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nIf your computer already has these, congratulations! Just install Hexo with npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nIf not, please follow the following instructions to install all the requirements.\n\n{% note warn For Mac users %}\nYou may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to **Preferences -> Download -> Command Line Tools -> Install** to install command line tools.\n{% endnote %}\n\n### Install Git\n\n- Windows: Download & install [git](https://git-scm.com/download/win).\n- Mac: Install it with [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) or [installer](http://sourceforge.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Install Node.js\n\nThe best way to install Node.js is with [nvm](https://github.com/creationix/nvm).\n\ncURL:\n\n``` bash\n$ curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh\n```\n\nOnce nvm is installed, restart the terminal and run the following command to install Node.js.\n\n``` bash\n$ nvm install stable\n```\n\nAlternatively, download and run [the installer](http://nodejs.org/).\n\n### Install Hexo\n\nOnce all the requirements are installed, you can install Hexo with npm.\n\n``` bash\n$ npm install -g hexo-cli\n```\n","source":"docs/index.md","raw":"title: Documentation\n---\nWelcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  [troubleshooting guide](troubleshooting.html), raise an issue on [GitHub](https://github.com/hexojs/hexo/issues) or start a topic on the [Google Group](https://groups.google.com/group/hexo).\n\n## What is Hexo?\n\nHexo is a fast, simple and powerful blog framework. You write posts in [Markdown](http://daringfireball.net/projects/markdown/) (or other languages) and Hexo generates static files with a beautiful theme in seconds.\n\n## Installation\n\nIt only takes a few minutes to set up Hexo. If you encounter a problem and can't find the solution here, please [submit a GitHub issue](https://github.com/hexojs/hexo/issues) and I'll try to solve it.\n\n### Requirements\n\nInstalling Hexo is quite easy. However, you do need to have a couple of other things installed first:\n\n- [Node.js](http://nodejs.org/)\n- [Git](http://git-scm.com/)\n\nIf your computer already has these, congratulations! Just install Hexo with npm:\n\n``` bash\n$ npm install -g hexo-cli\n```\n\nIf not, please follow the following instructions to install all the requirements.\n\n{% note warn For Mac users %}\nYou may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to **Preferences -> Download -> Command Line Tools -> Install** to install command line tools.\n{% endnote %}\n\n### Install Git\n\n- Windows: Download & install [git](https://git-scm.com/download/win).\n- Mac: Install it with [Homebrew](http://mxcl.github.com/homebrew/), [MacPorts](http://www.macports.org/) or [installer](http://sourceforge.net/projects/git-osx-installer/).\n- Linux (Ubuntu, Debian): `sudo apt-get install git-core`\n- Linux (Fedora, Red Hat, CentOS): `sudo yum install git-core`\n\n### Install Node.js\n\nThe best way to install Node.js is with [nvm](https://github.com/creationix/nvm).\n\ncURL:\n\n``` bash\n$ curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh\n```\n\nWget:\n\n``` bash\n$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh\n```\n\nOnce nvm is installed, restart the terminal and run the following command to install Node.js.\n\n``` bash\n$ nvm install stable\n```\n\nAlternatively, download and run [the installer](http://nodejs.org/).\n\n### Install Hexo\n\nOnce all the requirements are installed, you can install Hexo with npm.\n\n``` bash\n$ npm install -g hexo-cli\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/index.html","comments":1,"layout":"page","_id":"ciy3szh8b000xz714znme0vzc","content":"<p>Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  <a href=\"troubleshooting.html\">troubleshooting guide</a>, raise an issue on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a> or start a topic on the <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"external\">Google Group</a>.</p>\n<h2 id=\"What-is-Hexo\"><a href=\"#What-is-Hexo\" class=\"headerlink\" title=\"What is Hexo?\"></a>What is Hexo?</h2><p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"external\">Markdown</a> (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>It only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">submit a GitHub issue</a> and I’ll try to solve it.</p>\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>Installing Hexo is quite easy. However, you do need to have a couple of other things installed first:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"external\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\" target=\"_blank\" rel=\"external\">Git</a></li>\n</ul>\n<p>If your computer already has these, congratulations! Just install Hexo with npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>If not, please follow the following instructions to install all the requirements.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">For Mac users</strong><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> to install command line tools.</p>\n</blockquote>\n<h3 id=\"Install-Git\"><a href=\"#Install-Git\" class=\"headerlink\" title=\"Install Git\"></a>Install Git</h3><ul>\n<li>Windows: Download &amp; install <a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"external\">git</a>.</li>\n<li>Mac: Install it with <a href=\"http://mxcl.github.com/homebrew/\" target=\"_blank\" rel=\"external\">Homebrew</a>, <a href=\"http://www.macports.org/\" target=\"_blank\" rel=\"external\">MacPorts</a> or <a href=\"http://sourceforge.net/projects/git-osx-installer/\" target=\"_blank\" rel=\"external\">installer</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Install-Node-js\"><a href=\"#Install-Node-js\" class=\"headerlink\" title=\"Install Node.js\"></a>Install Node.js</h3><p>The best way to install Node.js is with <a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm</a>.</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>\n<p>Once nvm is installed, restart the terminal and run the following command to install Node.js.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n<p>Alternatively, download and run <a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"external\">the installer</a>.</p>\n<h3 id=\"Install-Hexo\"><a href=\"#Install-Hexo\" class=\"headerlink\" title=\"Install Hexo\"></a>Install Hexo</h3><p>Once all the requirements are installed, you can install Hexo with npm.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  <a href=\"troubleshooting.html\">troubleshooting guide</a>, raise an issue on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> or start a topic on the <a href=\"https://groups.google.com/group/hexo\">Google Group</a>.</p>\n<h2 id=\"What-is-Hexo\"><a href=\"#What-is-Hexo\" class=\"headerlink\" title=\"What is Hexo?\"></a>What is Hexo?</h2><p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a> (or other languages) and Hexo generates static files with a beautiful theme in seconds.</p>\n<h2 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h2><p>It only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please <a href=\"https://github.com/hexojs/hexo/issues\">submit a GitHub issue</a> and I’ll try to solve it.</p>\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>Installing Hexo is quite easy. However, you do need to have a couple of other things installed first:</p>\n<ul>\n<li><a href=\"http://nodejs.org/\">Node.js</a></li>\n<li><a href=\"http://git-scm.com/\">Git</a></li>\n</ul>\n<p>If your computer already has these, congratulations! Just install Hexo with npm:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>If not, please follow the following instructions to install all the requirements.</p>\n<blockquote class=\"note warn\"><strong class=\"note-title\">For Mac users</strong><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> to install command line tools.</p>\n</blockquote>\n<h3 id=\"Install-Git\"><a href=\"#Install-Git\" class=\"headerlink\" title=\"Install Git\"></a>Install Git</h3><ul>\n<li>Windows: Download &amp; install <a href=\"https://git-scm.com/download/win\">git</a>.</li>\n<li>Mac: Install it with <a href=\"http://mxcl.github.com/homebrew/\">Homebrew</a>, <a href=\"http://www.macports.org/\">MacPorts</a> or <a href=\"http://sourceforge.net/projects/git-osx-installer/\">installer</a>.</li>\n<li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li>\n<li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li>\n</ul>\n<h3 id=\"Install-Node-js\"><a href=\"#Install-Node-js\" class=\"headerlink\" title=\"Install Node.js\"></a>Install Node.js</h3><p>The best way to install Node.js is with <a href=\"https://github.com/creationix/nvm\">nvm</a>.</p>\n<p>cURL:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>\n<p>Wget:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure>\n<p>Once nvm is installed, restart the terminal and run the following command to install Node.js.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ nvm install stable</div></pre></td></tr></table></figure>\n<p>Alternatively, download and run <a href=\"http://nodejs.org/\">the installer</a>.</p>\n<h3 id=\"Install-Hexo\"><a href=\"#Install-Hexo\" class=\"headerlink\" title=\"Install Hexo\"></a>Install Hexo</h3><p>Once all the requirements are installed, you can install Hexo with npm.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n"},{"title":"Internationalization (i18n)","_content":"You can use internationalization to present your site in different languages. The default language is set by modifying the `language` setting in `_config.yml`. You can also set multiple languages and modify the order of default languages.\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### Language Files\n\nLanguage files can be YAML or JSON files. You should put them into the `languages` folder in the theme. There is support for the [printf format](https://github.com/alexei/sprintf.js) in language files.\n\n### Templates\n\nUse `__` or `_p` helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Path\n\nYou can set the language of pages in front-matter, or modify the `i18n_dir` setting in `_config.yml` to enable automatic detection by Hexo.\n\n``` yaml\ni18n_dir: :lang\n```\n\nThe default value of `i18n_dir` setting is `:lang`, which means that Hexo will detect the language within the first segment of URL. For example:\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nThe string will only be served as a language when the language file exists. So `archives` in `/archives/index.html` (example 2) will not get served as a language.\n","source":"docs/internationalization.md","raw":"title: Internationalization (i18n)\n---\nYou can use internationalization to present your site in different languages. The default language is set by modifying the `language` setting in `_config.yml`. You can also set multiple languages and modify the order of default languages.\n\n``` yaml\nlanguage: zh-tw\n\nlanguage:\n- zh-tw\n- en\n```\n\n### Language Files\n\nLanguage files can be YAML or JSON files. You should put them into the `languages` folder in the theme. There is support for the [printf format](https://github.com/alexei/sprintf.js) in language files.\n\n### Templates\n\nUse `__` or `_p` helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:\n\n``` yaml en.yml\nindex:\n  title: Home\n  add: Add\n  video:\n    zero: No videos\n    one: One video\n    other: %d videos\n```\n\n``` js\n<%= __('index.title') %>\n// Home\n\n<%= _p('index.video', 3) %>\n// 3 videos\n```\n\n### Path\n\nYou can set the language of pages in front-matter, or modify the `i18n_dir` setting in `_config.yml` to enable automatic detection by Hexo.\n\n``` yaml\ni18n_dir: :lang\n```\n\nThe default value of `i18n_dir` setting is `:lang`, which means that Hexo will detect the language within the first segment of URL. For example:\n\n``` plain\n/index.html => en\n/archives/index.html => en\n/zh-tw/index.html => zh-tw\n```\n\nThe string will only be served as a language when the language file exists. So `archives` in `/archives/index.html` (example 2) will not get served as a language.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/internationalization.html","comments":1,"layout":"page","_id":"ciy3szh8d000yz7144uz88dt0","content":"<p>You can use internationalization to present your site in different languages. The default language is set by modifying the <code>language</code> setting in <code>_config.yml</code>. You can also set multiple languages and modify the order of default languages.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> zh-tw</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">language:</span></div><div class=\"line\"><span class=\"bullet\">-</span> zh-tw</div><div class=\"line\"><span class=\"bullet\">-</span> en</div></pre></td></tr></table></figure>\n<h3 id=\"Language-Files\"><a href=\"#Language-Files\" class=\"headerlink\" title=\"Language Files\"></a>Language Files</h3><p>Language files can be YAML or JSON files. You should put them into the <code>languages</code> folder in the theme. There is support for the <a href=\"https://github.com/alexei/sprintf.js\" target=\"_blank\" rel=\"external\">printf format</a> in language files.</p>\n<h3 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h3><p>Use <code>__</code> or <code>_p</code> helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">index:</span></div><div class=\"line\"><span class=\"attr\">  title:</span> Home</div><div class=\"line\"><span class=\"attr\">  add:</span> Add</div><div class=\"line\"><span class=\"attr\">  video:</span></div><div class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> videos</div><div class=\"line\"><span class=\"attr\">    one:</span> One video</div><div class=\"line\"><span class=\"attr\">    other:</span> %d videos</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Home</span></div><div class=\"line\"></div><div class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// 3 videos</span></div></pre></td></tr></table></figure>\n<h3 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h3><p>You can set the language of pages in front-matter, or modify the <code>i18n_dir</code> setting in <code>_config.yml</code> to enable automatic detection by Hexo.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">i18n_dir:</span> :lang</div></pre></td></tr></table></figure>\n<p>The default value of <code>i18n_dir</code> setting is <code>:lang</code>, which means that Hexo will detect the language within the first segment of URL. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">/index.html =&gt; en</div><div class=\"line\">/archives/index.html =&gt; en</div><div class=\"line\">/zh-tw/index.html =&gt; zh-tw</div></pre></td></tr></table></figure>\n<p>The string will only be served as a language when the language file exists. So <code>archives</code> in <code>/archives/index.html</code> (example 2) will not get served as a language.</p>\n","excerpt":"","more":"<p>You can use internationalization to present your site in different languages. The default language is set by modifying the <code>language</code> setting in <code>_config.yml</code>. You can also set multiple languages and modify the order of default languages.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">language:</span> zh-tw</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">language:</span></div><div class=\"line\"><span class=\"bullet\">-</span> zh-tw</div><div class=\"line\"><span class=\"bullet\">-</span> en</div></pre></td></tr></table></figure>\n<h3 id=\"Language-Files\"><a href=\"#Language-Files\" class=\"headerlink\" title=\"Language Files\"></a>Language Files</h3><p>Language files can be YAML or JSON files. You should put them into the <code>languages</code> folder in the theme. There is support for the <a href=\"https://github.com/alexei/sprintf.js\">printf format</a> in language files.</p>\n<h3 id=\"Templates\"><a href=\"#Templates\" class=\"headerlink\" title=\"Templates\"></a>Templates</h3><p>Use <code>__</code> or <code>_p</code> helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:</p>\n<figure class=\"highlight yaml\"><figcaption><span>en.yml</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">index:</span></div><div class=\"line\"><span class=\"attr\">  title:</span> Home</div><div class=\"line\"><span class=\"attr\">  add:</span> Add</div><div class=\"line\"><span class=\"attr\">  video:</span></div><div class=\"line\"><span class=\"attr\">    zero:</span> <span class=\"literal\">No</span> videos</div><div class=\"line\"><span class=\"attr\">    one:</span> One video</div><div class=\"line\"><span class=\"attr\">    other:</span> %d videos</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%= __(<span class=\"string\">'index.title'</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// Home</span></div><div class=\"line\"></div><div class=\"line\">&lt;%= _p(<span class=\"string\">'index.video'</span>, <span class=\"number\">3</span>) %&gt;</div><div class=\"line\"><span class=\"comment\">// 3 videos</span></div></pre></td></tr></table></figure>\n<h3 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h3><p>You can set the language of pages in front-matter, or modify the <code>i18n_dir</code> setting in <code>_config.yml</code> to enable automatic detection by Hexo.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">i18n_dir:</span> :lang</div></pre></td></tr></table></figure>\n<p>The default value of <code>i18n_dir</code> setting is <code>:lang</code>, which means that Hexo will detect the language within the first segment of URL. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">/index.html =&gt; en</div><div class=\"line\">/archives/index.html =&gt; en</div><div class=\"line\">/zh-tw/index.html =&gt; zh-tw</div></pre></td></tr></table></figure>\n<p>The string will only be served as a language when the language file exists. So <code>archives</code> in <code>/archives/index.html</code> (example 2) will not get served as a language.</p>\n"},{"title":"Migration","_content":"## RSS\n\nFirst, install the `hexo-migrator-rss` plugin.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nOnce the plugin is installed, run the following command to migrate all posts from RSS. `source` can be a file path or URL.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nMove all files in the Jekyll `_posts` folder to the `source/_posts` folder.\n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nMove all files in the Octopress `source/_posts` folder to `source/_posts` \n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nFirst, install the `hexo-migrator-wordpress` plugin.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nExport your WordPress site by going to \"Tools\" → \"Export\" → \"WordPress\" in the WordPress dashboard (see the [WordPress support page](http://en.support.wordpress.com/export/) for more details).\n\nNow run:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\nWhere `source` is the file path or URL to the WordPress export file.\n\n## Joomla\n\nFirst, install the `hexo-migrator-joomla` plugin.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nExport your Joomla articles using the [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D) component.\n\nNow run:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\nWhere `source` is the file path or URL to the Joomla export file.\n","source":"docs/migration.md","raw":"title: Migration\n---\n## RSS\n\nFirst, install the `hexo-migrator-rss` plugin.\n\n``` bash\n$ npm install hexo-migrator-rss --save\n```\n\nOnce the plugin is installed, run the following command to migrate all posts from RSS. `source` can be a file path or URL.\n\n``` bash\n$ hexo migrate rss <source>\n```\n\n## Jekyll\n\nMove all files in the Jekyll `_posts` folder to the `source/_posts` folder.\n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## Octopress\n\nMove all files in the Octopress `source/_posts` folder to `source/_posts` \n\nModify the `new_post_name` setting in `_config.yml`:\n\n``` yaml\nnew_post_name: :year-:month-:day-:title.md\n```\n\n## WordPress\n\nFirst, install the `hexo-migrator-wordpress` plugin.\n\n``` bash\n$ npm install hexo-migrator-wordpress --save\n```\n\nExport your WordPress site by going to \"Tools\" → \"Export\" → \"WordPress\" in the WordPress dashboard (see the [WordPress support page](http://en.support.wordpress.com/export/) for more details).\n\nNow run:\n\n``` bash\n$ hexo migrate wordpress <source>\n```\n\nWhere `source` is the file path or URL to the WordPress export file.\n\n## Joomla\n\nFirst, install the `hexo-migrator-joomla` plugin.\n\n```bash\n$ npm install hexo-migrator-joomla --save\n```\n\nExport your Joomla articles using the [J2XML](http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D) component.\n\nNow run:\n\n```bash\n$ hexo migrate joomla <source>\n```\n\nWhere `source` is the file path or URL to the Joomla export file.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/migration.html","comments":1,"layout":"page","_id":"ciy3szh8e000zz714ky62vx0a","content":"<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>First, install the <code>hexo-migrator-rss</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-rss --save</div></pre></td></tr></table></figure>\n<p>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> can be a file path or URL.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Move all files in the Jekyll <code>_posts</code> folder to the <code>source/_posts</code> folder.</p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md</div></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Move all files in the Octopress <code>source/_posts</code> folder to <code>source/_posts</code> </p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md</div></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>First, install the <code>hexo-migrator-wordpress</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-wordpress --save</div></pre></td></tr></table></figure>\n<p>Export your WordPress site by going to “Tools” → “Export” → “WordPress” in the WordPress dashboard (see the <a href=\"http://en.support.wordpress.com/export/\" target=\"_blank\" rel=\"external\">WordPress support page</a> for more details).</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the WordPress export file.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>First, install the <code>hexo-migrator-joomla</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-joomla --save</div></pre></td></tr></table></figure>\n<p>Export your Joomla articles using the <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\" target=\"_blank\" rel=\"external\">J2XML</a> component.</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the Joomla export file.</p>\n","excerpt":"","more":"<h2 id=\"RSS\"><a href=\"#RSS\" class=\"headerlink\" title=\"RSS\"></a>RSS</h2><p>First, install the <code>hexo-migrator-rss</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-rss --save</div></pre></td></tr></table></figure>\n<p>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> can be a file path or URL.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate rss &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Jekyll\"><a href=\"#Jekyll\" class=\"headerlink\" title=\"Jekyll\"></a>Jekyll</h2><p>Move all files in the Jekyll <code>_posts</code> folder to the <code>source/_posts</code> folder.</p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md</div></pre></td></tr></table></figure>\n<h2 id=\"Octopress\"><a href=\"#Octopress\" class=\"headerlink\" title=\"Octopress\"></a>Octopress</h2><p>Move all files in the Octopress <code>source/_posts</code> folder to <code>source/_posts</code> </p>\n<p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :year-:month-:day-:title.md</div></pre></td></tr></table></figure>\n<h2 id=\"WordPress\"><a href=\"#WordPress\" class=\"headerlink\" title=\"WordPress\"></a>WordPress</h2><p>First, install the <code>hexo-migrator-wordpress</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-wordpress --save</div></pre></td></tr></table></figure>\n<p>Export your WordPress site by going to “Tools” → “Export” → “WordPress” in the WordPress dashboard (see the <a href=\"http://en.support.wordpress.com/export/\">WordPress support page</a> for more details).</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate wordpress &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the WordPress export file.</p>\n<h2 id=\"Joomla\"><a href=\"#Joomla\" class=\"headerlink\" title=\"Joomla\"></a>Joomla</h2><p>First, install the <code>hexo-migrator-joomla</code> plugin.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-migrator-joomla --save</div></pre></td></tr></table></figure>\n<p>Export your Joomla articles using the <a href=\"http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ%3D%3D\">J2XML</a> component.</p>\n<p>Now run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo migrate joomla &lt;<span class=\"built_in\">source</span>&gt;</div></pre></td></tr></table></figure>\n<p>Where <code>source</code> is the file path or URL to the Joomla export file.</p>\n"},{"title":"Permalinks","_content":"You can specify the permalinks for your site in `_config.yml` or in the front-matter for each post.\n\n### Variables\n\nBesides the following variables, you can use any attributes in the permalink.\n\nVariable | Description\n--- | ---\n`:year` | Published year of posts (4-digit)\n`:month` | Published month of posts (2-digit)\n`:i_month` | Published month of posts (Without leading zeros)\n`:day` | Published day of posts (2-digit)\n`:i_day` | Published day of posts (Without leading zeros)\n`:title` | Filename\n`:id` | Post ID\n`:category` | Categories. If the post is uncategorized, it will use the `default_category` value.\n\nYou can define the default value of each variable in the permalink through the `permalink_defaults` setting:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Examples\n\nGiven a post named `hello-world.md` in the `source/_posts` folder with the following content.\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nSetting | Result\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Multi-language Support\n\nTo create a multi-language site, you can modify the `new_post_name` and `permalink` settings like this:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nWhen you create a new post, the post will be saved to:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\nand the URL will be:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n","source":"docs/permalinks.md","raw":"title: Permalinks\n---\nYou can specify the permalinks for your site in `_config.yml` or in the front-matter for each post.\n\n### Variables\n\nBesides the following variables, you can use any attributes in the permalink.\n\nVariable | Description\n--- | ---\n`:year` | Published year of posts (4-digit)\n`:month` | Published month of posts (2-digit)\n`:i_month` | Published month of posts (Without leading zeros)\n`:day` | Published day of posts (2-digit)\n`:i_day` | Published day of posts (Without leading zeros)\n`:title` | Filename\n`:id` | Post ID\n`:category` | Categories. If the post is uncategorized, it will use the `default_category` value.\n\nYou can define the default value of each variable in the permalink through the `permalink_defaults` setting:\n\n``` yaml\npermalink_defaults:\n  lang: en\n```\n\n### Examples\n\nGiven a post named `hello-world.md` in the `source/_posts` folder with the following content.\n\n``` yaml\ntitle: Hello World\ndate: 2013-07-14 17:01:34\ncategories:\n- foo\n- bar\n```\n\nSetting | Result\n--- | ---\n`:year/:month/:day/:title/` | 2013/07/14/hello-world\n`:year-:month-:day-:title.html` | 2013-07-14-hello-world.html\n`:category/:title` | foo/bar/hello-world\n\n### Multi-language Support\n\nTo create a multi-language site, you can modify the `new_post_name` and `permalink` settings like this:\n\n``` yaml\nnew_post_name: :lang/:title.md\npermalink: :lang/:title/\n```\n\nWhen you create a new post, the post will be saved to:\n\n``` bash\n$ hexo new \"Hello World\" --lang tw\n# => source/_posts/tw/Hello-World.md\n```\n\nand the URL will be:\n\n``` plain\nhttp://localhost:4000/tw/hello-world/\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/permalinks.html","comments":1,"layout":"page","_id":"ciy3szh8g0010z714y4lfdg57","content":"<p>You can specify the permalinks for your site in <code>_config.yml</code> or in the front-matter for each post.</p>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><p>Besides the following variables, you can use any attributes in the permalink.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Published year of posts (4-digit)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Published month of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Published month of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Published day of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Published day of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Filename</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>Post ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td>\n</tr>\n</tbody>\n</table>\n<p>You can define the default value of each variable in the permalink through the <code>permalink_defaults</code> setting:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"><span class=\"attr\">  lang:</span> en</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p>Given a post named <code>hello-world.md</code> in the <code>source/_posts</code> folder with the following content.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> Hello World</div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span>:<span class=\"number\">01</span>:<span class=\"number\">34</span></div><div class=\"line\"><span class=\"attr\">categories:</span></div><div class=\"line\"><span class=\"bullet\">-</span> foo</div><div class=\"line\"><span class=\"bullet\">-</span> bar</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h3><p>To create a multi-language site, you can modify the <code>new_post_name</code> and <code>permalink</code> settings like this:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :lang/:title.md</div><div class=\"line\"><span class=\"attr\">permalink:</span> :lang/:title/</div></pre></td></tr></table></figure>\n<p>When you create a new post, the post will be saved to:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</div><div class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></div></pre></td></tr></table></figure>\n<p>and the URL will be:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">http://localhost:4000/tw/hello-world/</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>You can specify the permalinks for your site in <code>_config.yml</code> or in the front-matter for each post.</p>\n<h3 id=\"Variables\"><a href=\"#Variables\" class=\"headerlink\" title=\"Variables\"></a>Variables</h3><p>Besides the following variables, you can use any attributes in the permalink.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year</code></td>\n<td>Published year of posts (4-digit)</td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Published month of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Published month of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Published day of posts (2-digit)</td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Published day of posts (Without leading zeros)</td>\n</tr>\n<tr>\n<td><code>:title</code></td>\n<td>Filename</td>\n</tr>\n<tr>\n<td><code>:id</code></td>\n<td>Post ID</td>\n</tr>\n<tr>\n<td><code>:category</code></td>\n<td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td>\n</tr>\n</tbody>\n</table>\n<p>You can define the default value of each variable in the permalink through the <code>permalink_defaults</code> setting:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"><span class=\"attr\">  lang:</span> en</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p>Given a post named <code>hello-world.md</code> in the <code>source/_posts</code> folder with the following content.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">title:</span> Hello World</div><div class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2013</span><span class=\"bullet\">-07</span><span class=\"bullet\">-14</span> <span class=\"number\">17</span>:<span class=\"number\">01</span>:<span class=\"number\">34</span></div><div class=\"line\"><span class=\"attr\">categories:</span></div><div class=\"line\"><span class=\"bullet\">-</span> foo</div><div class=\"line\"><span class=\"bullet\">-</span> bar</div></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:year/:month/:day/:title/</code></td>\n<td>2013/07/14/hello-world</td>\n</tr>\n<tr>\n<td><code>:year-:month-:day-:title.html</code></td>\n<td>2013-07-14-hello-world.html</td>\n</tr>\n<tr>\n<td><code>:category/:title</code></td>\n<td>foo/bar/hello-world</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h3><p>To create a multi-language site, you can modify the <code>new_post_name</code> and <code>permalink</code> settings like this:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">new_post_name:</span> :lang/:title.md</div><div class=\"line\"><span class=\"attr\">permalink:</span> :lang/:title/</div></pre></td></tr></table></figure>\n<p>When you create a new post, the post will be saved to:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang tw</div><div class=\"line\"><span class=\"comment\"># =&gt; source/_posts/tw/Hello-World.md</span></div></pre></td></tr></table></figure>\n<p>and the URL will be:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">http://localhost:4000/tw/hello-world/</div></pre></td></tr></table></figure>\n"},{"title":"Plugins","_content":"Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:\n\n### Script\n\nIf your plugin is relatively simple, it's recommended to use a script. All you need to do is put your JavaScript files in the `scripts` folder and Hexo will load them during initialization.\n\n### Plugin\n\nIf your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the `node_modules` folder. The name of this folder must begin with `hexo-` or Hexo will ignore it.\n\nYour new folder must contain at least two files: one containing the actual JavaScript code and one `package.json` file that describes the purpose of the plugin and sets its dependencies.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nAt the very least, you should set the `name`, `version` and `main` entries in `package.json`. For example:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nYou'll also need to list your plugin as a dependency in the root `package.json` of your hexo instance in order for Hexo to detect and load it.\n\n### Tools\n\nYou can make use of the official tools provided by Hexo to accelerate development:\n\n- [hexo-fs]：File IO\n- [hexo-util]：Utilities\n- [hexo-i18n]：Localization (i18n)\n- [hexo-pagination]：Generate pagination data\n\n### Publishing\n\nWhen your plugin is ready, you may consider publishing it to the [plugin list](/plugins) to invite other people to start using it. Publishing your own plugins is very similar to [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Edit `source/_data/plugins.yml` and add your plugin. For example:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n","source":"docs/plugins.md","raw":"title: Plugins\n---\nHexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:\n\n### Script\n\nIf your plugin is relatively simple, it's recommended to use a script. All you need to do is put your JavaScript files in the `scripts` folder and Hexo will load them during initialization.\n\n### Plugin\n\nIf your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the `node_modules` folder. The name of this folder must begin with `hexo-` or Hexo will ignore it.\n\nYour new folder must contain at least two files: one containing the actual JavaScript code and one `package.json` file that describes the purpose of the plugin and sets its dependencies.\n\n``` plain\n.\n├── index.js\n└── package.json\n```\n\nAt the very least, you should set the `name`, `version` and `main` entries in `package.json`. For example:\n\n``` json package.json\n{\n  \"name\": \"hexo-my-plugin\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index\"\n}\n```\n\nYou'll also need to list your plugin as a dependency in the root `package.json` of your hexo instance in order for Hexo to detect and load it.\n\n### Tools\n\nYou can make use of the official tools provided by Hexo to accelerate development:\n\n- [hexo-fs]：File IO\n- [hexo-util]：Utilities\n- [hexo-i18n]：Localization (i18n)\n- [hexo-pagination]：Generate pagination data\n\n### Publishing\n\nWhen your plugin is ready, you may consider publishing it to the [plugin list](/plugins) to invite other people to start using it. Publishing your own plugins is very similar to [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    {% code %}\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    {% endcode %}\n\n3. Edit `source/_data/plugins.yml` and add your plugin. For example:\n\n    {% code %}\n    - name: hexo-server\n      description: Server module for Hexo.\n      link: https://github.com/hexojs/hexo-server\n      tags:\n        - official\n        - server\n        - console\n    {% endcode %}\n\n4. Push the branch.\n5. Create a pull request and describe the change.\n\n[hexo-fs]: https://github.com/hexojs/hexo-fs\n[hexo-util]: https://github.com/hexojs/hexo-util\n[hexo-i18n]: https://github.com/hexojs/hexo-i18n\n[hexo-pagination]: https://github.com/hexojs/hexo-pagination\n[hexojs/site]: https://github.com/hexojs/site\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/plugins.html","comments":1,"layout":"page","_id":"ciy3szh8i0011z714nea7uba2","content":"<p>Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:</p>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><p>If your plugin is relatively simple, it’s recommended to use a script. All you need to do is put your JavaScript files in the <code>scripts</code> folder and Hexo will load them during initialization.</p>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><p>If your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the <code>node_modules</code> folder. The name of this folder must begin with <code>hexo-</code> or Hexo will ignore it.</p>\n<p>Your new folder must contain at least two files: one containing the actual JavaScript code and one <code>package.json</code> file that describes the purpose of the plugin and sets its dependencies.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── index.js</div><div class=\"line\">└── package.json</div></pre></td></tr></table></figure>\n<p>At the very least, you should set the <code>name</code>, <code>version</code> and <code>main</code> entries in <code>package.json</code>. For example:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>You’ll also need to list your plugin as a dependency in the root <code>package.json</code> of your hexo instance in order for Hexo to detect and load it.</p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><p>You can make use of the official tools provided by Hexo to accelerate development:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\" target=\"_blank\" rel=\"external\">hexo-fs</a>：File IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\" target=\"_blank\" rel=\"external\">hexo-util</a>：Utilities</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\" target=\"_blank\" rel=\"external\">hexo-i18n</a>：Localization (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\" target=\"_blank\" rel=\"external\">hexo-pagination</a>：Generate pagination data</li>\n</ul>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When your plugin is ready, you may consider publishing it to the <a href=\"/plugins\">plugin list</a> to invite other people to start using it. Publishing your own plugins is very similar to <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"external\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">- name: hexo-server</div><div class=\"line\">  description: Server module for Hexo.</div><div class=\"line\">  link: https://github.com/hexojs/hexo-server</div><div class=\"line\">  tags:</div><div class=\"line\">    - official</div><div class=\"line\">    - server</div><div class=\"line\">    - console</div></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n","excerpt":"","more":"<p>Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:</p>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><p>If your plugin is relatively simple, it’s recommended to use a script. All you need to do is put your JavaScript files in the <code>scripts</code> folder and Hexo will load them during initialization.</p>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><p>If your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the <code>node_modules</code> folder. The name of this folder must begin with <code>hexo-</code> or Hexo will ignore it.</p>\n<p>Your new folder must contain at least two files: one containing the actual JavaScript code and one <code>package.json</code> file that describes the purpose of the plugin and sets its dependencies.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── index.js</div><div class=\"line\">└── package.json</div></pre></td></tr></table></figure>\n<p>At the very least, you should set the <code>name</code>, <code>version</code> and <code>main</code> entries in <code>package.json</code>. For example:</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-my-plugin\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"main\"</span>: <span class=\"string\">\"index\"</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>You’ll also need to list your plugin as a dependency in the root <code>package.json</code> of your hexo instance in order for Hexo to detect and load it.</p>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><p>You can make use of the official tools provided by Hexo to accelerate development:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-fs\">hexo-fs</a>：File IO</li>\n<li><a href=\"https://github.com/hexojs/hexo-util\">hexo-util</a>：Utilities</li>\n<li><a href=\"https://github.com/hexojs/hexo-i18n\">hexo-i18n</a>：Localization (i18n)</li>\n<li><a href=\"https://github.com/hexojs/hexo-pagination\">hexo-pagination</a>：Generate pagination data</li>\n</ul>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When your plugin is ready, you may consider publishing it to the <a href=\"/plugins\">plugin list</a> to invite other people to start using it. Publishing your own plugins is very similar to <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">- name: hexo-server</div><div class=\"line\">  description: Server module for Hexo.</div><div class=\"line\">  link: https://github.com/hexojs/hexo-server</div><div class=\"line\">  tags:</div><div class=\"line\">    - official</div><div class=\"line\">    - server</div><div class=\"line\">    - console</div></pre></td></tr></table></figure>\n</li>\n<li><p>Push the branch.</p>\n</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n"},{"title":"Server","_content":"## [hexo-server]\n\nWith the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install [hexo-server].\n\n``` bash\n$ npm install hexo-server --save\n```\n\nOnce the server has been installed, run the following command to start the server. Your website will run at `http://localhost:4000` by default. When the server is running, Hexo will watch for file changes and update automatically so it's not necessary to manually restart the server.\n\n``` bash\n$ hexo server\n```\n\nIf you want to change the port or if you're encountering `EADDRINUSE` errors, use the `-p` option to set a different port.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Static Mode\n\nIn static mode, only files in the `public` folder will be served and file watching is disabled. You have to run `hexo generate` before starting the server. Usually used in production.\n\n``` bash\n$ hexo server -s\n```\n\n### Custom IP\n\nHexo runs the server at `0.0.0.0` by default. You can override the default IP setting.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] is a zero-config Rack server for Mac.\n\n### Install\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Setup\n\nSymlink the folder into `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nYour website will be up and running at `http://myapp.dev`. The URL is based on the name of the symlink.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n","source":"docs/server.md","raw":"title: Server\n---\n## [hexo-server]\n\nWith the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install [hexo-server].\n\n``` bash\n$ npm install hexo-server --save\n```\n\nOnce the server has been installed, run the following command to start the server. Your website will run at `http://localhost:4000` by default. When the server is running, Hexo will watch for file changes and update automatically so it's not necessary to manually restart the server.\n\n``` bash\n$ hexo server\n```\n\nIf you want to change the port or if you're encountering `EADDRINUSE` errors, use the `-p` option to set a different port.\n\n``` bash\n$ hexo server -p 5000\n```\n\n### Static Mode\n\nIn static mode, only files in the `public` folder will be served and file watching is disabled. You have to run `hexo generate` before starting the server. Usually used in production.\n\n``` bash\n$ hexo server -s\n```\n\n### Custom IP\n\nHexo runs the server at `0.0.0.0` by default. You can override the default IP setting.\n\n``` bash\n$ hexo server -i 192.168.1.1\n```\n\n## Pow\n\n[Pow] is a zero-config Rack server for Mac.\n\n### Install\n\n``` bash\n$ curl get.pow.cx | sh\n```\n\n### Setup\n\nSymlink the folder into `~/.pow`\n\n``` bash\n$ cd ~/.pow\n$ ln -s /path/to/myapp\n```\n\nYour website will be up and running at `http://myapp.dev`. The URL is based on the name of the symlink.\n\n[hexo-server]: https://github.com/hexojs/hexo-server\n[Pow]: http://pow.cx/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/server.html","comments":1,"layout":"page","_id":"ciy3szh8j0012z714wijgmcm7","content":"<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"external\">hexo-server</a></h2><p>With the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install <a href=\"https://github.com/hexojs/hexo-server\" target=\"_blank\" rel=\"external\">hexo-server</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div></pre></td></tr></table></figure>\n<p>Once the server has been installed, run the following command to start the server. Your website will run at <code>http://localhost:4000</code> by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -p 5000</div></pre></td></tr></table></figure>\n<h3 id=\"Static-Mode\"><a href=\"#Static-Mode\" class=\"headerlink\" title=\"Static Mode\"></a>Static Mode</h3><p>In static mode, only files in the <code>public</code> folder will be served and file watching is disabled. You have to run <code>hexo generate</code> before starting the server. Usually used in production.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server <span class=\"_\">-s</span></div></pre></td></tr></table></figure>\n<h3 id=\"Custom-IP\"><a href=\"#Custom-IP\" class=\"headerlink\" title=\"Custom IP\"></a>Custom IP</h3><p>Hexo runs the server at <code>0.0.0.0</code> by default. You can override the default IP setting.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -i 192.168.1.1</div></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\" target=\"_blank\" rel=\"external\">Pow</a> is a zero-config Rack server for Mac.</p>\n<h3 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ curl get.pow.cx | sh</div></pre></td></tr></table></figure>\n<h3 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h3><p>Symlink the folder into <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</div><div class=\"line\">$ ln <span class=\"_\">-s</span> /path/to/myapp</div></pre></td></tr></table></figure>\n<p>Your website will be up and running at <code>http://myapp.dev</code>. The URL is based on the name of the symlink.</p>\n","excerpt":"","more":"<h2 id=\"hexo-server\"><a href=\"#hexo-server\" class=\"headerlink\" title=\"hexo-server\"></a><a href=\"https://github.com/hexojs/hexo-server\">hexo-server</a></h2><p>With the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install <a href=\"https://github.com/hexojs/hexo-server\">hexo-server</a>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div></pre></td></tr></table></figure>\n<p>Once the server has been installed, run the following command to start the server. Your website will run at <code>http://localhost:4000</code> by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -p 5000</div></pre></td></tr></table></figure>\n<h3 id=\"Static-Mode\"><a href=\"#Static-Mode\" class=\"headerlink\" title=\"Static Mode\"></a>Static Mode</h3><p>In static mode, only files in the <code>public</code> folder will be served and file watching is disabled. You have to run <code>hexo generate</code> before starting the server. Usually used in production.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server <span class=\"_\">-s</span></div></pre></td></tr></table></figure>\n<h3 id=\"Custom-IP\"><a href=\"#Custom-IP\" class=\"headerlink\" title=\"Custom IP\"></a>Custom IP</h3><p>Hexo runs the server at <code>0.0.0.0</code> by default. You can override the default IP setting.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -i 192.168.1.1</div></pre></td></tr></table></figure>\n<h2 id=\"Pow\"><a href=\"#Pow\" class=\"headerlink\" title=\"Pow\"></a>Pow</h2><p><a href=\"http://pow.cx/\">Pow</a> is a zero-config Rack server for Mac.</p>\n<h3 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ curl get.pow.cx | sh</div></pre></td></tr></table></figure>\n<h3 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h3><p>Symlink the folder into <code>~/.pow</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> ~/.pow</div><div class=\"line\">$ ln <span class=\"_\">-s</span> /path/to/myapp</div></pre></td></tr></table></figure>\n<p>Your website will be up and running at <code>http://myapp.dev</code>. The URL is based on the name of the symlink.</p>\n"},{"title":"Setup","_content":"Once Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.\n","source":"docs/setup.md","raw":"title: Setup\n---\nOnce Hexo is installed, run the following commands to initialise Hexo in the target `<folder>`.\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\nOnce initialised, here's what your project folder will look like:\n\n``` plain\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\nSite [configuration](configuration.html) file. You can configure most settings here.\n\n### package.json\n\nApplication data. The [EJS](http://embeddedjs.com/), [Stylus](http://learnboost.github.io/stylus/) and [Markdown](http://daringfireball.net/projects/markdown/) renderers are installed by default. If you want, you can uninstall them later.\n\n``` json package.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### scaffolds\n\n[Scaffold](writing.html#Scaffolds) folder. When you create a new post, Hexo bases the new file on the scaffold.\n\n### source\n\nSource folder. This is where you put your site's content. Hexo ignores hidden files and files or folders whose names are prefixed with `_` (underscore) - except the `_posts` folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the `public` folder, while other files will simply be copied.\n\n### themes\n\n[Theme](themes.html) folder. Hexo generates a static website by combining the site contents with the theme.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/setup.html","comments":1,"layout":"page","_id":"ciy3szh8l0013z714w3suljsb","content":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\" target=\"_blank\" rel=\"external\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\" target=\"_blank\" rel=\"external\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\" target=\"_blank\" rel=\"external\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n","excerpt":"","more":"<p>Once Hexo is installed, run the following commands to initialise Hexo in the target <code>&lt;folder&gt;</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<p>Once initialised, here’s what your project folder will look like:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds</div><div class=\"line\">├── source</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes</div></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Site <a href=\"configuration.html\">configuration</a> file. You can configure most settings here.</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>Application data. The <a href=\"http://embeddedjs.com/\">EJS</a>, <a href=\"http://learnboost.github.io/stylus/\">Stylus</a> and <a href=\"http://daringfireball.net/projects/markdown/\">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p>\n<figure class=\"highlight json\"><figcaption><span>package.json</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"hexo-site\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"private\"</span>: <span class=\"literal\">true</span>,</div><div class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"\"</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"hexo\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-archive\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-category\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-index\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-generator-tag\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-ejs\"</span>: <span class=\"string\">\"^0.1.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-stylus\"</span>: <span class=\"string\">\"^0.2.0\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-renderer-marked\"</span>: <span class=\"string\">\"^0.2.4\"</span>,</div><div class=\"line\">    <span class=\"attr\">\"hexo-server\"</span>: <span class=\"string\">\"^0.1.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><a href=\"writing.html#Scaffolds\">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><a href=\"themes.html\">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>\n"},{"title":"Tag Plugins","_content":"Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.\n\n## Block Quote\n\nPerfect for adding quotes to your post, with optional author, source and title information.\n\n**Alias:** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### Examples\n\n**No arguments. Plain blockquote.**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**Quote from a book**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Quote from Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**Quote from an article on the web**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\nUseful feature for adding code snippets to your post.\n\n**Alias:** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Examples\n\n**A plain code block**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**Specifying the language**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**Adding a caption to the code block**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**Adding a caption and a URL**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\nThis is identical to using a code block, but instead uses three backticks to delimit the block.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\nTo add pull quotes to your posts:\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nTo embed a jsFiddle snippet:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nTo embed a Gist snippet:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nTo embed an iframe:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\nInserts an image with specified size.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\nInserts a link with `target=\"_blank\"` attribute.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\nInserts code snippets in `source/downloads/code` folder.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nInserts a YouTube video.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nInserts a Vimeo video.\n\n```\n{% vimeo video_id %}\n```\n\n## Include Posts\n\nInclude links to other posts.\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## Include Assets\n\nInclude post assets.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\nIf certain content is causing processing issues in your posts, wrap it with the `raw` tag to avoid rendering errors.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n","source":"docs/tag-plugins.md","raw":"title: Tag Plugins\n---\nTag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.\n\n## Block Quote\n\nPerfect for adding quotes to your post, with optional author, source and title information.\n\n**Alias:** quote\n\n```\n{% blockquote [author[, source]] [link] [source_link_title] %}\ncontent\n{% endblockquote %}\n```\n\n### Examples\n\n**No arguments. Plain blockquote.**\n\n```\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n```\n\n{% blockquote %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.\n{% endblockquote %}\n\n**Quote from a book**\n\n```\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n```\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n**Quote from Twitter**\n\n```\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n```\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n**Quote from an article on the web**\n\n```\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n```\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\nUseful feature for adding code snippets to your post.\n\n**Alias:** code\n\n```\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n### Examples\n\n**A plain code block**\n\n```\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n```\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n**Specifying the language**\n\n```\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n```\n\n{% codeblock lang:objc %}\n[rectangle setX: 10 y: 10 width: 20 height: 20];\n{% endcodeblock %}\n\n**Adding a caption to the code block**\n\n```\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n```\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n**Adding a caption and a URL**\n\n```\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n```\n\n{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}\n_.compact([0, 1, false, 2, '', 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n## Backtick Code Block\n\nThis is identical to using a code block, but instead uses three backticks to delimit the block.\n\n{% raw %}\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n{% endraw %}\n\n## Pull Quote\n\nTo add pull quotes to your posts:\n\n```\n{% pullquote [class] %}\ncontent\n{% endpullquote %}\n```\n\n## jsFiddle\n\nTo embed a jsFiddle snippet:\n\n```\n{% jsfiddle shorttag [tabs] [skin] [width] [height] %}\n```\n\n## Gist\n\nTo embed a Gist snippet:\n\n```\n{% gist gist_id [filename] %}\n```\n\n## iframe\n\nTo embed an iframe:\n\n```\n{% iframe url [width] [height] %}\n```\n\n## Image\n\nInserts an image with specified size.\n\n```\n{% img [class names] /path/to/image [width] [height] [title text [alt text]] %}\n```\n\n## Link\n\nInserts a link with `target=\"_blank\"` attribute.\n\n```\n{% link text url [external] [title] %}\n```\n\n## Include Code\n\nInserts code snippets in `source/downloads/code` folder.\n\n```\n{% include_code [title] [lang:language] path/to/file %}\n```\n\n## YouTube\n\nInserts a YouTube video.\n\n```\n{% youtube video_id %}\n```\n\n## Vimeo\n\nInserts a Vimeo video.\n\n```\n{% vimeo video_id %}\n```\n\n## Include Posts\n\nInclude links to other posts.\n\n```\n{% post_path slug %}\n{% post_link slug [title] %}\n```\n\n## Include Assets\n\nInclude post assets.\n\n```\n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n```\n\n## Raw\n\nIf certain content is causing processing issues in your posts, wrap it with the `raw` tag to avoid rendering errors.\n\n```\n{% raw %}\ncontent\n{% endraw %}\n```\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/tag-plugins.html","comments":1,"layout":"page","_id":"ciy3szh8o0014z714rpf36sjp","content":"<p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.</p>\n<p><strong>Alias:</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>No arguments. Plain blockquote.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote %&#125;</div><div class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>Quote from a book</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</div><div class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Quote from Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</div><div class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"external\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"external\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>Quote from an article on the web</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</div><div class=\"line\">Every interaction is both precious and an opportunity to delight.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"external\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>Useful feature for adding code snippets to your post.</p>\n<p><strong>Alias:</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</div><div class=\"line\">code snippet</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>A plain code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock %&#125;</div><div class=\"line\">alert(&apos;Hello World!&apos;);</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">alert(&apos;Hello World!&apos;);</div></pre></td></tr></table></figure>\n<p><strong>Specifying the language</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock lang:objc %&#125;</div><div class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><div class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</div></pre></td></tr></table></figure>\n<p><strong>Adding a caption to the code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock Array.map %&#125;</div><div class=\"line\">array.map(callback[, thisArg])</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">array.map(callback[, thisArg])</div></pre></td></tr></table></figure>\n<p><strong>Adding a caption and a URL</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</div><div class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class=\"line\">=&gt; [1, 2, 3]</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\" target=\"_blank\" rel=\"external\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class=\"line\">=&gt; [1, 2, 3]</div></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>To add pull quotes to your posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% pullquote [class] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endpullquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>To embed a jsFiddle snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>To embed a Gist snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% gist gist_id [filename] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>To embed an iframe:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% iframe url [width] [height] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>Inserts an image with specified size.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>Inserts a link with <code>target=&quot;_blank&quot;</code> attribute.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% link text url [external] [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>Inserts code snippets in <code>source/downloads/code</code> folder.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>Inserts a YouTube video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% youtube video_id %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Inserts a Vimeo video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% vimeo video_id %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Posts\"><a href=\"#Include-Posts\" class=\"headerlink\" title=\"Include Posts\"></a>Include Posts</h2><p>Include links to other posts.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% post_path slug %&#125;</div><div class=\"line\">&#123;% post_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Assets\"><a href=\"#Include-Assets\" class=\"headerlink\" title=\"Include Assets\"></a>Include Assets</h2><p>Include post assets.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_path slug %&#125;</div><div class=\"line\">&#123;% asset_img slug [title] %&#125;</div><div class=\"line\">&#123;% asset_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>If certain content is causing processing issues in your posts, wrap it with the <code>raw</code> tag to avoid rendering errors.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% raw %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endraw %&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.</p>\n<p><strong>Alias:</strong> quote</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>No arguments. Plain blockquote.</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote %&#125;</div><div class=\"line\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>\n</blockquote>\n<p><strong>Quote from a book</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote David Levithan, Wide Awake %&#125;</div><div class=\"line\">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<p><strong>Quote from Twitter</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;</div><div class=\"line\">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<p><strong>Quote from an article on the web</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;</div><div class=\"line\">Every interaction is both precious and an opportunity to delight.</div><div class=\"line\">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>Useful feature for adding code snippets to your post.</p>\n<p><strong>Alias:</strong> code</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</div><div class=\"line\">code snippet</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Examples-1\"><a href=\"#Examples-1\" class=\"headerlink\" title=\"Examples\"></a>Examples</h3><p><strong>A plain code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock %&#125;</div><div class=\"line\">alert(&apos;Hello World!&apos;);</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">alert(&apos;Hello World!&apos;);</div></pre></td></tr></table></figure>\n<p><strong>Specifying the language</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock lang:objc %&#125;</div><div class=\"line\">[rectangle setX: 10 y: 10 width: 20 height: 20];</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight objc\"><table><tr><td class=\"code\"><pre><div class=\"line\">[rectangle setX: <span class=\"number\">10</span> y: <span class=\"number\">10</span> width: <span class=\"number\">20</span> height: <span class=\"number\">20</span>];</div></pre></td></tr></table></figure>\n<p><strong>Adding a caption to the code block</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock Array.map %&#125;</div><div class=\"line\">array.map(callback[, thisArg])</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">array.map(callback[, thisArg])</div></pre></td></tr></table></figure>\n<p><strong>Adding a caption and a URL</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;</div><div class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class=\"line\">=&gt; [1, 2, 3]</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>_.compact</span><a href=\"http://underscorejs.org/#compact\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class=\"line\">=&gt; [1, 2, 3]</div></pre></td></tr></table></figure>\n<h2 id=\"Backtick-Code-Block\"><a href=\"#Backtick-Code-Block\" class=\"headerlink\" title=\"Backtick Code Block\"></a>Backtick Code Block</h2><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>\n\n&#96`` [language] [title] [url] [link text]\ncode snippet\n&#96;``\n\n<h2 id=\"Pull-Quote\"><a href=\"#Pull-Quote\" class=\"headerlink\" title=\"Pull Quote\"></a>Pull Quote</h2><p>To add pull quotes to your posts:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% pullquote [class] %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endpullquote %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"jsFiddle\"><a href=\"#jsFiddle\" class=\"headerlink\" title=\"jsFiddle\"></a>jsFiddle</h2><p>To embed a jsFiddle snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% jsfiddle shorttag [tabs] [skin] [width] [height] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Gist\"><a href=\"#Gist\" class=\"headerlink\" title=\"Gist\"></a>Gist</h2><p>To embed a Gist snippet:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% gist gist_id [filename] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"iframe\"><a href=\"#iframe\" class=\"headerlink\" title=\"iframe\"></a>iframe</h2><p>To embed an iframe:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% iframe url [width] [height] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><p>Inserts an image with specified size.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>Inserts a link with <code>target=&quot;_blank&quot;</code> attribute.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% link text url [external] [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Code\"><a href=\"#Include-Code\" class=\"headerlink\" title=\"Include Code\"></a>Include Code</h2><p>Inserts code snippets in <code>source/downloads/code</code> folder.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% include_code [title] [lang:language] path/to/file %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"YouTube\"><a href=\"#YouTube\" class=\"headerlink\" title=\"YouTube\"></a>YouTube</h2><p>Inserts a YouTube video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% youtube video_id %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Vimeo\"><a href=\"#Vimeo\" class=\"headerlink\" title=\"Vimeo\"></a>Vimeo</h2><p>Inserts a Vimeo video.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% vimeo video_id %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Posts\"><a href=\"#Include-Posts\" class=\"headerlink\" title=\"Include Posts\"></a>Include Posts</h2><p>Include links to other posts.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% post_path slug %&#125;</div><div class=\"line\">&#123;% post_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-Assets\"><a href=\"#Include-Assets\" class=\"headerlink\" title=\"Include Assets\"></a>Include Assets</h2><p>Include post assets.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% asset_path slug %&#125;</div><div class=\"line\">&#123;% asset_img slug [title] %&#125;</div><div class=\"line\">&#123;% asset_link slug [title] %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Raw\"><a href=\"#Raw\" class=\"headerlink\" title=\"Raw\"></a>Raw</h2><p>If certain content is causing processing issues in your posts, wrap it with the <code>raw</code> tag to avoid rendering errors.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% raw %&#125;</div><div class=\"line\">content</div><div class=\"line\">&#123;% endraw %&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Templates","_content":"Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an `index` template.\n\nTemplate | Page | Fallback\n--- | --- | ---\n`index` | Home page |\n`post` | Posts | `index`\n`page` | Pages | `index`\n`archive` | Archives | `index`\n`category` | Category archives | `archive`\n`tag` | Tag archives | `archive`\n\n## Layouts\n\nWhen pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a `layout` to declare these structural similarities. Every layout file should contain a `body` variable to display the contents of the template in question. For example:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\nBy default, the `layout` template is used by all other templates. You can specify additional layouts in the front-matter or set it to `false` to disable it. It's even possible to build a complex nested structure by including more layout templates in your top layout.\n\n## Partials\n\nPartials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:\n\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Local Variables\n\nYou can define local variables in templates and use them in other templates.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Optimization\n\nIf your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo's file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.\n\nThis feature was borrowed from [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching). It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.\n\nFragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nThough it may be easier to use partials:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nDon't use fragment caching when the `relative_link` setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.\n","source":"docs/templates.md","raw":"title: Templates\n---\nTemplates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an `index` template.\n\nTemplate | Page | Fallback\n--- | --- | ---\n`index` | Home page |\n`post` | Posts | `index`\n`page` | Pages | `index`\n`archive` | Archives | `index`\n`category` | Category archives | `archive`\n`tag` | Tag archives | `archive`\n\n## Layouts\n\nWhen pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a `layout` to declare these structural similarities. Every layout file should contain a `body` variable to display the contents of the template in question. For example:\n\n``` html index.ejs\nindex\n```\n\n``` html layout.ejs\n<!DOCTYPE html>\n<html>\n  <body><%- body %></body>\n</html>\n```\n\nyields:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <body>index</body>\n</html>\n```\n\nBy default, the `layout` template is used by all other templates. You can specify additional layouts in the front-matter or set it to `false` to disable it. It's even possible to build a complex nested structure by including more layout templates in your top layout.\n\n## Partials\n\nPartials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:\n\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= config.title %></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Local Variables\n\nYou can define local variables in templates and use them in other templates.\n\n``` html partial/header.ejs\n<h1 id=\"logo\"><%= title></h1>\n```\n\n``` html index.ejs\n<%- partial('partial/header', {title: 'Hello World'}) %>\n<div id=\"content\">Home page</div>\n```\n\nyields:\n\n``` html\n<h1 id=\"logo\">Hello World</h1>\n<div id=\"content\">Home page</div>\n```\n\n## Optimization\n\nIf your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo's file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.\n\nThis feature was borrowed from [Ruby on Rails](http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching). It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.\n\nFragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n});\n```\n\nThough it may be easier to use partials:\n\n``` js\n<%- partial('header', {}, {cache: true});\n```\n\nDon't use fragment caching when the `relative_link` setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/templates.html","comments":1,"layout":"page","_id":"ciy3szh8q0015z714anc1we5r","content":"<p>Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an <code>index</code> template.</p>\n<table>\n<thead>\n<tr>\n<th>Template</th>\n<th>Page</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Home page</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Posts</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Pages</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Archives</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Category archives</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tag archives</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Layouts\"><a href=\"#Layouts\" class=\"headerlink\" title=\"Layouts\"></a>Layouts</h2><p>When pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a <code>layout</code> to declare these structural similarities. Every layout file should contain a <code>body</code> variable to display the contents of the template in question. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">index</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>By default, the <code>layout</code> template is used by all other templates. You can specify additional layouts in the front-matter or set it to <code>false</code> to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout.</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Local-Variables\"><a href=\"#Local-Variables\" class=\"headerlink\" title=\"Local Variables\"></a>Local Variables</h2><p>You can define local variables in templates and use them in other templates.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Optimization\"><a href=\"#Optimization\" class=\"headerlink\" title=\"Optimization\"></a>Optimization</h2><p>If your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo’s file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.</p>\n<p>This feature was borrowed from <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\" target=\"_blank\" rel=\"external\">Ruby on Rails</a>. It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.</p>\n<p>Fragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Though it may be easier to use partials:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n<p>Don’t use fragment caching when the <code>relative_link</code> setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.</p>\n","excerpt":"","more":"<p>Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an <code>index</code> template.</p>\n<table>\n<thead>\n<tr>\n<th>Template</th>\n<th>Page</th>\n<th>Fallback</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>index</code></td>\n<td>Home page</td>\n<td></td>\n</tr>\n<tr>\n<td><code>post</code></td>\n<td>Posts</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Pages</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>archive</code></td>\n<td>Archives</td>\n<td><code>index</code></td>\n</tr>\n<tr>\n<td><code>category</code></td>\n<td>Category archives</td>\n<td><code>archive</code></td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td>Tag archives</td>\n<td><code>archive</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Layouts\"><a href=\"#Layouts\" class=\"headerlink\" title=\"Layouts\"></a>Layouts</h2><p>When pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a <code>layout</code> to declare these structural similarities. Every layout file should contain a <code>body</code> variable to display the contents of the template in question. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\">index</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>index<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>By default, the <code>layout</code> template is used by all other templates. You can specify additional layouts in the front-matter or set it to <code>false</code> to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout.</p>\n<h2 id=\"Partials\"><a href=\"#Partials\" class=\"headerlink\" title=\"Partials\"></a>Partials</h2><p>Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">config.title</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>') %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>My Site<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Local-Variables\"><a href=\"#Local-Variables\" class=\"headerlink\" title=\"Local Variables\"></a>Local Variables</h2><p>You can define local variables in templates and use them in other templates.</p>\n<figure class=\"highlight html\"><figcaption><span>partial/header.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><figcaption><span>index.ejs</span></figcaption><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">partial</span>/<span class=\"attr\">header</span>', &#123;<span class=\"attr\">title:</span> '<span class=\"attr\">Hello</span> <span class=\"attr\">World</span>'&#125;) %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>yields:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logo\"</span>&gt;</span>Hello World<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content\"</span>&gt;</span>Home page<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Optimization\"><a href=\"#Optimization\" class=\"headerlink\" title=\"Optimization\"></a>Optimization</h2><p>If your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo’s file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.</p>\n<p>This feature was borrowed from <a href=\"http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching\">Ruby on Rails</a>. It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.</p>\n<p>Fragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>Though it may be easier to use partials:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;);</div></pre></td></tr></table></figure>\n<p>Don’t use fragment caching when the <code>relative_link</code> setting has been enabled. This may cause issues because relative links can and probably will be different depending on the pages they appear in.</p>\n"},{"title":"Themes","_content":"It's easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the `theme` setting in your site's `_config.yml`. A theme should have the following structure:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nTheme configuration file. Modifying this doesn't require a server restart.\n\n### languages\n\nLanguage folder. See [internationalization (i18n)](internationalization.html) for more info.\n\n### layout\n\nLayout folder. This folder contains the theme's template files, which define the appearance of your website. Hexo provides the [Swig] template engine by default, but you can easily install additional plugins to support alternative engines such as [EJS], [Haml], [Jade], or [Pug]. Hexo chooses the template engine based on the file extension of the template. For example:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nSee [templates](templates.html) for more info.\n\n### scripts\n\nScript folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see [plugins](plugins.html).\n\n### source\n\nSource folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with `_` (underscore).\n\nHexo will process and save all renderable files to the `public` folder. Non-renderable files will be copied to the `public` folder directly.\n\n### Publishing\n\nWhen you have finished building your theme, you can publish it to the [theme list](/themes). Before doing so, you should run the [theme unit test](https://github.com/hexojs/hexo-theme-unit-test) to ensure that everything works. The steps for publishing a theme are very similar to those for [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Edit `source/_data/themes.yml` and add your theme. For example:\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. Add a screenshot (with the same name as the theme) to `source/themes/screenshots`. It must be a 800*500px PNG.\n5. Push the branch.\n6. Create a pull request and describe the change.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: https://github.com/paularmstrong/swig\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[Pug]: https://github.com/maxknee/hexo-render-pug\n[hexojs/site]: https://github.com/hexojs/site\n","source":"docs/themes.md","raw":"title: Themes\n---\nIt's easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the `theme` setting in your site's `_config.yml`. A theme should have the following structure:\n\n``` plain\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\nTheme configuration file. Modifying this doesn't require a server restart.\n\n### languages\n\nLanguage folder. See [internationalization (i18n)](internationalization.html) for more info.\n\n### layout\n\nLayout folder. This folder contains the theme's template files, which define the appearance of your website. Hexo provides the [Swig] template engine by default, but you can easily install additional plugins to support alternative engines such as [EJS], [Haml], [Jade], or [Pug]. Hexo chooses the template engine based on the file extension of the template. For example:\n\n``` plain\nlayout.ejs   - uses EJS\nlayout.swig  - uses Swig\n```\n\nSee [templates](templates.html) for more info.\n\n### scripts\n\nScript folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see [plugins](plugins.html).\n\n### source\n\nSource folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with `_` (underscore).\n\nHexo will process and save all renderable files to the `public` folder. Non-renderable files will be copied to the `public` folder directly.\n\n### Publishing\n\nWhen you have finished building your theme, you can publish it to the [theme list](/themes). Before doing so, you should run the [theme unit test](https://github.com/hexojs/hexo-theme-unit-test) to ensure that everything works. The steps for publishing a theme are very similar to those for [updating documentation](contributing.html#Updating_Documentation).\n\n1. Fork [hexojs/site]\n2. Clone the repository to your computer and install dependencies.\n\n    ```shell\n    $ git clone https://github.com/<username>/site.git\n    $ cd site\n    $ npm install\n    ```\n\n3. Edit `source/_data/themes.yml` and add your theme. For example:\n\n    ```yaml\n    - name: landscape\n      description: A brand new default theme for Hexo.\n      link: https://github.com/hexojs/hexo-theme-landscape\n      preview: http://hexo.io/hexo-theme-landscape\n      tags:\n        - official\n        - responsive\n        - widget\n        - two_column\n        - one_column\n    ```\n\n4. Add a screenshot (with the same name as the theme) to `source/themes/screenshots`. It must be a 800*500px PNG.\n5. Push the branch.\n6. Create a pull request and describe the change.\n\n[EJS]: https://github.com/hexojs/hexo-renderer-ejs\n[Swig]: https://github.com/paularmstrong/swig\n[Haml]: https://github.com/hexojs/hexo-renderer-haml\n[Jade]: https://github.com/hexojs/hexo-renderer-jade\n[Pug]: https://github.com/maxknee/hexo-render-pug\n[hexojs/site]: https://github.com/hexojs/site\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/themes.html","comments":1,"layout":"page","_id":"ciy3szh8r0016z714o48kxswb","content":"<p>It’s easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the <code>theme</code> setting in your site’s <code>_config.yml</code>. A theme should have the following structure:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── languages</div><div class=\"line\">├── layout</div><div class=\"line\">├── scripts</div><div class=\"line\">└── source</div></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Theme configuration file. Modifying this doesn’t require a server restart.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>Language folder. See <a href=\"internationalization.html\">internationalization (i18n)</a> for more info.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>Layout folder. This folder contains the theme’s template files, which define the appearance of your website. Hexo provides the <a href=\"https://github.com/paularmstrong/swig\" target=\"_blank\" rel=\"external\">Swig</a> template engine by default, but you can easily install additional plugins to support alternative engines such as <a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"external\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\" target=\"_blank\" rel=\"external\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"external\">Jade</a>, or <a href=\"https://github.com/maxknee/hexo-render-pug\" target=\"_blank\" rel=\"external\">Pug</a>. Hexo chooses the template engine based on the file extension of the template. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">layout.ejs   - uses EJS</div><div class=\"line\">layout.swig  - uses Swig</div></pre></td></tr></table></figure>\n<p>See <a href=\"templates.html\">templates</a> for more info.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>Script folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see <a href=\"plugins.html\">plugins</a>.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with <code>_</code> (underscore).</p>\n<p>Hexo will process and save all renderable files to the <code>public</code> folder. Non-renderable files will be copied to the <code>public</code> folder directly.</p>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When you have finished building your theme, you can publish it to the <a href=\"/themes\">theme list</a>. Before doing so, you should run the <a href=\"https://github.com/hexojs/hexo-theme-unit-test\" target=\"_blank\" rel=\"external\">theme unit test</a> to ensure that everything works. The steps for publishing a theme are very similar to those for <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\" target=\"_blank\" rel=\"external\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/themes.yml</code> and add your theme. For example:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">- name:</span> landscape</div><div class=\"line\"><span class=\"attr\">  description:</span> A brand new default theme for Hexo.</div><div class=\"line\"><span class=\"attr\">  link:</span> https://github.com/hexojs/hexo-theme-landscape</div><div class=\"line\"><span class=\"attr\">  preview:</span> http://hexo.io/hexo-theme-landscape</div><div class=\"line\"><span class=\"attr\">  tags:</span></div><div class=\"line\"><span class=\"bullet\">    -</span> official</div><div class=\"line\"><span class=\"bullet\">    -</span> responsive</div><div class=\"line\"><span class=\"bullet\">    -</span> widget</div><div class=\"line\"><span class=\"bullet\">    -</span> two_column</div><div class=\"line\"><span class=\"bullet\">    -</span> one_column</div></pre></td></tr></table></figure>\n</li>\n<li><p>Add a screenshot (with the same name as the theme) to <code>source/themes/screenshots</code>. It must be a 800*500px PNG.</p>\n</li>\n<li>Push the branch.</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n","excerpt":"","more":"<p>It’s easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the <code>theme</code> setting in your site’s <code>_config.yml</code>. A theme should have the following structure:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml</div><div class=\"line\">├── languages</div><div class=\"line\">├── layout</div><div class=\"line\">├── scripts</div><div class=\"line\">└── source</div></pre></td></tr></table></figure>\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>Theme configuration file. Modifying this doesn’t require a server restart.</p>\n<h3 id=\"languages\"><a href=\"#languages\" class=\"headerlink\" title=\"languages\"></a>languages</h3><p>Language folder. See <a href=\"internationalization.html\">internationalization (i18n)</a> for more info.</p>\n<h3 id=\"layout\"><a href=\"#layout\" class=\"headerlink\" title=\"layout\"></a>layout</h3><p>Layout folder. This folder contains the theme’s template files, which define the appearance of your website. Hexo provides the <a href=\"https://github.com/paularmstrong/swig\">Swig</a> template engine by default, but you can easily install additional plugins to support alternative engines such as <a href=\"https://github.com/hexojs/hexo-renderer-ejs\">EJS</a>, <a href=\"https://github.com/hexojs/hexo-renderer-haml\">Haml</a>, <a href=\"https://github.com/hexojs/hexo-renderer-jade\">Jade</a>, or <a href=\"https://github.com/maxknee/hexo-render-pug\">Pug</a>. Hexo chooses the template engine based on the file extension of the template. For example:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">layout.ejs   - uses EJS</div><div class=\"line\">layout.swig  - uses Swig</div></pre></td></tr></table></figure>\n<p>See <a href=\"templates.html\">templates</a> for more info.</p>\n<h3 id=\"scripts\"><a href=\"#scripts\" class=\"headerlink\" title=\"scripts\"></a>scripts</h3><p>Script folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see <a href=\"plugins.html\">plugins</a>.</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>Source folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with <code>_</code> (underscore).</p>\n<p>Hexo will process and save all renderable files to the <code>public</code> folder. Non-renderable files will be copied to the <code>public</code> folder directly.</p>\n<h3 id=\"Publishing\"><a href=\"#Publishing\" class=\"headerlink\" title=\"Publishing\"></a>Publishing</h3><p>When you have finished building your theme, you can publish it to the <a href=\"/themes\">theme list</a>. Before doing so, you should run the <a href=\"https://github.com/hexojs/hexo-theme-unit-test\">theme unit test</a> to ensure that everything works. The steps for publishing a theme are very similar to those for <a href=\"contributing.html#Updating_Documentation\">updating documentation</a>.</p>\n<ol>\n<li>Fork <a href=\"https://github.com/hexojs/site\">hexojs/site</a></li>\n<li><p>Clone the repository to your computer and install dependencies.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/&lt;username&gt;/site.git</div><div class=\"line\">$ cd site</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>Edit <code>source/_data/themes.yml</code> and add your theme. For example:</p>\n <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">- name:</span> landscape</div><div class=\"line\"><span class=\"attr\">  description:</span> A brand new default theme for Hexo.</div><div class=\"line\"><span class=\"attr\">  link:</span> https://github.com/hexojs/hexo-theme-landscape</div><div class=\"line\"><span class=\"attr\">  preview:</span> http://hexo.io/hexo-theme-landscape</div><div class=\"line\"><span class=\"attr\">  tags:</span></div><div class=\"line\"><span class=\"bullet\">    -</span> official</div><div class=\"line\"><span class=\"bullet\">    -</span> responsive</div><div class=\"line\"><span class=\"bullet\">    -</span> widget</div><div class=\"line\"><span class=\"bullet\">    -</span> two_column</div><div class=\"line\"><span class=\"bullet\">    -</span> one_column</div></pre></td></tr></table></figure>\n</li>\n<li><p>Add a screenshot (with the same name as the theme) to <code>source/themes/screenshots</code>. It must be a 800*500px PNG.</p>\n</li>\n<li>Push the branch.</li>\n<li>Create a pull request and describe the change.</li>\n</ol>\n"},{"title":"Troubleshooting","_content":"In case you're experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn't help you solve your problem, try doing a search on [GitHub](https://github.com/hexojs/hexo/issues) or our [Google Group](https://groups.google.com/group/hexo).\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nWrap the string with quotations if it contains colons.\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nMake sure you are using soft tabs and add a space after colons.\n\nYou can see [YAML Spec](http://www.yaml.org/spec/1.2/spec.html) for more info.\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nThough Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Process Out of Memory\n\nWhen you encounter this error during generation:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nIncrease Node.js heap memory size by changing the first line of `hexo-cli` (`which hexo` to look for the file).\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Git Deployment Problems\n\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nMake sure you have [set up git](https://help.github.com/articles/set-up-git) on your computer properly or try to use HTTPS repository URL instead.\n\n## Server Problems\n\n``` plain\nError: listen EADDRINUSE\n```\n\nYou may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the `port` setting or start the Hexo server with the `-p` flag.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Plugin Installation Problems\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nThis error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.\n\n## Error with DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nDTrace install may have issue, use this:\n```sh\n$ npm install hexo --no-optional\n```\nSee [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n## Iterate Data Model on Jade or Swig\n\nHexo uses [Warehouse] for its data model. It's not an array so you may have to transform objects into iterables.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Data Not Updated\n\nSome data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.\n\n``` bash\n$ hexo clean\n```\n\n## No command is executed\n\nWhen you can't get any command except `help`, `init` and `version` to work and you keep getting content of `hexo help`, it could be caused by a missing `hexo` in `package.json`:\n\n```json\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n## Escape Contents\n\nHexo uses [Nunjucks] to render posts ([Swig] was used in older version, which share a similar syntax). Content wrapped with `{% raw %}{{ }}{% endraw %}` or `{% raw %}{% %}{% endraw %}` will get parsed and may cause problems. You can wrap sensitive content with the `raw` tag plugin.\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nSometimes when running the command `$ hexo server` it returns an error:\n```\nError: watch ENOSPC ...\n```\nIt can be fixed by running `$ npm dedupe` or, if that doesn't help, try the following in the Linux console:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\nThis will increase the limit for the number of files you can watch.\n\n## EMPERM Error (Windows Subsystem for Linux)\n\nWhen running `$ hexo server` in a BashOnWindows environment, it returns the following error:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\nUnfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo's server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:\n``` sh\n$ hexo generate\n$ hexo server -s\n```\nThis is [a known BashOnWindows issue](https://github.com/Microsoft/BashOnWindows/issues/216), and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on [the issue's UserVoice suggestion page](https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify).\n\n[Warehouse]: https://github.com/tommy351/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n","source":"docs/troubleshooting.md","raw":"title: Troubleshooting\n---\nIn case you're experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn't help you solve your problem, try doing a search on [GitHub](https://github.com/hexojs/hexo/issues) or our [Google Group](https://groups.google.com/group/hexo).\n\n## YAML Parsing Error\n\n``` plain\nJS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:\n      last_updated: Last updated: %s\n```\n\nWrap the string with quotations if it contains colons.\n\n``` plain\nJS-YAML: bad indentation of a mapping entry at line 18, column 31:\n      last_updated:\"Last updated: %s\"\n```\n\nMake sure you are using soft tabs and add a space after colons.\n\nYou can see [YAML Spec](http://www.yaml.org/spec/1.2/spec.html) for more info.\n\n## EMFILE Error\n\n``` plain\nError: EMFILE, too many open files\n```\n\nThough Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.\n\n``` bash\n$ ulimit -n 10000\n```\n\n## Process Out of Memory\n\nWhen you encounter this error during generation:\n```\nFATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory\n```\n\nIncrease Node.js heap memory size by changing the first line of `hexo-cli` (`which hexo` to look for the file).\n```\n#!/usr/bin/env node --max_old_space_size=8192\n```\n\n[Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo](https://github.com/hexojs/hexo/issues/1735)\n\n## Git Deployment Problems\n\n``` plain\nerror: RPC failed; result=22, HTTP code = 403\n\nfatal: 'username.github.io' does not appear to be a git repository\n```\n\nMake sure you have [set up git](https://help.github.com/articles/set-up-git) on your computer properly or try to use HTTPS repository URL instead.\n\n## Server Problems\n\n``` plain\nError: listen EADDRINUSE\n```\n\nYou may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the `port` setting or start the Hexo server with the `-p` flag.\n\n``` bash\n$ hexo server -p 5000\n```\n\n## Plugin Installation Problems\n\n``` plain\nnpm ERR! node-waf configure build\n```\n\nThis error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.\n\n## Error with DTrace (Mac OS X)\n\n```plain\n{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }\n```\n\nDTrace install may have issue, use this:\n```sh\n$ npm install hexo --no-optional\n```\nSee [#1326](https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796)\n\n## Iterate Data Model on Jade or Swig\n\nHexo uses [Warehouse] for its data model. It's not an array so you may have to transform objects into iterables.\n\n```\n{% for post in site.posts.toArray() %}\n{% endfor %}\n```\n\n## Data Not Updated\n\nSome data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.\n\n``` bash\n$ hexo clean\n```\n\n## No command is executed\n\nWhen you can't get any command except `help`, `init` and `version` to work and you keep getting content of `hexo help`, it could be caused by a missing `hexo` in `package.json`:\n\n```json\n{\n  \"hexo\": {\n    \"version\": \"3.2.2\"\n  }\n}\n```\n\n## Escape Contents\n\nHexo uses [Nunjucks] to render posts ([Swig] was used in older version, which share a similar syntax). Content wrapped with `{% raw %}{{ }}{% endraw %}` or `{% raw %}{% %}{% endraw %}` will get parsed and may cause problems. You can wrap sensitive content with the `raw` tag plugin.\n\n```\n{% raw %}\nHello {{ sensitive }}\n{% endraw %}\n```\n\n## ENOSPC Error (Linux)\n\nSometimes when running the command `$ hexo server` it returns an error:\n```\nError: watch ENOSPC ...\n```\nIt can be fixed by running `$ npm dedupe` or, if that doesn't help, try the following in the Linux console:\n```\n$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n```\nThis will increase the limit for the number of files you can watch.\n\n## EMPERM Error (Windows Subsystem for Linux)\n\nWhen running `$ hexo server` in a BashOnWindows environment, it returns the following error:\n```\nError: watch /path/to/hexo/theme/ EMPERM\n```\nUnfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo's server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:\n``` sh\n$ hexo generate\n$ hexo server -s\n```\nThis is [a known BashOnWindows issue](https://github.com/Microsoft/BashOnWindows/issues/216), and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on [the issue's UserVoice suggestion page](https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify).\n\n[Warehouse]: https://github.com/tommy351/warehouse\n[Swig]: http://paularmstrong.github.io/swig/\n[Nunjucks]: http://mozilla.github.io/nunjucks/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/troubleshooting.html","comments":1,"layout":"page","_id":"ciy3szh8t0017z714g1558qjo","content":"<p>In case you’re experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn’t help you solve your problem, try doing a search on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a> or our <a href=\"https://groups.google.com/group/hexo\" target=\"_blank\" rel=\"external\">Google Group</a>.</p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</div><div class=\"line\">      last_updated: Last updated: %s</div></pre></td></tr></table></figure>\n<p>Wrap the string with quotations if it contains colons.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</div><div class=\"line\">      last_updated:&quot;Last updated: %s&quot;</div></pre></td></tr></table></figure>\n<p>Make sure you are using soft tabs and add a space after colons.</p>\n<p>You can see <a href=\"http://www.yaml.org/spec/1.2/spec.html\" target=\"_blank\" rel=\"external\">YAML Spec</a> for more info.</p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: EMFILE, too many open files</div></pre></td></tr></table></figure>\n<p>Though Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</div></pre></td></tr></table></figure>\n<h2 id=\"Process-Out-of-Memory\"><a href=\"#Process-Out-of-Memory\" class=\"headerlink\" title=\"Process Out of Memory\"></a>Process Out of Memory</h2><p>When you encounter this error during generation:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</div></pre></td></tr></table></figure></p>\n<p>Increase Node.js heap memory size by changing the first line of <code>hexo-cli</code> (<code>which hexo</code> to look for the file).<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\" target=\"_blank\" rel=\"external\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Git-Deployment-Problems\"><a href=\"#Git-Deployment-Problems\" class=\"headerlink\" title=\"Git Deployment Problems\"></a>Git Deployment Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">error: RPC failed; result=22, HTTP code = 403</div><div class=\"line\"></div><div class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</div></pre></td></tr></table></figure>\n<p>Make sure you have <a href=\"https://help.github.com/articles/set-up-git\" target=\"_blank\" rel=\"external\">set up git</a> on your computer properly or try to use HTTPS repository URL instead.</p>\n<h2 id=\"Server-Problems\"><a href=\"#Server-Problems\" class=\"headerlink\" title=\"Server Problems\"></a>Server Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: listen EADDRINUSE</div></pre></td></tr></table></figure>\n<p>You may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the <code>port</code> setting or start the Hexo server with the <code>-p</code> flag.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -p 5000</div></pre></td></tr></table></figure>\n<h2 id=\"Plugin-Installation-Problems\"><a href=\"#Plugin-Installation-Problems\" class=\"headerlink\" title=\"Plugin Installation Problems\"></a>Plugin Installation Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm ERR! node-waf configure build</div></pre></td></tr></table></figure>\n<p>This error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.</p>\n<h2 id=\"Error-with-DTrace-Mac-OS-X\"><a href=\"#Error-with-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error with DTrace (Mac OS X)\"></a>Error with DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div></pre></td></tr></table></figure>\n<p>DTrace install may have issue, use this:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo --no-optional</div></pre></td></tr></table></figure></p>\n<p>See <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\" target=\"_blank\" rel=\"external\">#1326</a></p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo uses <a href=\"https://github.com/tommy351/warehouse\" target=\"_blank\" rel=\"external\">Warehouse</a> for its data model. It’s not an array so you may have to transform objects into iterables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</div><div class=\"line\">&#123;% endfor %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Data-Not-Updated\"><a href=\"#Data-Not-Updated\" class=\"headerlink\" title=\"Data Not Updated\"></a>Data Not Updated</h2><p>Some data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<h2 id=\"No-command-is-executed\"><a href=\"#No-command-is-executed\" class=\"headerlink\" title=\"No command is executed\"></a>No command is executed</h2><p>When you can’t get any command except <code>help</code>, <code>init</code> and <code>version</code> to work and you keep getting content of <code>hexo help</code>, it could be caused by a missing <code>hexo</code> in <code>package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Escape-Contents\"><a href=\"#Escape-Contents\" class=\"headerlink\" title=\"Escape Contents\"></a>Escape Contents</h2><p>Hexo uses <a href=\"http://mozilla.github.io/nunjucks/\" target=\"_blank\" rel=\"external\">Nunjucks</a> to render posts (<a href=\"http://paularmstrong.github.io/swig/\" target=\"_blank\" rel=\"external\">Swig</a> was used in older version, which share a similar syntax). Content wrapped with <code>{{ }}</code> or <code>{% %}</code> will get parsed and may cause problems. You can wrap sensitive content with the <code>raw</code> tag plugin.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% raw %&#125;</div><div class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</div><div class=\"line\">&#123;% endraw %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>Sometimes when running the command <code>$ hexo server</code> it returns an error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: watch ENOSPC ...</div></pre></td></tr></table></figure></p>\n<p>It can be fixed by running <code>$ npm dedupe</code> or, if that doesn’t help, try the following in the Linux console:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</div></pre></td></tr></table></figure></p>\n<p>This will increase the limit for the number of files you can watch.</p>\n<h2 id=\"EMPERM-Error-Windows-Subsystem-for-Linux\"><a href=\"#EMPERM-Error-Windows-Subsystem-for-Linux\" class=\"headerlink\" title=\"EMPERM Error (Windows Subsystem for Linux)\"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>When running <code>$ hexo server</code> in a BashOnWindows environment, it returns the following error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: watch /path/to/hexo/theme/ EMPERM</div></pre></td></tr></table></figure></p>\n<p>Unfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo’s server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div><div class=\"line\">$ hexo server <span class=\"_\">-s</span></div></pre></td></tr></table></figure></p>\n<p>This is <a href=\"https://github.com/Microsoft/BashOnWindows/issues/216\" target=\"_blank\" rel=\"external\">a known BashOnWindows issue</a>, and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on <a href=\"https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify\" target=\"_blank\" rel=\"external\">the issue’s UserVoice suggestion page</a>.</p>\n","excerpt":"","more":"<p>In case you’re experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn’t help you solve your problem, try doing a search on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a> or our <a href=\"https://groups.google.com/group/hexo\">Google Group</a>.</p>\n<h2 id=\"YAML-Parsing-Error\"><a href=\"#YAML-Parsing-Error\" class=\"headerlink\" title=\"YAML Parsing Error\"></a>YAML Parsing Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</div><div class=\"line\">      last_updated: Last updated: %s</div></pre></td></tr></table></figure>\n<p>Wrap the string with quotations if it contains colons.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</div><div class=\"line\">      last_updated:&quot;Last updated: %s&quot;</div></pre></td></tr></table></figure>\n<p>Make sure you are using soft tabs and add a space after colons.</p>\n<p>You can see <a href=\"http://www.yaml.org/spec/1.2/spec.html\">YAML Spec</a> for more info.</p>\n<h2 id=\"EMFILE-Error\"><a href=\"#EMFILE-Error\" class=\"headerlink\" title=\"EMFILE Error\"></a>EMFILE Error</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: EMFILE, too many open files</div></pre></td></tr></table></figure>\n<p>Though Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">ulimit</span> -n 10000</div></pre></td></tr></table></figure>\n<h2 id=\"Process-Out-of-Memory\"><a href=\"#Process-Out-of-Memory\" class=\"headerlink\" title=\"Process Out of Memory\"></a>Process Out of Memory</h2><p>When you encounter this error during generation:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</div></pre></td></tr></table></figure></p>\n<p>Increase Node.js heap memory size by changing the first line of <code>hexo-cli</code> (<code>which hexo</code> to look for the file).<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">#!/usr/bin/env node --max_old_space_size=8192</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/hexojs/hexo/issues/1735\">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p>\n<h2 id=\"Git-Deployment-Problems\"><a href=\"#Git-Deployment-Problems\" class=\"headerlink\" title=\"Git Deployment Problems\"></a>Git Deployment Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">error: RPC failed; result=22, HTTP code = 403</div><div class=\"line\"></div><div class=\"line\">fatal: &apos;username.github.io&apos; does not appear to be a git repository</div></pre></td></tr></table></figure>\n<p>Make sure you have <a href=\"https://help.github.com/articles/set-up-git\">set up git</a> on your computer properly or try to use HTTPS repository URL instead.</p>\n<h2 id=\"Server-Problems\"><a href=\"#Server-Problems\" class=\"headerlink\" title=\"Server Problems\"></a>Server Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: listen EADDRINUSE</div></pre></td></tr></table></figure>\n<p>You may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the <code>port</code> setting or start the Hexo server with the <code>-p</code> flag.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo server -p 5000</div></pre></td></tr></table></figure>\n<h2 id=\"Plugin-Installation-Problems\"><a href=\"#Plugin-Installation-Problems\" class=\"headerlink\" title=\"Plugin Installation Problems\"></a>Plugin Installation Problems</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">npm ERR! node-waf configure build</div></pre></td></tr></table></figure>\n<p>This error may occur when trying to install a plugin written in C, C++ or another non-JavaScript language. Make sure you have installed the right compiler on your computer.</p>\n<h2 id=\"Error-with-DTrace-Mac-OS-X\"><a href=\"#Error-with-DTrace-Mac-OS-X\" class=\"headerlink\" title=\"Error with DTrace (Mac OS X)\"></a>Error with DTrace (Mac OS X)</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div><div class=\"line\">&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;</div></pre></td></tr></table></figure>\n<p>DTrace install may have issue, use this:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo --no-optional</div></pre></td></tr></table></figure></p>\n<p>See <a href=\"https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796\">#1326</a></p>\n<h2 id=\"Iterate-Data-Model-on-Jade-or-Swig\"><a href=\"#Iterate-Data-Model-on-Jade-or-Swig\" class=\"headerlink\" title=\"Iterate Data Model on Jade or Swig\"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo uses <a href=\"https://github.com/tommy351/warehouse\">Warehouse</a> for its data model. It’s not an array so you may have to transform objects into iterables.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% for post in site.posts.toArray() %&#125;</div><div class=\"line\">&#123;% endfor %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Data-Not-Updated\"><a href=\"#Data-Not-Updated\" class=\"headerlink\" title=\"Data Not Updated\"></a>Data Not Updated</h2><p>Some data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div></pre></td></tr></table></figure>\n<h2 id=\"No-command-is-executed\"><a href=\"#No-command-is-executed\" class=\"headerlink\" title=\"No command is executed\"></a>No command is executed</h2><p>When you can’t get any command except <code>help</code>, <code>init</code> and <code>version</code> to work and you keep getting content of <code>hexo help</code>, it could be caused by a missing <code>hexo</code> in <code>package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"hexo\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"3.2.2\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Escape-Contents\"><a href=\"#Escape-Contents\" class=\"headerlink\" title=\"Escape Contents\"></a>Escape Contents</h2><p>Hexo uses <a href=\"http://mozilla.github.io/nunjucks/\">Nunjucks</a> to render posts (<a href=\"http://paularmstrong.github.io/swig/\">Swig</a> was used in older version, which share a similar syntax). Content wrapped with <code>{{ }}</code> or <code>{% %}</code> will get parsed and may cause problems. You can wrap sensitive content with the <code>raw</code> tag plugin.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;% raw %&#125;</div><div class=\"line\">Hello &#123;&#123; sensitive &#125;&#125;</div><div class=\"line\">&#123;% endraw %&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"ENOSPC-Error-Linux\"><a href=\"#ENOSPC-Error-Linux\" class=\"headerlink\" title=\"ENOSPC Error (Linux)\"></a>ENOSPC Error (Linux)</h2><p>Sometimes when running the command <code>$ hexo server</code> it returns an error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: watch ENOSPC ...</div></pre></td></tr></table></figure></p>\n<p>It can be fixed by running <code>$ npm dedupe</code> or, if that doesn’t help, try the following in the Linux console:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</div></pre></td></tr></table></figure></p>\n<p>This will increase the limit for the number of files you can watch.</p>\n<h2 id=\"EMPERM-Error-Windows-Subsystem-for-Linux\"><a href=\"#EMPERM-Error-Windows-Subsystem-for-Linux\" class=\"headerlink\" title=\"EMPERM Error (Windows Subsystem for Linux)\"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>When running <code>$ hexo server</code> in a BashOnWindows environment, it returns the following error:<br><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">Error: watch /path/to/hexo/theme/ EMPERM</div></pre></td></tr></table></figure></p>\n<p>Unfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo’s server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:<br><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div><div class=\"line\">$ hexo server <span class=\"_\">-s</span></div></pre></td></tr></table></figure></p>\n<p>This is <a href=\"https://github.com/Microsoft/BashOnWindows/issues/216\">a known BashOnWindows issue</a>, and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on <a href=\"https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify\">the issue’s UserVoice suggestion page</a>.</p>\n"},{"title":"Variables","_content":"### Global Variables\n\nVariable | Description\n--- | ---\n`site` | Sitewide information.\n`page` | Page specific information and custom variables set in front-matter.\n`config` | Site configuration\n`theme` | Theme configuration. Inherits from site configuration.\n`_` (single underscore) | [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\") library\n`path` | Path of current page\n`url` | Full URL of current page\n`env` | Environment variables\n\n### Site Variables\n\nVariable | Description\n--- | ---\n`site.posts` | All posts\n`site.pages` | All pages\n`site.categories` | All categories\n`site.tags` | All tags\n\n### Page Variables\n\n**Article (page)**\n\nVariable | Description\n--- | ---\n`page.title` | Article title\n`page.date` | Article created date ([Moment.js] object)\n`page.updated` | Article last updated date ([Moment.js] object)\n`page.comments` | Comment enabled or not\n`page.layout` | Layout name\n`page.content` | The full processed content of the article\n`page.excerpt` | Article excerpt\n`page.more` | Contents except article excerpt\n`page.source` | The path of the source file\n`page.full_source` | Full path of the source file\n`page.path` | The URL of the article without root URL. We usually use `url_for(page.path)` in theme.\n`page.permalink` | Full URL of the article\n`page.prev` | The previous post, `null` if the post is the first post\n`page.next` | The next post, `null` if the post is the last post\n`page.raw` | The raw data of the article\n`page.photos` | The photos of the article (Used in gallery posts)\n`page.link` | The external link of the article (Used in link posts)\n\n**Post (post):** Same as `page` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.published` | True if the post is not a draft\n`page.categories` | All categories of the post\n`page.tags` | All tags of the post\n\n**Home (index)**\n\nVariable | Description\n--- | ---\n`page.per_page` | Posts displayed per page\n`page.total` | Total number of pages\n`page.current` | Current page number\n`page.current_url` | The URL of current page\n`page.posts` | Posts in this page ([Data Model])\n`page.prev` | Previous page number. `0` if the current page is the first.\n`page.prev_link` | The URL of previous page. `''` if the current page is the first.\n`page.next` | Next page number. `0` if the current page is the last.\n`page.next_link` | The URL of next page. `''` if the current page is the last.\n`page.path` | The URL of current page without root URL. We usually use `url_for(page.path)` in theme.\n\n**Archive (archive):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.archive` | Equals `true`\n`page.year` | Archive year (4-digit)\n`page.month` | Archive month (2-digit without leading zeros)\n\n**Category (category):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.category` | Category name\n\n**Tag (tag):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.tag` | Tag name\n\n[Moment.js]: http://momentjs.com/\n","source":"docs/variables.md","raw":"title: Variables\n---\n### Global Variables\n\nVariable | Description\n--- | ---\n`site` | Sitewide information.\n`page` | Page specific information and custom variables set in front-matter.\n`config` | Site configuration\n`theme` | Theme configuration. Inherits from site configuration.\n`_` (single underscore) | [Lodash](https://lodash.com/  \"Lodash\" target=\"_blank\") library\n`path` | Path of current page\n`url` | Full URL of current page\n`env` | Environment variables\n\n### Site Variables\n\nVariable | Description\n--- | ---\n`site.posts` | All posts\n`site.pages` | All pages\n`site.categories` | All categories\n`site.tags` | All tags\n\n### Page Variables\n\n**Article (page)**\n\nVariable | Description\n--- | ---\n`page.title` | Article title\n`page.date` | Article created date ([Moment.js] object)\n`page.updated` | Article last updated date ([Moment.js] object)\n`page.comments` | Comment enabled or not\n`page.layout` | Layout name\n`page.content` | The full processed content of the article\n`page.excerpt` | Article excerpt\n`page.more` | Contents except article excerpt\n`page.source` | The path of the source file\n`page.full_source` | Full path of the source file\n`page.path` | The URL of the article without root URL. We usually use `url_for(page.path)` in theme.\n`page.permalink` | Full URL of the article\n`page.prev` | The previous post, `null` if the post is the first post\n`page.next` | The next post, `null` if the post is the last post\n`page.raw` | The raw data of the article\n`page.photos` | The photos of the article (Used in gallery posts)\n`page.link` | The external link of the article (Used in link posts)\n\n**Post (post):** Same as `page` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.published` | True if the post is not a draft\n`page.categories` | All categories of the post\n`page.tags` | All tags of the post\n\n**Home (index)**\n\nVariable | Description\n--- | ---\n`page.per_page` | Posts displayed per page\n`page.total` | Total number of pages\n`page.current` | Current page number\n`page.current_url` | The URL of current page\n`page.posts` | Posts in this page ([Data Model])\n`page.prev` | Previous page number. `0` if the current page is the first.\n`page.prev_link` | The URL of previous page. `''` if the current page is the first.\n`page.next` | Next page number. `0` if the current page is the last.\n`page.next_link` | The URL of next page. `''` if the current page is the last.\n`page.path` | The URL of current page without root URL. We usually use `url_for(page.path)` in theme.\n\n**Archive (archive):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.archive` | Equals `true`\n`page.year` | Archive year (4-digit)\n`page.month` | Archive month (2-digit without leading zeros)\n\n**Category (category):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.category` | Category name\n\n**Tag (tag):** Same as `index` layout but add the following variables.\n\nVariable | Description\n--- | ---\n`page.tag` | Tag name\n\n[Moment.js]: http://momentjs.com/\n","date":"2017-01-19T03:10:40.267Z","updated":"2017-01-19T03:10:40.267Z","path":"docs/variables.html","comments":1,"layout":"page","_id":"ciy3szh8v0018z714ub71ov57","content":"<h3 id=\"Global-Variables\"><a href=\"#Global-Variables\" class=\"headerlink\" title=\"Global Variables\"></a>Global Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Sitewide information.</td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Page specific information and custom variables set in front-matter.</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Site configuration</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Theme configuration. Inherits from site configuration.</td>\n</tr>\n<tr>\n<td><code>_</code> (single underscore)</td>\n<td><a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\" target=\"_blank\" rel=\"external\">Lodash</a> library</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path of current page</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Full URL of current page</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Environment variables</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Site-Variables\"><a href=\"#Site-Variables\" class=\"headerlink\" title=\"Site Variables\"></a>Site Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Page-Variables\"><a href=\"#Page-Variables\" class=\"headerlink\" title=\"Page Variables\"></a>Page Variables</h3><p><strong>Article (page)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Article title</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Article created date (<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Article last updated date (<a href=\"http://momentjs.com/\" target=\"_blank\" rel=\"external\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Comment enabled or not</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Layout name</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>The full processed content of the article</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Article excerpt</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Contents except article excerpt</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>The path of the source file</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Full path of the source file</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of the article without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>Full URL of the article</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>The previous post, <code>null</code> if the post is the first post</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>The next post, <code>null</code> if the post is the last post</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>The raw data of the article</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>The photos of the article (Used in gallery posts)</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>The external link of the article (Used in link posts)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Post (post):</strong> Same as <code>page</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>True if the post is not a draft</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>All categories of the post</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>All tags of the post</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Home (index)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Posts displayed per page</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Total number of pages</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Current page number</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>The URL of current page</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Posts in this page ([Data Model])</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Previous page number. <code>0</code> if the current page is the first.</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>The URL of previous page. <code>&#39;&#39;</code> if the current page is the first.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Next page number. <code>0</code> if the current page is the last.</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>The URL of next page. <code>&#39;&#39;</code> if the current page is the last.</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of current page without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Archive (archive):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Equals <code>true</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Archive year (4-digit)</td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Archive month (2-digit without leading zeros)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Category (category):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Category name</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tag (tag):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Tag name</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<h3 id=\"Global-Variables\"><a href=\"#Global-Variables\" class=\"headerlink\" title=\"Global Variables\"></a>Global Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site</code></td>\n<td>Sitewide information.</td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td>Page specific information and custom variables set in front-matter.</td>\n</tr>\n<tr>\n<td><code>config</code></td>\n<td>Site configuration</td>\n</tr>\n<tr>\n<td><code>theme</code></td>\n<td>Theme configuration. Inherits from site configuration.</td>\n</tr>\n<tr>\n<td><code>_</code> (single underscore)</td>\n<td><a href=\"https://lodash.com/\" title=\"Lodash&quot; target=&quot;_blank\">Lodash</a> library</td>\n</tr>\n<tr>\n<td><code>path</code></td>\n<td>Path of current page</td>\n</tr>\n<tr>\n<td><code>url</code></td>\n<td>Full URL of current page</td>\n</tr>\n<tr>\n<td><code>env</code></td>\n<td>Environment variables</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Site-Variables\"><a href=\"#Site-Variables\" class=\"headerlink\" title=\"Site Variables\"></a>Site Variables</h3><table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>site.posts</code></td>\n<td>All posts</td>\n</tr>\n<tr>\n<td><code>site.pages</code></td>\n<td>All pages</td>\n</tr>\n<tr>\n<td><code>site.categories</code></td>\n<td>All categories</td>\n</tr>\n<tr>\n<td><code>site.tags</code></td>\n<td>All tags</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Page-Variables\"><a href=\"#Page-Variables\" class=\"headerlink\" title=\"Page Variables\"></a>Page Variables</h3><p><strong>Article (page)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.title</code></td>\n<td>Article title</td>\n</tr>\n<tr>\n<td><code>page.date</code></td>\n<td>Article created date (<a href=\"http://momentjs.com/\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.updated</code></td>\n<td>Article last updated date (<a href=\"http://momentjs.com/\">Moment.js</a> object)</td>\n</tr>\n<tr>\n<td><code>page.comments</code></td>\n<td>Comment enabled or not</td>\n</tr>\n<tr>\n<td><code>page.layout</code></td>\n<td>Layout name</td>\n</tr>\n<tr>\n<td><code>page.content</code></td>\n<td>The full processed content of the article</td>\n</tr>\n<tr>\n<td><code>page.excerpt</code></td>\n<td>Article excerpt</td>\n</tr>\n<tr>\n<td><code>page.more</code></td>\n<td>Contents except article excerpt</td>\n</tr>\n<tr>\n<td><code>page.source</code></td>\n<td>The path of the source file</td>\n</tr>\n<tr>\n<td><code>page.full_source</code></td>\n<td>Full path of the source file</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of the article without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n</tr>\n<tr>\n<td><code>page.permalink</code></td>\n<td>Full URL of the article</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>The previous post, <code>null</code> if the post is the first post</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>The next post, <code>null</code> if the post is the last post</td>\n</tr>\n<tr>\n<td><code>page.raw</code></td>\n<td>The raw data of the article</td>\n</tr>\n<tr>\n<td><code>page.photos</code></td>\n<td>The photos of the article (Used in gallery posts)</td>\n</tr>\n<tr>\n<td><code>page.link</code></td>\n<td>The external link of the article (Used in link posts)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Post (post):</strong> Same as <code>page</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.published</code></td>\n<td>True if the post is not a draft</td>\n</tr>\n<tr>\n<td><code>page.categories</code></td>\n<td>All categories of the post</td>\n</tr>\n<tr>\n<td><code>page.tags</code></td>\n<td>All tags of the post</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Home (index)</strong></p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.per_page</code></td>\n<td>Posts displayed per page</td>\n</tr>\n<tr>\n<td><code>page.total</code></td>\n<td>Total number of pages</td>\n</tr>\n<tr>\n<td><code>page.current</code></td>\n<td>Current page number</td>\n</tr>\n<tr>\n<td><code>page.current_url</code></td>\n<td>The URL of current page</td>\n</tr>\n<tr>\n<td><code>page.posts</code></td>\n<td>Posts in this page ([Data Model])</td>\n</tr>\n<tr>\n<td><code>page.prev</code></td>\n<td>Previous page number. <code>0</code> if the current page is the first.</td>\n</tr>\n<tr>\n<td><code>page.prev_link</code></td>\n<td>The URL of previous page. <code>&#39;&#39;</code> if the current page is the first.</td>\n</tr>\n<tr>\n<td><code>page.next</code></td>\n<td>Next page number. <code>0</code> if the current page is the last.</td>\n</tr>\n<tr>\n<td><code>page.next_link</code></td>\n<td>The URL of next page. <code>&#39;&#39;</code> if the current page is the last.</td>\n</tr>\n<tr>\n<td><code>page.path</code></td>\n<td>The URL of current page without root URL. We usually use <code>url_for(page.path)</code> in theme.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Archive (archive):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.archive</code></td>\n<td>Equals <code>true</code></td>\n</tr>\n<tr>\n<td><code>page.year</code></td>\n<td>Archive year (4-digit)</td>\n</tr>\n<tr>\n<td><code>page.month</code></td>\n<td>Archive month (2-digit without leading zeros)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Category (category):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.category</code></td>\n<td>Category name</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tag (tag):</strong> Same as <code>index</code> layout but add the following variables.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>page.tag</code></td>\n<td>Tag name</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Writing","_content":"To create a new post or a new page, you can run the following command:!!\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` is the default `layout`, but you can supply your own. You can change the default layout by editing the `default_layout` setting in `_config.yml`.\n\n### Layout\n\nThere are three default layouts in Hexo: `post`, `page` and `draft`. Files created by each of them is saved to a different path. Newly created posts are saved to the `source/_posts` folder.\n\nLayout | Path\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Don't process my posts! %}\nIf you don't want your posts processed, you can set `layout: false` in front-matter.\n{% endnote %}\n\n### Filename\n\nBy default, Hexo uses the post title as its filename. You can edit the `new_post_name` setting in `_config.yml` to change the default filename. For example, `:year-:month-:day-:title.md` will prefix filenames with the post creation date. You can use the following placeholders:\n\nPlaceholder | Description\n--- | ---\n`:title` | Post title (lower case, with spaces replaced by hyphens)\n`:year` | Created year, e.g. `2015`\n`:month` | Created month (leading zeros), e.g. `04`\n`:i_month` | Created month (no leading zeros), e.g. `4`\n`:day` | Created day (leading zeros), e.g. `07`\n`:i_day` | Created day (no leading zeros), e.g. `7`\n\n### Drafts\n\nPreviously, we mentioned a special layout in Hexo: `draft`. Posts initialized with this layout are saved to the `source/_drafts` folder. You can use the `publish` command to move drafts to the `source/_posts` folder. `publish` works in a similar way to the `new` command.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\nDrafts are not displayed by default. You can add the `--draft` option when running Hexo or enable the `render_drafts` setting in `_config.yml` to render drafts.\n\n### Scaffolds\n\nWhen creating posts, Hexo will build files based on the corresponding file in `scaffolds` folder. For example:\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nWhen you run this command, Hexo will try to find `photo.md` in the `scaffolds` folder and build the post based on it. The following placeholders are available in scaffolds:\n\nPlaceholder | Description\n--- | ---\n`layout` | Layout\n`title` | Title\n`date` | File created date\n","source":"docs/writing.md","raw":"title: Writing\n---\nTo create a new post or a new page, you can run the following command:!!\n\n``` bash\n$ hexo new [layout] <title>\n```\n\n`post` is the default `layout`, but you can supply your own. You can change the default layout by editing the `default_layout` setting in `_config.yml`.\n\n### Layout\n\nThere are three default layouts in Hexo: `post`, `page` and `draft`. Files created by each of them is saved to a different path. Newly created posts are saved to the `source/_posts` folder.\n\nLayout | Path\n--- | ---\n`post` | `source/_posts`\n`page` | `source`\n`draft` | `source/_drafts`\n\n{% note tip Don't process my posts! %}\nIf you don't want your posts processed, you can set `layout: false` in front-matter.\n{% endnote %}\n\n### Filename\n\nBy default, Hexo uses the post title as its filename. You can edit the `new_post_name` setting in `_config.yml` to change the default filename. For example, `:year-:month-:day-:title.md` will prefix filenames with the post creation date. You can use the following placeholders:\n\nPlaceholder | Description\n--- | ---\n`:title` | Post title (lower case, with spaces replaced by hyphens)\n`:year` | Created year, e.g. `2015`\n`:month` | Created month (leading zeros), e.g. `04`\n`:i_month` | Created month (no leading zeros), e.g. `4`\n`:day` | Created day (leading zeros), e.g. `07`\n`:i_day` | Created day (no leading zeros), e.g. `7`\n\n### Drafts\n\nPreviously, we mentioned a special layout in Hexo: `draft`. Posts initialized with this layout are saved to the `source/_drafts` folder. You can use the `publish` command to move drafts to the `source/_posts` folder. `publish` works in a similar way to the `new` command.\n\n``` bash\n$ hexo publish [layout] <title>\n```\n\nDrafts are not displayed by default. You can add the `--draft` option when running Hexo or enable the `render_drafts` setting in `_config.yml` to render drafts.\n\n### Scaffolds\n\nWhen creating posts, Hexo will build files based on the corresponding file in `scaffolds` folder. For example:\n\n``` bash\n$ hexo new photo \"My Gallery\"\n```\n\nWhen you run this command, Hexo will try to find `photo.md` in the `scaffolds` folder and build the post based on it. The following placeholders are available in scaffolds:\n\nPlaceholder | Description\n--- | ---\n`layout` | Layout\n`title` | Title\n`date` | File created date\n","date":"2017-01-20T04:36:57.499Z","updated":"2017-01-20T04:36:57.499Z","path":"docs/writing.html","_id":"ciy3szh8w0019z714ct7ug072","comments":1,"layout":"page","content":"<p>To create a new post or a new page, you can run the following command:!!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p><code>post</code> is the default <code>layout</code>, but you can supply your own. You can change the default layout by editing the <code>default_layout</code> setting in <code>_config.yml</code>.</p>\n<h3 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h3><p>There are three default layouts in Hexo: <code>post</code>, <code>page</code> and <code>draft</code>. Files created by each of them is saved to a different path. Newly created posts are saved to the <code>source/_posts</code> folder.</p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Don't process my posts!</strong><p>If you don’t want your posts processed, you can set <code>layout: false</code> in front-matter.</p>\n</blockquote>\n<h3 id=\"Filename\"><a href=\"#Filename\" class=\"headerlink\" title=\"Filename\"></a>Filename</h3><p>By default, Hexo uses the post title as its filename. You can edit the <code>new_post_name</code> setting in <code>_config.yml</code> to change the default filename. For example, <code>:year-:month-:day-:title.md</code> will prefix filenames with the post creation date. You can use the following placeholders:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Post title (lower case, with spaces replaced by hyphens)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Created year, e.g. <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Created month (leading zeros), e.g. <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Created month (no leading zeros), e.g. <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Created day (leading zeros), e.g. <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Created day (no leading zeros), e.g. <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Drafts\"><a href=\"#Drafts\" class=\"headerlink\" title=\"Drafts\"></a>Drafts</h3><p>Previously, we mentioned a special layout in Hexo: <code>draft</code>. Posts initialized with this layout are saved to the <code>source/_drafts</code> folder. You can use the <code>publish</code> command to move drafts to the <code>source/_posts</code> folder. <code>publish</code> works in a similar way to the <code>new</code> command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>Drafts are not displayed by default. You can add the <code>--draft</code> option when running Hexo or enable the <code>render_drafts</code> setting in <code>_config.yml</code> to render drafts.</p>\n<h3 id=\"Scaffolds\"><a href=\"#Scaffolds\" class=\"headerlink\" title=\"Scaffolds\"></a>Scaffolds</h3><p>When creating posts, Hexo will build files based on the corresponding file in <code>scaffolds</code> folder. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></div></pre></td></tr></table></figure>\n<p>When you run this command, Hexo will try to find <code>photo.md</code> in the <code>scaffolds</code> folder and build the post based on it. The following placeholders are available in scaffolds:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"","more":"<p>To create a new post or a new page, you can run the following command:!!</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p><code>post</code> is the default <code>layout</code>, but you can supply your own. You can change the default layout by editing the <code>default_layout</code> setting in <code>_config.yml</code>.</p>\n<h3 id=\"Layout\"><a href=\"#Layout\" class=\"headerlink\" title=\"Layout\"></a>Layout</h3><p>There are three default layouts in Hexo: <code>post</code>, <code>page</code> and <code>draft</code>. Files created by each of them is saved to a different path. Newly created posts are saved to the <code>source/_posts</code> folder.</p>\n<table>\n<thead>\n<tr>\n<th>Layout</th>\n<th>Path</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>post</code></td>\n<td><code>source/_posts</code></td>\n</tr>\n<tr>\n<td><code>page</code></td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td><code>draft</code></td>\n<td><code>source/_drafts</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote class=\"note tip\"><strong class=\"note-title\">Don't process my posts!</strong><p>If you don’t want your posts processed, you can set <code>layout: false</code> in front-matter.</p>\n</blockquote>\n<h3 id=\"Filename\"><a href=\"#Filename\" class=\"headerlink\" title=\"Filename\"></a>Filename</h3><p>By default, Hexo uses the post title as its filename. You can edit the <code>new_post_name</code> setting in <code>_config.yml</code> to change the default filename. For example, <code>:year-:month-:day-:title.md</code> will prefix filenames with the post creation date. You can use the following placeholders:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:title</code></td>\n<td>Post title (lower case, with spaces replaced by hyphens)</td>\n</tr>\n<tr>\n<td><code>:year</code></td>\n<td>Created year, e.g. <code>2015</code></td>\n</tr>\n<tr>\n<td><code>:month</code></td>\n<td>Created month (leading zeros), e.g. <code>04</code></td>\n</tr>\n<tr>\n<td><code>:i_month</code></td>\n<td>Created month (no leading zeros), e.g. <code>4</code></td>\n</tr>\n<tr>\n<td><code>:day</code></td>\n<td>Created day (leading zeros), e.g. <code>07</code></td>\n</tr>\n<tr>\n<td><code>:i_day</code></td>\n<td>Created day (no leading zeros), e.g. <code>7</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Drafts\"><a href=\"#Drafts\" class=\"headerlink\" title=\"Drafts\"></a>Drafts</h3><p>Previously, we mentioned a special layout in Hexo: <code>draft</code>. Posts initialized with this layout are saved to the <code>source/_drafts</code> folder. You can use the <code>publish</code> command to move drafts to the <code>source/_posts</code> folder. <code>publish</code> works in a similar way to the <code>new</code> command.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure>\n<p>Drafts are not displayed by default. You can add the <code>--draft</code> option when running Hexo or enable the <code>render_drafts</code> setting in <code>_config.yml</code> to render drafts.</p>\n<h3 id=\"Scaffolds\"><a href=\"#Scaffolds\" class=\"headerlink\" title=\"Scaffolds\"></a>Scaffolds</h3><p>When creating posts, Hexo will build files based on the corresponding file in <code>scaffolds</code> folder. For example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new photo <span class=\"string\">\"My Gallery\"</span></div></pre></td></tr></table></figure>\n<p>When you run this command, Hexo will try to find <code>photo.md</code> in the <code>scaffolds</code> folder and build the post based on it. The following placeholders are available in scaffolds:</p>\n<table>\n<thead>\n<tr>\n<th>Placeholder</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>layout</code></td>\n<td>Layout</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td>Title</td>\n</tr>\n<tr>\n<td><code>date</code></td>\n<td>File created date</td>\n</tr>\n</tbody>\n</table>\n"},{"layout":"plugins","title":"Plugins","data":"plugins","partial":"plugin","comments":0,"_content":"","source":"plugins/index.md","raw":"layout: plugins\ntitle: Plugins\ndata: plugins\npartial: plugin\ncomments: false\n---\n","date":"2017-01-19T03:10:40.271Z","updated":"2017-01-19T03:10:40.271Z","path":"plugins/index.html","_id":"ciy3szh8z001bz71452g0382m","content":"","excerpt":"","more":""},{"layout":"plugins","title":"Themes","data":"themes","partial":"theme","comments":0,"_content":"","source":"themes/index.md","raw":"layout: plugins\ntitle: Themes\ndata: themes\npartial: theme\ncomments: false\n---\n","date":"2017-01-19T03:10:40.275Z","updated":"2017-01-19T03:10:40.275Z","path":"themes/index.html","_id":"ciy3szh95001dz714oy5sgqno","content":"","excerpt":"","more":""}],"Post":[{"title":"Hexo 2.7 Released","_content":"Hexo 2.7 has been released with three new features. I'm going to introduce them below.\n\n## Fragment Caching\n\nAlthough Hexo is fast, it may become slow if you have thousands of source files or complicated categories or tags. Before the data model upgraded, I borrowed a feature from Ruby on Rails: **Fragment Caching**.\n\nFragment Caching saves contents within a fragment and serves the cache when the next request come in. A fragment will only be processed once. It can reduce database queries and decrease generation time significantly. For instance, a Hexo site with 300+ source files needs 6 minutes to generate. In Hexo 2.7, it only need 10 seconds!\n\nIt can be used in header, footer, sidebar or static contents that won't be changed during generating. For example:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}); %>\n```\n\nBy using `fragment_cache` helper, contents in the function will be cached.\n\nPartial helper also supports Fragment Caching, you only need to add a `{cache: true}` option when using partial.\n\n``` js\n<%- partial('header', {}, {cache: true}) %>\n```\n\n[Landscape] is updated and supports Fragment Caching now. You can check [this commit](https://github.com/hexojs/hexo-theme-landscape/commit/d2aedda61571d6994eb72d784ceda2f59d2a8631) to see what's changed.\n\n## Relative Link\n\nRelative Link is supported since Hexo 2.7. But your theme needs some modifications to support it. However, it's not as hard as you think. You just need to replace the following contents in templates\n\n``` js\n<%- config.root %><%- path %>\n```\n\nwith `url_for` helper.\n\n``` js\n<%- url_for(path) %>\n```\n\n`url_for` helper will add `config.root` automatically for you. If you enable `relative_link` setting, it'll add a relative path.\n\n[Landscape] is updated for Relative Link. You can check [this commit](https://github.com/hexojs/hexo-theme-landscape/commit/d29cbb83356373af27e7b98643f29a27804364af) to see what's changed.\n\n## Server Middleware\n\nServer Middleware would be familiar if you have ever used [Connect] or [Express] before. [Connect] passes a request through functions called **middleware**. You can make response to the coming in request in middleware.\n\nIn Hexo, middleware is served as a type of filter. You can add middleware by registering a new filter. For example:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\nThis middleware add a header `X-Powered-By` and passes the request to the next middleware.\n\n[Landscape]: https://github.com/hexojs/hexo-theme-landscape\n[Connect]: http://www.senchalabs.org/connect/\n[Express]: http://expressjs.com/","source":"_posts/2014-06-14-hexo-2-7-released.md","raw":"title: Hexo 2.7 Released\n---\nHexo 2.7 has been released with three new features. I'm going to introduce them below.\n\n## Fragment Caching\n\nAlthough Hexo is fast, it may become slow if you have thousands of source files or complicated categories or tags. Before the data model upgraded, I borrowed a feature from Ruby on Rails: **Fragment Caching**.\n\nFragment Caching saves contents within a fragment and serves the cache when the next request come in. A fragment will only be processed once. It can reduce database queries and decrease generation time significantly. For instance, a Hexo site with 300+ source files needs 6 minutes to generate. In Hexo 2.7, it only need 10 seconds!\n\nIt can be used in header, footer, sidebar or static contents that won't be changed during generating. For example:\n\n``` js\n<%- fragment_cache('header', function(){\n  return '<header></header>';\n}); %>\n```\n\nBy using `fragment_cache` helper, contents in the function will be cached.\n\nPartial helper also supports Fragment Caching, you only need to add a `{cache: true}` option when using partial.\n\n``` js\n<%- partial('header', {}, {cache: true}) %>\n```\n\n[Landscape] is updated and supports Fragment Caching now. You can check [this commit](https://github.com/hexojs/hexo-theme-landscape/commit/d2aedda61571d6994eb72d784ceda2f59d2a8631) to see what's changed.\n\n## Relative Link\n\nRelative Link is supported since Hexo 2.7. But your theme needs some modifications to support it. However, it's not as hard as you think. You just need to replace the following contents in templates\n\n``` js\n<%- config.root %><%- path %>\n```\n\nwith `url_for` helper.\n\n``` js\n<%- url_for(path) %>\n```\n\n`url_for` helper will add `config.root` automatically for you. If you enable `relative_link` setting, it'll add a relative path.\n\n[Landscape] is updated for Relative Link. You can check [this commit](https://github.com/hexojs/hexo-theme-landscape/commit/d29cbb83356373af27e7b98643f29a27804364af) to see what's changed.\n\n## Server Middleware\n\nServer Middleware would be familiar if you have ever used [Connect] or [Express] before. [Connect] passes a request through functions called **middleware**. You can make response to the coming in request in middleware.\n\nIn Hexo, middleware is served as a type of filter. You can add middleware by registering a new filter. For example:\n\n``` js\nhexo.extend.filter.register('server_middleware', function(app){\n  app.use(function(req, res, next){\n    res.setHeader('X-Powered-By', 'Hexo');\n    next();\n  });\n});\n```\n\nThis middleware add a header `X-Powered-By` and passes the request to the next middleware.\n\n[Landscape]: https://github.com/hexojs/hexo-theme-landscape\n[Connect]: http://www.senchalabs.org/connect/\n[Express]: http://expressjs.com/","slug":"hexo-2-7-released","published":1,"date":"2014-06-14T00:00:00.000Z","updated":"2017-01-19T03:10:40.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy3szh500001z714vebu4li7","content":"<p>Hexo 2.7 has been released with three new features. I’m going to introduce them below.</p>\n<h2 id=\"Fragment-Caching\"><a href=\"#Fragment-Caching\" class=\"headerlink\" title=\"Fragment Caching\"></a>Fragment Caching</h2><p>Although Hexo is fast, it may become slow if you have thousands of source files or complicated categories or tags. Before the data model upgraded, I borrowed a feature from Ruby on Rails: <strong>Fragment Caching</strong>.</p>\n<p>Fragment Caching saves contents within a fragment and serves the cache when the next request come in. A fragment will only be processed once. It can reduce database queries and decrease generation time significantly. For instance, a Hexo site with 300+ source files needs 6 minutes to generate. In Hexo 2.7, it only need 10 seconds!</p>\n<p>It can be used in header, footer, sidebar or static contents that won’t be changed during generating. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;); %&gt;</div></pre></td></tr></table></figure>\n<p>By using <code>fragment_cache</code> helper, contents in the function will be cached.</p>\n<p>Partial helper also supports Fragment Caching, you only need to add a <code>{cache: true}</code> option when using partial.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;) %&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/hexojs/hexo-theme-landscape\" target=\"_blank\" rel=\"external\">Landscape</a> is updated and supports Fragment Caching now. You can check <a href=\"https://github.com/hexojs/hexo-theme-landscape/commit/d2aedda61571d6994eb72d784ceda2f59d2a8631\" target=\"_blank\" rel=\"external\">this commit</a> to see what’s changed.</p>\n<h2 id=\"Relative-Link\"><a href=\"#Relative-Link\" class=\"headerlink\" title=\"Relative Link\"></a>Relative Link</h2><p>Relative Link is supported since Hexo 2.7. But your theme needs some modifications to support it. However, it’s not as hard as you think. You just need to replace the following contents in templates</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- config.root %&gt;&lt;%- path %&gt;</div></pre></td></tr></table></figure>\n<p>with <code>url_for</code> helper.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- url_for(path) %&gt;</div></pre></td></tr></table></figure>\n<p><code>url_for</code> helper will add <code>config.root</code> automatically for you. If you enable <code>relative_link</code> setting, it’ll add a relative path.</p>\n<p><a href=\"https://github.com/hexojs/hexo-theme-landscape\" target=\"_blank\" rel=\"external\">Landscape</a> is updated for Relative Link. You can check <a href=\"https://github.com/hexojs/hexo-theme-landscape/commit/d29cbb83356373af27e7b98643f29a27804364af\" target=\"_blank\" rel=\"external\">this commit</a> to see what’s changed.</p>\n<h2 id=\"Server-Middleware\"><a href=\"#Server-Middleware\" class=\"headerlink\" title=\"Server Middleware\"></a>Server Middleware</h2><p>Server Middleware would be familiar if you have ever used <a href=\"http://www.senchalabs.org/connect/\" target=\"_blank\" rel=\"external\">Connect</a> or <a href=\"http://expressjs.com/\" target=\"_blank\" rel=\"external\">Express</a> before. <a href=\"http://www.senchalabs.org/connect/\" target=\"_blank\" rel=\"external\">Connect</a> passes a request through functions called <strong>middleware</strong>. You can make response to the coming in request in middleware.</p>\n<p>In Hexo, middleware is served as a type of filter. You can add middleware by registering a new filter. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</div><div class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</div><div class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>This middleware add a header <code>X-Powered-By</code> and passes the request to the next middleware.</p>\n","excerpt":"","more":"<p>Hexo 2.7 has been released with three new features. I’m going to introduce them below.</p>\n<h2 id=\"Fragment-Caching\"><a href=\"#Fragment-Caching\" class=\"headerlink\" title=\"Fragment Caching\"></a>Fragment Caching</h2><p>Although Hexo is fast, it may become slow if you have thousands of source files or complicated categories or tags. Before the data model upgraded, I borrowed a feature from Ruby on Rails: <strong>Fragment Caching</strong>.</p>\n<p>Fragment Caching saves contents within a fragment and serves the cache when the next request come in. A fragment will only be processed once. It can reduce database queries and decrease generation time significantly. For instance, a Hexo site with 300+ source files needs 6 minutes to generate. In Hexo 2.7, it only need 10 seconds!</p>\n<p>It can be used in header, footer, sidebar or static contents that won’t be changed during generating. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- fragment_cache(<span class=\"string\">'header'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;header&gt;&lt;/header&gt;'</span>;</div><div class=\"line\">&#125;); %&gt;</div></pre></td></tr></table></figure>\n<p>By using <code>fragment_cache</code> helper, contents in the function will be cached.</p>\n<p>Partial helper also supports Fragment Caching, you only need to add a <code>{cache: true}</code> option when using partial.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- partial(<span class=\"string\">'header'</span>, &#123;&#125;, &#123;<span class=\"attr\">cache</span>: <span class=\"literal\">true</span>&#125;) %&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/hexojs/hexo-theme-landscape\">Landscape</a> is updated and supports Fragment Caching now. You can check <a href=\"https://github.com/hexojs/hexo-theme-landscape/commit/d2aedda61571d6994eb72d784ceda2f59d2a8631\">this commit</a> to see what’s changed.</p>\n<h2 id=\"Relative-Link\"><a href=\"#Relative-Link\" class=\"headerlink\" title=\"Relative Link\"></a>Relative Link</h2><p>Relative Link is supported since Hexo 2.7. But your theme needs some modifications to support it. However, it’s not as hard as you think. You just need to replace the following contents in templates</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- config.root %&gt;&lt;%- path %&gt;</div></pre></td></tr></table></figure>\n<p>with <code>url_for</code> helper.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%- url_for(path) %&gt;</div></pre></td></tr></table></figure>\n<p><code>url_for</code> helper will add <code>config.root</code> automatically for you. If you enable <code>relative_link</code> setting, it’ll add a relative path.</p>\n<p><a href=\"https://github.com/hexojs/hexo-theme-landscape\">Landscape</a> is updated for Relative Link. You can check <a href=\"https://github.com/hexojs/hexo-theme-landscape/commit/d29cbb83356373af27e7b98643f29a27804364af\">this commit</a> to see what’s changed.</p>\n<h2 id=\"Server-Middleware\"><a href=\"#Server-Middleware\" class=\"headerlink\" title=\"Server Middleware\"></a>Server Middleware</h2><p>Server Middleware would be familiar if you have ever used <a href=\"http://www.senchalabs.org/connect/\">Connect</a> or <a href=\"http://expressjs.com/\">Express</a> before. <a href=\"http://www.senchalabs.org/connect/\">Connect</a> passes a request through functions called <strong>middleware</strong>. You can make response to the coming in request in middleware.</p>\n<p>In Hexo, middleware is served as a type of filter. You can add middleware by registering a new filter. For example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.extend.filter.register(<span class=\"string\">'server_middleware'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">app</span>)</span>&#123;</div><div class=\"line\">  app.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">req, res, next</span>)</span>&#123;</div><div class=\"line\">    res.setHeader(<span class=\"string\">'X-Powered-By'</span>, <span class=\"string\">'Hexo'</span>);</div><div class=\"line\">    next();</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>This middleware add a header <code>X-Powered-By</code> and passes the request to the next middleware.</p>\n"},{"title":"Hexo 2.8 Released","_content":"Hexo 2.8 was rewritten, brings you better performance and many improvements. The following is the highlights in this version. You can check [detail](https://github.com/hexojs/hexo/releases/tag/2.8.0) on GitHub.\n\n## Faster Processing Speed\n\nBefore Hexo 2.8, all source files have to be processed each time you use Hexo. In Hexo 2.8, the entire database will be saved to `db.json` so Hexo don't have to process all files again. Also, a new data type \"**skip**\" was added for processors to detect whether a file was changed or not.\n\nGenerating was also changed in Hexo 2.8. You can check the elapsed time of each file in console now. However, I found multi-process generating didn't affect generating speed a lot. Thus, `multi_thread` and `max_open_file` setting are deprecated in Hexo 2.8.\n\n{% asset_img generate-console.png %}\n\n## Draft Publish\n\nYou don't have to enter full file name to publish a post anymore. Draft publish system is rewritten in Hexo 2.8. `new_post_name` setting will be applied until drafts are published. Besides, you can choose which layout to apply when publishing.\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nA new API `post.publish` was added to help you publish drafts more easily.\n\n``` js\nhexo.post.publish({slug: 'hello-world', layout: 'post'}, function(err, target){\n  // ...\n});\n```\n\n## Permalink\n\nFile name and permalink now share a more universal variable system. Every variables in file name can also be read in permalink. Here's a config for example:\n\n``` yaml\npermalink: :type/:title/\nnew_post_name: :type/:title.md\n```\n\nWhen you create a post, the post will be saved to `source/_posts/test/Hello-World.md` and the URL will be `http://localhost:4000/test/Hello-World/`.\n\n``` bash\n$ hexo new \"Hello World\" --type test\n```\n\n## Multi-language Support\n\nWith the new permalink introduced in the previous section, it's much easier to create a multi-language site. For example:\n\n``` yaml\npermalink: :lang/:title/\nnew_post_name: :lang/:title.md\n```\n\nThen you can create a post with `--lang` option:\n\n``` bash\n$ hexo new \"Hello World\" --lang en\n# => This post will be saved to source/_posts/en/Hello-World.md\n# => URL: http://localhost:4000/en/Hello-World/\n\n$ hexo new \"你好世界\" --lang tw\n# => This post will be saved to source/_posts/tw/你好世界.md\n# => URL: http://localhost:4000/tw/你好世界/\n```\n\nYou can define the default value of permalink variables in `permalink_defaults` setting. For example, we define the defualt language as English.\n\n``` yaml\npermalink_defaults:\n  lang: en\n```","source":"_posts/2014-07-13-hexo-2-8-released.md","raw":"title: Hexo 2.8 Released\n---\nHexo 2.8 was rewritten, brings you better performance and many improvements. The following is the highlights in this version. You can check [detail](https://github.com/hexojs/hexo/releases/tag/2.8.0) on GitHub.\n\n## Faster Processing Speed\n\nBefore Hexo 2.8, all source files have to be processed each time you use Hexo. In Hexo 2.8, the entire database will be saved to `db.json` so Hexo don't have to process all files again. Also, a new data type \"**skip**\" was added for processors to detect whether a file was changed or not.\n\nGenerating was also changed in Hexo 2.8. You can check the elapsed time of each file in console now. However, I found multi-process generating didn't affect generating speed a lot. Thus, `multi_thread` and `max_open_file` setting are deprecated in Hexo 2.8.\n\n{% asset_img generate-console.png %}\n\n## Draft Publish\n\nYou don't have to enter full file name to publish a post anymore. Draft publish system is rewritten in Hexo 2.8. `new_post_name` setting will be applied until drafts are published. Besides, you can choose which layout to apply when publishing.\n\n``` bash\n$ hexo publish [layout] <filename>\n```\n\nA new API `post.publish` was added to help you publish drafts more easily.\n\n``` js\nhexo.post.publish({slug: 'hello-world', layout: 'post'}, function(err, target){\n  // ...\n});\n```\n\n## Permalink\n\nFile name and permalink now share a more universal variable system. Every variables in file name can also be read in permalink. Here's a config for example:\n\n``` yaml\npermalink: :type/:title/\nnew_post_name: :type/:title.md\n```\n\nWhen you create a post, the post will be saved to `source/_posts/test/Hello-World.md` and the URL will be `http://localhost:4000/test/Hello-World/`.\n\n``` bash\n$ hexo new \"Hello World\" --type test\n```\n\n## Multi-language Support\n\nWith the new permalink introduced in the previous section, it's much easier to create a multi-language site. For example:\n\n``` yaml\npermalink: :lang/:title/\nnew_post_name: :lang/:title.md\n```\n\nThen you can create a post with `--lang` option:\n\n``` bash\n$ hexo new \"Hello World\" --lang en\n# => This post will be saved to source/_posts/en/Hello-World.md\n# => URL: http://localhost:4000/en/Hello-World/\n\n$ hexo new \"你好世界\" --lang tw\n# => This post will be saved to source/_posts/tw/你好世界.md\n# => URL: http://localhost:4000/tw/你好世界/\n```\n\nYou can define the default value of permalink variables in `permalink_defaults` setting. For example, we define the defualt language as English.\n\n``` yaml\npermalink_defaults:\n  lang: en\n```","slug":"hexo-2-8-released","published":1,"date":"2014-07-13T00:00:00.000Z","updated":"2017-01-19T03:10:40.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy3szh590003z714x25pbn4g","content":"<p>Hexo 2.8 was rewritten, brings you better performance and many improvements. The following is the highlights in this version. You can check <a href=\"https://github.com/hexojs/hexo/releases/tag/2.8.0\" target=\"_blank\" rel=\"external\">detail</a> on GitHub.</p>\n<h2 id=\"Faster-Processing-Speed\"><a href=\"#Faster-Processing-Speed\" class=\"headerlink\" title=\"Faster Processing Speed\"></a>Faster Processing Speed</h2><p>Before Hexo 2.8, all source files have to be processed each time you use Hexo. In Hexo 2.8, the entire database will be saved to <code>db.json</code> so Hexo don’t have to process all files again. Also, a new data type “<strong>skip</strong>“ was added for processors to detect whether a file was changed or not.</p>\n<p>Generating was also changed in Hexo 2.8. You can check the elapsed time of each file in console now. However, I found multi-process generating didn’t affect generating speed a lot. Thus, <code>multi_thread</code> and <code>max_open_file</code> setting are deprecated in Hexo 2.8.</p>\n<img src=\"/news/2014/07/13/hexo-2-8-released/generate-console.png\" alt=\"generate-console.png\" title=\"\">\n<h2 id=\"Draft-Publish\"><a href=\"#Draft-Publish\" class=\"headerlink\" title=\"Draft Publish\"></a>Draft Publish</h2><p>You don’t have to enter full file name to publish a post anymore. Draft publish system is rewritten in Hexo 2.8. <code>new_post_name</code> setting will be applied until drafts are published. Besides, you can choose which layout to apply when publishing.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<p>A new API <code>post.publish</code> was added to help you publish drafts more easily.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.publish(&#123;<span class=\"attr\">slug</span>: <span class=\"string\">'hello-world'</span>, <span class=\"attr\">layout</span>: <span class=\"string\">'post'</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, target</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Permalink\"><a href=\"#Permalink\" class=\"headerlink\" title=\"Permalink\"></a>Permalink</h2><p>File name and permalink now share a more universal variable system. Every variables in file name can also be read in permalink. Here’s a config for example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink:</span> :type/:title/</div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :type/:title.md</div></pre></td></tr></table></figure>\n<p>When you create a post, the post will be saved to <code>source/_posts/test/Hello-World.md</code> and the URL will be <code>http://localhost:4000/test/Hello-World/</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --type <span class=\"built_in\">test</span></div></pre></td></tr></table></figure>\n<h2 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h2><p>With the new permalink introduced in the previous section, it’s much easier to create a multi-language site. For example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink:</span> :lang/:title/</div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :lang/:title.md</div></pre></td></tr></table></figure>\n<p>Then you can create a post with <code>--lang</code> option:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang en</div><div class=\"line\"><span class=\"comment\"># =&gt; This post will be saved to source/_posts/en/Hello-World.md</span></div><div class=\"line\"><span class=\"comment\"># =&gt; URL: http://localhost:4000/en/Hello-World/</span></div><div class=\"line\"></div><div class=\"line\">$ hexo new <span class=\"string\">\"你好世界\"</span> --lang tw</div><div class=\"line\"><span class=\"comment\"># =&gt; This post will be saved to source/_posts/tw/你好世界.md</span></div><div class=\"line\"><span class=\"comment\"># =&gt; URL: http://localhost:4000/tw/你好世界/</span></div></pre></td></tr></table></figure>\n<p>You can define the default value of permalink variables in <code>permalink_defaults</code> setting. For example, we define the defualt language as English.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"><span class=\"attr\">  lang:</span> en</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>Hexo 2.8 was rewritten, brings you better performance and many improvements. The following is the highlights in this version. You can check <a href=\"https://github.com/hexojs/hexo/releases/tag/2.8.0\">detail</a> on GitHub.</p>\n<h2 id=\"Faster-Processing-Speed\"><a href=\"#Faster-Processing-Speed\" class=\"headerlink\" title=\"Faster Processing Speed\"></a>Faster Processing Speed</h2><p>Before Hexo 2.8, all source files have to be processed each time you use Hexo. In Hexo 2.8, the entire database will be saved to <code>db.json</code> so Hexo don’t have to process all files again. Also, a new data type “<strong>skip</strong>“ was added for processors to detect whether a file was changed or not.</p>\n<p>Generating was also changed in Hexo 2.8. You can check the elapsed time of each file in console now. However, I found multi-process generating didn’t affect generating speed a lot. Thus, <code>multi_thread</code> and <code>max_open_file</code> setting are deprecated in Hexo 2.8.</p>\n<img src=\"/news/2014/07/13/hexo-2-8-released/generate-console.png\" alt=\"generate-console.png\" title=\"\">\n<h2 id=\"Draft-Publish\"><a href=\"#Draft-Publish\" class=\"headerlink\" title=\"Draft Publish\"></a>Draft Publish</h2><p>You don’t have to enter full file name to publish a post anymore. Draft publish system is rewritten in Hexo 2.8. <code>new_post_name</code> setting will be applied until drafts are published. Besides, you can choose which layout to apply when publishing.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>\n<p>A new API <code>post.publish</code> was added to help you publish drafts more easily.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\">hexo.post.publish(&#123;<span class=\"attr\">slug</span>: <span class=\"string\">'hello-world'</span>, <span class=\"attr\">layout</span>: <span class=\"string\">'post'</span>&#125;, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, target</span>)</span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"Permalink\"><a href=\"#Permalink\" class=\"headerlink\" title=\"Permalink\"></a>Permalink</h2><p>File name and permalink now share a more universal variable system. Every variables in file name can also be read in permalink. Here’s a config for example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink:</span> :type/:title/</div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :type/:title.md</div></pre></td></tr></table></figure>\n<p>When you create a post, the post will be saved to <code>source/_posts/test/Hello-World.md</code> and the URL will be <code>http://localhost:4000/test/Hello-World/</code>.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --type <span class=\"built_in\">test</span></div></pre></td></tr></table></figure>\n<h2 id=\"Multi-language-Support\"><a href=\"#Multi-language-Support\" class=\"headerlink\" title=\"Multi-language Support\"></a>Multi-language Support</h2><p>With the new permalink introduced in the previous section, it’s much easier to create a multi-language site. For example:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink:</span> :lang/:title/</div><div class=\"line\"><span class=\"attr\">new_post_name:</span> :lang/:title.md</div></pre></td></tr></table></figure>\n<p>Then you can create a post with <code>--lang</code> option:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"Hello World\"</span> --lang en</div><div class=\"line\"><span class=\"comment\"># =&gt; This post will be saved to source/_posts/en/Hello-World.md</span></div><div class=\"line\"><span class=\"comment\"># =&gt; URL: http://localhost:4000/en/Hello-World/</span></div><div class=\"line\"></div><div class=\"line\">$ hexo new <span class=\"string\">\"你好世界\"</span> --lang tw</div><div class=\"line\"><span class=\"comment\"># =&gt; This post will be saved to source/_posts/tw/你好世界.md</span></div><div class=\"line\"><span class=\"comment\"># =&gt; URL: http://localhost:4000/tw/你好世界/</span></div></pre></td></tr></table></figure>\n<p>You can define the default value of permalink variables in <code>permalink_defaults</code> setting. For example, we define the defualt language as English.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">permalink_defaults:</span></div><div class=\"line\"><span class=\"attr\">  lang:</span> en</div></pre></td></tr></table></figure>"},{"title":"New Documentation and Registry","_content":"The Hexo site has just been updated and changed to a brand new theme. The documentation is also updated and more detailed. Some handy features will make your browsing more convenient.\n\n## Official Registry\n\nBesides the new theme, a official registry for plugins and themes finally comes. The registry makes you easier to browse and search plugins. And you can preview themes with screenshots.\n\n### How to add my plugin/theme to the registry?\n\nSee the following articles for more info. Your plugin/theme will be published to the registry once the pull request is merged.\n\n- [Publish a theme](/docs/themes.html#Publishing)\n- [Publish a plugin](/docs/plugins.html#Publishing)\n\n## Localization\n\nWe have add two new languages of documentation: [Tranditional Chinese (正體中文)](/zh-tw/) and [Simplified Chinese (简体中文)](/zh-cn/). Thanks to [pinggod](https://github.com/pinggod) for the Simplified Chinese translation. We very welcome you to help us translating and make more people easier to get started with Hexo! For more info, see [translating documentation](/docs/contributing.html#Translating).\n\n## Where's API Documentation?\n\nThe API documentation is hidden so far. Please be patient. I'm updating it now. The new API doc will be released in a few days.\n","source":"_posts/2015-02-27-new-documentation-and-registry.md","raw":"title: New Documentation and Registry\n---\nThe Hexo site has just been updated and changed to a brand new theme. The documentation is also updated and more detailed. Some handy features will make your browsing more convenient.\n\n## Official Registry\n\nBesides the new theme, a official registry for plugins and themes finally comes. The registry makes you easier to browse and search plugins. And you can preview themes with screenshots.\n\n### How to add my plugin/theme to the registry?\n\nSee the following articles for more info. Your plugin/theme will be published to the registry once the pull request is merged.\n\n- [Publish a theme](/docs/themes.html#Publishing)\n- [Publish a plugin](/docs/plugins.html#Publishing)\n\n## Localization\n\nWe have add two new languages of documentation: [Tranditional Chinese (正體中文)](/zh-tw/) and [Simplified Chinese (简体中文)](/zh-cn/). Thanks to [pinggod](https://github.com/pinggod) for the Simplified Chinese translation. We very welcome you to help us translating and make more people easier to get started with Hexo! For more info, see [translating documentation](/docs/contributing.html#Translating).\n\n## Where's API Documentation?\n\nThe API documentation is hidden so far. Please be patient. I'm updating it now. The new API doc will be released in a few days.\n","slug":"new-documentation-and-registry","published":1,"date":"2015-02-27T00:00:00.000Z","updated":"2017-01-19T03:10:40.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy3szh5f0005z714g5pgrgfh","content":"<p>The Hexo site has just been updated and changed to a brand new theme. The documentation is also updated and more detailed. Some handy features will make your browsing more convenient.</p>\n<h2 id=\"Official-Registry\"><a href=\"#Official-Registry\" class=\"headerlink\" title=\"Official Registry\"></a>Official Registry</h2><p>Besides the new theme, a official registry for plugins and themes finally comes. The registry makes you easier to browse and search plugins. And you can preview themes with screenshots.</p>\n<h3 id=\"How-to-add-my-plugin-theme-to-the-registry\"><a href=\"#How-to-add-my-plugin-theme-to-the-registry\" class=\"headerlink\" title=\"How to add my plugin/theme to the registry?\"></a>How to add my plugin/theme to the registry?</h3><p>See the following articles for more info. Your plugin/theme will be published to the registry once the pull request is merged.</p>\n<ul>\n<li><a href=\"/docs/themes.html#Publishing\">Publish a theme</a></li>\n<li><a href=\"/docs/plugins.html#Publishing\">Publish a plugin</a></li>\n</ul>\n<h2 id=\"Localization\"><a href=\"#Localization\" class=\"headerlink\" title=\"Localization\"></a>Localization</h2><p>We have add two new languages of documentation: <a href=\"/zh-tw/\">Tranditional Chinese (正體中文)</a> and <a href=\"/zh-cn/\">Simplified Chinese (简体中文)</a>. Thanks to <a href=\"https://github.com/pinggod\" target=\"_blank\" rel=\"external\">pinggod</a> for the Simplified Chinese translation. We very welcome you to help us translating and make more people easier to get started with Hexo! For more info, see <a href=\"/docs/contributing.html#Translating\">translating documentation</a>.</p>\n<h2 id=\"Where’s-API-Documentation\"><a href=\"#Where’s-API-Documentation\" class=\"headerlink\" title=\"Where’s API Documentation?\"></a>Where’s API Documentation?</h2><p>The API documentation is hidden so far. Please be patient. I’m updating it now. The new API doc will be released in a few days.</p>\n","excerpt":"","more":"<p>The Hexo site has just been updated and changed to a brand new theme. The documentation is also updated and more detailed. Some handy features will make your browsing more convenient.</p>\n<h2 id=\"Official-Registry\"><a href=\"#Official-Registry\" class=\"headerlink\" title=\"Official Registry\"></a>Official Registry</h2><p>Besides the new theme, a official registry for plugins and themes finally comes. The registry makes you easier to browse and search plugins. And you can preview themes with screenshots.</p>\n<h3 id=\"How-to-add-my-plugin-theme-to-the-registry\"><a href=\"#How-to-add-my-plugin-theme-to-the-registry\" class=\"headerlink\" title=\"How to add my plugin/theme to the registry?\"></a>How to add my plugin/theme to the registry?</h3><p>See the following articles for more info. Your plugin/theme will be published to the registry once the pull request is merged.</p>\n<ul>\n<li><a href=\"/docs/themes.html#Publishing\">Publish a theme</a></li>\n<li><a href=\"/docs/plugins.html#Publishing\">Publish a plugin</a></li>\n</ul>\n<h2 id=\"Localization\"><a href=\"#Localization\" class=\"headerlink\" title=\"Localization\"></a>Localization</h2><p>We have add two new languages of documentation: <a href=\"/zh-tw/\">Tranditional Chinese (正體中文)</a> and <a href=\"/zh-cn/\">Simplified Chinese (简体中文)</a>. Thanks to <a href=\"https://github.com/pinggod\">pinggod</a> for the Simplified Chinese translation. We very welcome you to help us translating and make more people easier to get started with Hexo! For more info, see <a href=\"/docs/contributing.html#Translating\">translating documentation</a>.</p>\n<h2 id=\"Where’s-API-Documentation\"><a href=\"#Where’s-API-Documentation\" class=\"headerlink\" title=\"Where’s API Documentation?\"></a>Where’s API Documentation?</h2><p>The API documentation is hidden so far. Please be patient. I’m updating it now. The new API doc will be released in a few days.</p>\n"},{"title":"Hexo 3.0 Released","_content":"Hexo 3.0 has finally come out! After four beta and four RC versions, Hexo 3 become more stable and more powerful. Thanks for the contributors and testers! \n\n## What's Changed?\n\nThere're many improvements in Hexo 3. Better performance, API is easier to use, higher coverage, etc. Here're some notable changes:\n\n- **[New CLI](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-cli)**: Command line interface is separated into a stand-alone module: [hexo-cli]\n- **[Slimmer Core Module](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#slimmer-core-module)**: Generators, deployers and server are also separated from the main module.\n- **[New Generator API](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-generator-api)**: Generator API changed a lot in Hexo 3.\n- **[Include Assets in a Post](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#render-pipeline-changed)**: Serveral useful tag plugins are added in Hexo 3: `post_path`, `post_link`, `asset_path`, `asset_link`, `asset_img`.\n- **[Async Tag Plugins](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#async-tag-plugins)**: Tag plugins can do async jobs now!\n- **[Timezone Support](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#timezone-support)**: You can define the timezone of your site now.\n\nMore info: [Breaking Changes in Hexo 3.0], [changelog]\n\n## How to Update?\n\n1. Modify `package.json`.\n\n    {% code %}\n    {\n      \"hexo\": {\n        \"version\": \"\"\n      }\n    }\n    {% endcode %}\n    \n2. Install [hexo-cli]. If any error occurred, try to remove hexo first.\n\n    {% code %}\n    $ npm install hexo-cli -g\n    {% endcode %}\n    \n3. Install Hexo.\n\n    {% code %}\n    $ npm install hexo --save\n    {% endcode %}\n    \n4. Install plugins. You don't have to install all the following plugins. It depends on your need.\n\n    {% code %}\n    $ npm install hexo-server --save\n    $ npm install hexo-generator-index --save\n    $ npm install hexo-generator-archive --save\n    $ npm install hexo-generator-category --save\n    $ npm install hexo-generator-tag --save\n    $ npm install hexo-deployer-git --save\n    $ npm install hexo-deployer-heroku --save\n    $ npm install hexo-deployer-rsync --save\n    $ npm install hexo-deployer-openshift --save\n    {% endcode %}\n    \n5. Update plugins. Especially generators and filters. Since the API has breaking changes in Hexo 3.\n\nMore info: [Migration from 2.x to 3.0]\n\n[Migration from 2.x to 3.0]: https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0\n[hexo-cli]: https://github.com/hexojs/hexo-cli\n[Breaking Changes in Hexo 3.0]: https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0\n[changelog]: https://github.com/hexojs/hexo/releases","source":"_posts/2015-03-05-hexo-3-0-released.md","raw":"title: Hexo 3.0 Released\n---\nHexo 3.0 has finally come out! After four beta and four RC versions, Hexo 3 become more stable and more powerful. Thanks for the contributors and testers! \n\n## What's Changed?\n\nThere're many improvements in Hexo 3. Better performance, API is easier to use, higher coverage, etc. Here're some notable changes:\n\n- **[New CLI](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-cli)**: Command line interface is separated into a stand-alone module: [hexo-cli]\n- **[Slimmer Core Module](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#slimmer-core-module)**: Generators, deployers and server are also separated from the main module.\n- **[New Generator API](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-generator-api)**: Generator API changed a lot in Hexo 3.\n- **[Include Assets in a Post](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#render-pipeline-changed)**: Serveral useful tag plugins are added in Hexo 3: `post_path`, `post_link`, `asset_path`, `asset_link`, `asset_img`.\n- **[Async Tag Plugins](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#async-tag-plugins)**: Tag plugins can do async jobs now!\n- **[Timezone Support](https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#timezone-support)**: You can define the timezone of your site now.\n\nMore info: [Breaking Changes in Hexo 3.0], [changelog]\n\n## How to Update?\n\n1. Modify `package.json`.\n\n    {% code %}\n    {\n      \"hexo\": {\n        \"version\": \"\"\n      }\n    }\n    {% endcode %}\n    \n2. Install [hexo-cli]. If any error occurred, try to remove hexo first.\n\n    {% code %}\n    $ npm install hexo-cli -g\n    {% endcode %}\n    \n3. Install Hexo.\n\n    {% code %}\n    $ npm install hexo --save\n    {% endcode %}\n    \n4. Install plugins. You don't have to install all the following plugins. It depends on your need.\n\n    {% code %}\n    $ npm install hexo-server --save\n    $ npm install hexo-generator-index --save\n    $ npm install hexo-generator-archive --save\n    $ npm install hexo-generator-category --save\n    $ npm install hexo-generator-tag --save\n    $ npm install hexo-deployer-git --save\n    $ npm install hexo-deployer-heroku --save\n    $ npm install hexo-deployer-rsync --save\n    $ npm install hexo-deployer-openshift --save\n    {% endcode %}\n    \n5. Update plugins. Especially generators and filters. Since the API has breaking changes in Hexo 3.\n\nMore info: [Migration from 2.x to 3.0]\n\n[Migration from 2.x to 3.0]: https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0\n[hexo-cli]: https://github.com/hexojs/hexo-cli\n[Breaking Changes in Hexo 3.0]: https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0\n[changelog]: https://github.com/hexojs/hexo/releases","slug":"hexo-3-0-released","published":1,"date":"2015-03-05T00:00:00.000Z","updated":"2017-01-19T03:10:40.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy3szh5k0007z714swcvel7n","content":"<p>Hexo 3.0 has finally come out! After four beta and four RC versions, Hexo 3 become more stable and more powerful. Thanks for the contributors and testers! </p>\n<h2 id=\"What’s-Changed\"><a href=\"#What’s-Changed\" class=\"headerlink\" title=\"What’s Changed?\"></a>What’s Changed?</h2><p>There’re many improvements in Hexo 3. Better performance, API is easier to use, higher coverage, etc. Here’re some notable changes:</p>\n<ul>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-cli\" target=\"_blank\" rel=\"external\">New CLI</a></strong>: Command line interface is separated into a stand-alone module: <a href=\"https://github.com/hexojs/hexo-cli\" target=\"_blank\" rel=\"external\">hexo-cli</a></li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#slimmer-core-module\" target=\"_blank\" rel=\"external\">Slimmer Core Module</a></strong>: Generators, deployers and server are also separated from the main module.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-generator-api\" target=\"_blank\" rel=\"external\">New Generator API</a></strong>: Generator API changed a lot in Hexo 3.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#render-pipeline-changed\" target=\"_blank\" rel=\"external\">Include Assets in a Post</a></strong>: Serveral useful tag plugins are added in Hexo 3: <code>post_path</code>, <code>post_link</code>, <code>asset_path</code>, <code>asset_link</code>, <code>asset_img</code>.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#async-tag-plugins\" target=\"_blank\" rel=\"external\">Async Tag Plugins</a></strong>: Tag plugins can do async jobs now!</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#timezone-support\" target=\"_blank\" rel=\"external\">Timezone Support</a></strong>: You can define the timezone of your site now.</li>\n</ul>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0\" target=\"_blank\" rel=\"external\">Breaking Changes in Hexo 3.0</a>, <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"external\">changelog</a></p>\n<h2 id=\"How-to-Update\"><a href=\"#How-to-Update\" class=\"headerlink\" title=\"How to Update?\"></a>How to Update?</h2><ol>\n<li><p>Modify <code>package.json</code>.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install <a href=\"https://github.com/hexojs/hexo-cli\" target=\"_blank\" rel=\"external\">hexo-cli</a>. If any error occurred, try to remove hexo first.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install Hexo.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install plugins. You don’t have to install all the following plugins. It depends on your need.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div><div class=\"line\">$ npm install hexo-generator-index --save</div><div class=\"line\">$ npm install hexo-generator-archive --save</div><div class=\"line\">$ npm install hexo-generator-category --save</div><div class=\"line\">$ npm install hexo-generator-tag --save</div><div class=\"line\">$ npm install hexo-deployer-git --save</div><div class=\"line\">$ npm install hexo-deployer-heroku --save</div><div class=\"line\">$ npm install hexo-deployer-rsync --save</div><div class=\"line\">$ npm install hexo-deployer-openshift --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>Update plugins. Especially generators and filters. Since the API has breaking changes in Hexo 3.</p>\n</li>\n</ol>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0\" target=\"_blank\" rel=\"external\">Migration from 2.x to 3.0</a></p>\n","excerpt":"","more":"<p>Hexo 3.0 has finally come out! After four beta and four RC versions, Hexo 3 become more stable and more powerful. Thanks for the contributors and testers! </p>\n<h2 id=\"What’s-Changed\"><a href=\"#What’s-Changed\" class=\"headerlink\" title=\"What’s Changed?\"></a>What’s Changed?</h2><p>There’re many improvements in Hexo 3. Better performance, API is easier to use, higher coverage, etc. Here’re some notable changes:</p>\n<ul>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-cli\">New CLI</a></strong>: Command line interface is separated into a stand-alone module: <a href=\"https://github.com/hexojs/hexo-cli\">hexo-cli</a></li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#slimmer-core-module\">Slimmer Core Module</a></strong>: Generators, deployers and server are also separated from the main module.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#new-generator-api\">New Generator API</a></strong>: Generator API changed a lot in Hexo 3.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#render-pipeline-changed\">Include Assets in a Post</a></strong>: Serveral useful tag plugins are added in Hexo 3: <code>post_path</code>, <code>post_link</code>, <code>asset_path</code>, <code>asset_link</code>, <code>asset_img</code>.</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#async-tag-plugins\">Async Tag Plugins</a></strong>: Tag plugins can do async jobs now!</li>\n<li><strong><a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0#timezone-support\">Timezone Support</a></strong>: You can define the timezone of your site now.</li>\n</ul>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/wiki/Breaking-Changes-in-Hexo-3.0\">Breaking Changes in Hexo 3.0</a>, <a href=\"https://github.com/hexojs/hexo/releases\">changelog</a></p>\n<h2 id=\"How-to-Update\"><a href=\"#How-to-Update\" class=\"headerlink\" title=\"How to Update?\"></a>How to Update?</h2><ol>\n<li><p>Modify <code>package.json</code>.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install <a href=\"https://github.com/hexojs/hexo-cli\">hexo-cli</a>. If any error occurred, try to remove hexo first.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-cli -g</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install Hexo.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>Install plugins. You don’t have to install all the following plugins. It depends on your need.</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-server --save</div><div class=\"line\">$ npm install hexo-generator-index --save</div><div class=\"line\">$ npm install hexo-generator-archive --save</div><div class=\"line\">$ npm install hexo-generator-category --save</div><div class=\"line\">$ npm install hexo-generator-tag --save</div><div class=\"line\">$ npm install hexo-deployer-git --save</div><div class=\"line\">$ npm install hexo-deployer-heroku --save</div><div class=\"line\">$ npm install hexo-deployer-rsync --save</div><div class=\"line\">$ npm install hexo-deployer-openshift --save</div></pre></td></tr></table></figure>\n</li>\n<li><p>Update plugins. Especially generators and filters. Since the API has breaking changes in Hexo 3.</p>\n</li>\n</ol>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0\">Migration from 2.x to 3.0</a></p>\n"},{"title":"Hexo 3.2 Released","_content":"It has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","source":"_posts/2016-02-28-hexo-3-2-released.md","raw":"title: Hexo 3.2 Released\n---\nIt has been a long time that Hexo is poor at handling large website. ([#710], [#1124], [#283], [#1187], [#550], [#1769], etc.) We tried hard to solve this problem and there're several improvements in Hexo 3.2.\n\n## It's all about speed\n\n### Caching rendered contents\n\nRendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) **1.7x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold processing | 6.094s | 6.454s\nHot processing | 5.154s | 3.002s\n\n### Lazy load language files of highlight.js\n\n[highlight.js is slow][#1036]. Especially when it try to detect the language. Lazy load language files make processing faster and don't have to load bunch of unused language files. However there're some limitations:\n\n- Auto detect must be disabled.\n- You have to specify language in code block.\n\nYou can set auto detect disabled in `_config.yml`.\n\n``` yaml\nhighlight:\n  auto_detect: false\n```\n\n### Templates precompilation\n\nTheme templates are precompiled if possible. It makes generation speed **2x faster**.\n\nVersion | 3.1 | 3.2\n--- | --- | ---\nCold generation | 27.2s | 13.6s\nHot generation | 24.4s | 12.6s\n\nThe following renderers have already supported this feature.\n\n- [hexo-renderer-ejs]\n- [hexo-renderer-jade]\n- [hexo-renderer-swig]\n\nAnd it's easy to implement precompilation for renderers. Just add a `compile` function to the renderer. Take EJS renderer for example:\n\n``` js\nvar ejs = require('ejs');\nvar assign = require('object-assign');\n\nfunction ejsRenderer(data, locals) {\n  return ejs.render(data.text, assign({filename: data.path}, locals));\n}\n\nejsRenderer.compile = function(data) {\n  return ejs.compile(data.text, {\n    filename: data.path\n  });\n};\n\nmodule.exports = ejsRenderer;\n```\n\n## Include/exclude source files\n\nYou can include/exclude specified source files in `_config.yml`.\n\n``` yaml\ninclude:\n  - .htaccess\n\nexclude:\n  - tmp/**/*\n```\n\nMore info: [changelog], [benchmark results].\n\n[#710]: https://github.com/hexojs/hexo/issues/710\n[#1124]: https://github.com/hexojs/hexo/issues/1124\n[#283]: https://github.com/hexojs/hexo/issues/283\n[#1187]: https://github.com/hexojs/hexo/issues/1187\n[#550]: https://github.com/hexojs/hexo/issues/550\n[#1769]: https://github.com/hexojs/hexo/issues/1769\n[#1036]: https://github.com/hexojs/hexo/issues/1036\n[hexo-renderer-ejs]: https://github.com/hexojs/hexo-renderer-ejs\n[hexo-renderer-jade]: https://github.com/hexojs/hexo-renderer-jade\n[hexo-renderer-swig]: https://github.com/hexojs/hexo-renderer-swig\n[changelog]: https://github.com/hexojs/hexo/releases\n[benchmark results]: https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing","slug":"hexo-3-2-released","published":1,"date":"2016-02-28T00:00:00.000Z","updated":"2017-01-19T03:10:40.263Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy3szh6d0009z714nf0ix7uv","content":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\" target=\"_blank\" rel=\"external\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\" target=\"_blank\" rel=\"external\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\" target=\"_blank\" rel=\"external\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\" target=\"_blank\" rel=\"external\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\" target=\"_blank\" rel=\"external\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\" target=\"_blank\" rel=\"external\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\" target=\"_blank\" rel=\"external\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">highlight:</span></div><div class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\" target=\"_blank\" rel=\"external\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\" target=\"_blank\" rel=\"external\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\" target=\"_blank\" rel=\"external\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</div><div class=\"line\">    <span class=\"attr\">filename</span>: data.path</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">include:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> .htaccess</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">exclude:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> tmp/**/*</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\" target=\"_blank\" rel=\"external\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\" target=\"_blank\" rel=\"external\">benchmark results</a>.</p>\n","excerpt":"","more":"<p>It has been a long time that Hexo is poor at handling large website. (<a href=\"https://github.com/hexojs/hexo/issues/710\">#710</a>, <a href=\"https://github.com/hexojs/hexo/issues/1124\">#1124</a>, <a href=\"https://github.com/hexojs/hexo/issues/283\">#283</a>, <a href=\"https://github.com/hexojs/hexo/issues/1187\">#1187</a>, <a href=\"https://github.com/hexojs/hexo/issues/550\">#550</a>, <a href=\"https://github.com/hexojs/hexo/issues/1769\">#1769</a>, etc.) We tried hard to solve this problem and there’re several improvements in Hexo 3.2.</p>\n<h2 id=\"It’s-all-about-speed\"><a href=\"#It’s-all-about-speed\" class=\"headerlink\" title=\"It’s all about speed\"></a>It’s all about speed</h2><h3 id=\"Caching-rendered-contents\"><a href=\"#Caching-rendered-contents\" class=\"headerlink\" title=\"Caching rendered contents\"></a>Caching rendered contents</h3><p>Rendered contents are cached in the warehouse. This saves a lot of time and made hot processing (2nd-time processing) <strong>1.7x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold processing</td>\n<td>6.094s</td>\n<td>6.454s</td>\n</tr>\n<tr>\n<td>Hot processing</td>\n<td>5.154s</td>\n<td>3.002s</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Lazy-load-language-files-of-highlight-js\"><a href=\"#Lazy-load-language-files-of-highlight-js\" class=\"headerlink\" title=\"Lazy load language files of highlight.js\"></a>Lazy load language files of highlight.js</h3><p><a href=\"https://github.com/hexojs/hexo/issues/1036\">highlight.js is slow</a>. Especially when it try to detect the language. Lazy load language files make processing faster and don’t have to load bunch of unused language files. However there’re some limitations:</p>\n<ul>\n<li>Auto detect must be disabled.</li>\n<li>You have to specify language in code block.</li>\n</ul>\n<p>You can set auto detect disabled in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">highlight:</span></div><div class=\"line\"><span class=\"attr\">  auto_detect:</span> <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<h3 id=\"Templates-precompilation\"><a href=\"#Templates-precompilation\" class=\"headerlink\" title=\"Templates precompilation\"></a>Templates precompilation</h3><p>Theme templates are precompiled if possible. It makes generation speed <strong>2x faster</strong>.</p>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>3.1</th>\n<th>3.2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Cold generation</td>\n<td>27.2s</td>\n<td>13.6s</td>\n</tr>\n<tr>\n<td>Hot generation</td>\n<td>24.4s</td>\n<td>12.6s</td>\n</tr>\n</tbody>\n</table>\n<p>The following renderers have already supported this feature.</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-ejs\">hexo-renderer-ejs</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-jade\">hexo-renderer-jade</a></li>\n<li><a href=\"https://github.com/hexojs/hexo-renderer-swig\">hexo-renderer-swig</a></li>\n</ul>\n<p>And it’s easy to implement precompilation for renderers. Just add a <code>compile</code> function to the renderer. Take EJS renderer for example:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ejs = <span class=\"built_in\">require</span>(<span class=\"string\">'ejs'</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ejsRenderer</span>(<span class=\"params\">data, locals</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.render(data.text, assign(&#123;<span class=\"attr\">filename</span>: data.path&#125;, locals));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">ejsRenderer.compile = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> ejs.compile(data.text, &#123;</div><div class=\"line\">    <span class=\"attr\">filename</span>: data.path</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = ejsRenderer;</div></pre></td></tr></table></figure>\n<h2 id=\"Include-exclude-source-files\"><a href=\"#Include-exclude-source-files\" class=\"headerlink\" title=\"Include/exclude source files\"></a>Include/exclude source files</h2><p>You can include/exclude specified source files in <code>_config.yml</code>.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">include:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> .htaccess</div><div class=\"line\"></div><div class=\"line\"><span class=\"attr\">exclude:</span></div><div class=\"line\"><span class=\"bullet\">  -</span> tmp/**/*</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://github.com/hexojs/hexo/releases\">changelog</a>, <a href=\"https://docs.google.com/spreadsheets/d/1nLW3fPCtrkfMolz8UnUiKq5lqys6bIcZqrfksuvQHA0/edit?usp=sharing\">benchmark results</a>.</p>\n"}],"PostAsset":[{"_id":"source/_posts/2014-07-13-hexo-2-8-released/generate-console.png","slug":"generate-console.png","post":"ciy3szh590003z714x25pbn4g","modified":0,"renderable":0},{"_id":"source/_posts/2014-07-13-hexo-2-8-released/generate-console@2x.png","slug":"generate-console@2x.png","post":"ciy3szh590003z714x25pbn4g","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}